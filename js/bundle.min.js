class HtmlAttr{constructor(e,n,i){n=n.map(e=>e.toLocaleUpperCase()),this.apply=o=>{0===n.length||n.indexOf(o.tagName)>-1?"style"===e?Object.assign(o[e],i):("boolean"==typeof i||i instanceof Boolean)&&"muted"!==e?i?o.setAttribute(e,""):o.removeAttribute(e):o[e]=i:console.warn(`Element ${o.tagName} does not support Attribute ${e}`)},Object.freeze(this)}}function accessKey(e){return new HtmlAttr("accessKey",["input","button"],e)}function alt(e){return new HtmlAttr("alt",["applet","area","img","input"],e)}function ariaLabel(e){return new HtmlAttr("ariaLabel",[],e)}function className(e){return new HtmlAttr("className",[],e)}function htmlFor(e){return new HtmlAttr("htmlFor",["label","output"],e)}function height(e){return new HtmlAttr("height",["canvas","embed","iframe","img","input","object","video"],e)}function href(e){return new HtmlAttr("href",["a","area","base","link"],e)}function id(e){return new HtmlAttr("id",[],e)}function max(e){return new HtmlAttr("max",["input","meter","progress"],e)}function min(e){return new HtmlAttr("min",["input","meter"],e)}function placeHolder(e){return new HtmlAttr("placeholder",["input","textarea"],e)}function rel(e){return new HtmlAttr("rel",["a","area","link"],e)}function role(e){return new HtmlAttr("role",[],e)}function src(e){return new HtmlAttr("src",["audio","embed","iframe","img","input","script","source","track","video"],e)}function style(e){return new HtmlAttr("style",[],e)}function step(e){return new HtmlAttr("step",["input"],e)}function title(e){return new HtmlAttr("title",[],e)}function target(e){return new HtmlAttr("target",["a","area","base","form"],e)}function type(e){return new HtmlAttr("type",["button","input","command","embed","object","script","source","style","menu"],e)}function value(e){return new HtmlAttr("value",["button","data","input","li","meter","option","progress","param"],e)}function width(e){return new HtmlAttr("width",["canvas","embed","iframe","img","input","object","video"],e)}const fillPageStyle=style({position:"absolute",display:"block",top:0,left:0,width:"100%",height:"100%",padding:0,margin:0,overflow:"hidden"}),monospaceFamily="'Droid Sans Mono', 'Consolas', 'Lucida Console', 'Courier New', 'Courier', monospace",monospaceFont=style({fontFamily:monospaceFamily}),systemFamily="-apple-system, '.SFNSText-Regular', 'San Francisco', 'Roboto', 'Segoe UI', 'Helvetica Neue', 'Lucida Grande', sans-serif",systemFont=style({fontFamily:systemFamily});function isGoodNumber(e){return null!=e&&("number"==typeof e||e instanceof Number)&&!Number.isNaN(e)}function clamp(e,n,i){return Math.min(i,Math.max(n,e))}function lerp(e,n,i){return(1-i)*e+i*n}function project(e,n,i){return(e-n)/(i-n)}function unproject(e,n,i){return e*(i-n)+n}Element.prototype.isOpen=function(){return"none"!==this.style.display},Element.prototype.setOpen=function(e,n=""){this.style.display=e?n:"none"},Element.prototype.setOpenWithLabel=function(e,n,i,o,t,a=""){this.setOpen(e,a),n.updateLabel(this.isOpen(),i,o,t)},Element.prototype.updateLabel=function(e,n,i,o){o=o||"",this.accessKey&&(o+=` <kbd>(ALT+${this.accessKey.toUpperCase()})</kbd>`),this.innerHTML=(e?n:i)+o},Element.prototype.toggleOpen=function(e=""){this.setOpen(!this.isOpen(),e)},Element.prototype.toggleOpenWithLabel=function(e,n,i,o,t=""){this.setOpenWithLabel(!this.isOpen(),e,n,i,o,t)},Element.prototype.show=function(e=""){this.setOpen(!0,e)},Element.prototype.hide=function(){this.setOpen(!1)},Element.prototype.setLocked=function(e){e?this.lock():this.unlock()},Element.prototype.lock=function(){this.disabled="disabled"},Element.prototype.unlock=function(){this.disabled=""},Element.prototype.blinkBorder=function(e,n){e=2*(e||3),n=n||"rgb(255, 127, 127)";let i=!1;const o=setInterval(()=>{i=!i,this.style.backgroundColor=i?n:"",0===--e&&clearInterval(o)},125)},HTMLCanvasElement.prototype.resize=function(){this.width=this.clientWidth*devicePixelRatio,this.height=this.clientHeight*devicePixelRatio};const oldAddEventListener=HTMLInputElement.prototype.addEventListener;function add(e,n){return i=>{e(i),n(i)}}function isFunction(e){return"function"==typeof e||e instanceof Function}HTMLInputElement.prototype.addEventListener=function(e,n,i){"enter"===e?oldAddEventListener.call(this,"keypress",(function(e){"Enter"===e.key&&n(e)}),i):oldAddEventListener.call(this,e,n,i)},Response.prototype.xml=async function(){const e=await this.text();return(new DOMParser).parseFromString(e,"text/xml").documentElement},Response.prototype.html=async function(){const e=await this.text();return(new DOMParser).parseFromString(e,"text/html").documentElement},Array.prototype.random=function(e){const n=e?1:0,i=Math.floor(Math.random()*(this.length+n))-n;return i<0?e:this[i]},HTMLSelectElement.prototype.setSelectedValue=function(e){if(this.value="",null!=e){e=e.toString();for(let n of this.options)if(n.value===e)return void(this.value=e)}},Storage.prototype.getInt=function(e,n){const i=parseFloat(this.getItem(e));return Number.isInteger(i)?i:n},Event.clone=function(e,...n){for(let i of n)for(let n in i)"isTrusted"!==n&&(e[n]=i[n]);return e},EventTarget.prototype.once=function(e,n,i){return void 0===i&&isGoodNumber(n)&&(i=n,n=void 0),new Promise((o,t)=>{const a=null!=e,m=null!=n,s=add(()=>{a&&this.removeEventListener(e,o)},()=>{m&&this.removeEventListener(n,t)});if(o=add(s,o),t=add(s,t),null!=i){const e=setTimeout(()=>{t("Timeout")},i),n=()=>clearTimeout(e);o=add(n,o),t=add(n,t)}a&&this.addEventListener(e,o),m&&this.addEventListener(n,()=>{t("Rejection event found")})})},EventTarget.prototype.until=function(e,n,i,o,t){return new Promise((a,m)=>{let s=null,r=null;const w=()=>{null!==s&&clearTimeout(s),null!==r&&clearTimeout(r),this.removeEventListener(e,l)};function l(e){i(e)&&(w(),a(e))}this.addEventListener(e,l),void 0!==t&&(r=setTimeout(()=>{w(),m("timeout")},t)),s=setTimeout((function e(){n(),s=setTimeout(e,o)}),0)})},EventTarget.prototype.addEventListeners=function(e){for(let n in e){let i=e[n],o=void 0;i instanceof Array&&(o=i[1],i=i[0]),this.addEventListener(n,i,o)}},Array.prototype.clear=function(){this.splice(0)},Array.prototype.removeAt=function(e){this.splice(e,1)},String.prototype.firstLetterToUpper=function(){return this[0].toLocaleUpperCase()+this.substring(1)};class HtmlEvt{constructor(e,n,i){if(!isFunction(n))throw new Error("A function instance is required for this parameter");this.add=o=>{o.addEventListener(e,n,i)},this.remove=i=>{i.removeEventListener(e,n)},Object.freeze(this)}}function onClick(e){return new HtmlEvt("click",e)}function onInput(e){return new HtmlEvt("input",e)}function onKeyUp(e){return new HtmlEvt("keyup",e)}function tag(e,...n){const i=document.createElement(e);for(let e=0;e<n.length;++e)isFunction(n[e])&&(n[e]=n[e](!0));for(let e of n)null!=e&&(e instanceof String||"string"==typeof e||e instanceof Number||"number"==typeof e||e instanceof Boolean||"boolean"==typeof e||e instanceof Date?i.appendChild(document.createTextNode(e)):e instanceof Element?i.appendChild(e):e instanceof HtmlCustomTag?i.appendChild(e.element):e instanceof HtmlAttr?e.apply(i):e instanceof HtmlEvt?e.add(i):console.trace(`Skipping ${e}: unsupported value type.`));return i}class HtmlCustomTag extends EventTarget{constructor(e,...n){super(),1===n.length&&n[0]instanceof Element?this.element=n[0]:this.element=tag(e,...n)}}class LabeledInputTag extends HtmlCustomTag{constructor(e,n,i,...o){super("div"),this.label=Label(htmlFor(e),i),this.input=Input(type(n),...o),this.element.append(this.label,this.input),Object.seal(this)}addEventListener(e,n,i){this.input.addEventListener(e,n,i)}removeEventListener(e,n){this.input.removeEventListener(e,n)}async once(e,n,i){return await this.input.once(e,n,i)}get value(){return this.input.value}set value(e){this.input.value=e}get checked(){return this.input.checked}set checked(e){this.input.checked=e}setLocked(e){this.input.setLocked(e)}}class LabeledSelectBoxTag extends HtmlCustomTag{constructor(e,n,i,o,t,...a){super("div"),this.label=Label(htmlFor(e),n),this.select=new SelectBox(i,o,t,id(e),...a),this.element.append(this.label,this.select.element),Object.seal(this)}get emptySelectionEnabled(){return this.select.emptySelectionEnabled}set emptySelectionEnabled(e){this.select.emptySelectionEnabled=e}get values(){return this.select.values}set values(e){this.select.values=e}get options(){return this.select.options}get selectedIndex(){return this.select.selectedIndex}set selectedIndex(e){this.select.selectedIndex=e}get selectedValue(){return this.select.selectedValue}set selectedValue(e){this.select.selectedValue=e}indexOf(e){return this.select.indexOf(e)}contains(e){return this.select.contains(e)}addEventListener(e,n,i){this.select.addEventListener(e,n,i)}removeEventListener(e,n){this.select.removeEventListener(e,n)}}const selectEvt=new Event("select");class OptionPanelTag extends HtmlCustomTag{constructor(e,n,...i){super("div",id(e),H2(n),P(...i)),this.button=Button(id(e+"Btn"),onClick(()=>this.dispatchEvent(selectEvt)),n)}get visible(){return null!==this.element.style.display}set visible(e){this.element.setOpen(e),this.button.setLocked(e)}}const _values=new Map;class SelectBoxTag extends HtmlCustomTag{constructor(e,n,i,...o){if(super("select",...o),!isFunction(n))throw new Error("makeID parameter must be a Function");if(!isFunction(i))throw new Error("makeLabel parameter must be a Function");_values.set(this,[]),this.noSelectionText=e,this.makeID=e=>null!==e&&n(e)||null,this.makeLabel=e=>null!==e&&i(e)||"None",this.emptySelectionEnabled=!0,Object.seal(this)}get emptySelectionEnabled(){return this._emptySelectionEnabled}set emptySelectionEnabled(e){this._emptySelectionEnabled=e,this._render()}get values(){return _values.get(this)}set values(e){const n=this.selectedValue,i=_values.get(this);i.splice(0,i.length,...e),this._render(),this.selectedValue=n}_render(){if(clear(this.element),0===this.values.length)this.element.append(Option(this.noSelectionText)),this.element.lock();else{this.emptySelectionEnabled&&this.element.append(Option(this.noSelectionText));for(let e of this.values)this.element.append(Option(value(this.makeID(e)),this.makeLabel(e)));this.element.unlock()}}get options(){return this.element.options}get selectedIndex(){let e=this.element.selectedIndex;return this.emptySelectionEnabled&&--e,e}set selectedIndex(e){this.emptySelectionEnabled&&++e,this.element.selectedIndex=e}get selectedValue(){return 0<=this.selectedIndex&&this.selectedIndex<this.values.length?this.values[this.selectedIndex]:null}indexOf(e){return _values.get(this).findIndex(n=>null!==e&&this.makeID(e)===this.makeID(n))}set selectedValue(e){this.selectedIndex=this.indexOf(e)}contains(e){return this.indexOf(e)>=0}addEventListener(e,n,i){this.element.addEventListener(e,n,i)}removeEventListener(e,n){this.element.removeEventListener(e,n)}setOpen(e){this.element.setOpen(e)}get style(){return this.element.style}}function clear(e){for(;e.lastChild;)e.lastChild.remove()}function A(...e){return tag("a",...e)}function Aside(...e){return tag("aside",...e)}function HtmlButton(...e){return tag("button",...e)}function Button(...e){return HtmlButton(...e,type("button"))}function Canvas(...e){return tag("canvas",...e)}function Div(...e){return tag("div",...e)}function H1(...e){return tag("h1",...e)}function H2(...e){return tag("h2",...e)}function Img(...e){return tag("img",...e)}function Input(...e){return tag("input",...e)}function KBD(...e){return tag("kbd",...e)}function Label(...e){return tag("label",...e)}function LI(...e){return tag("li",...e)}function Option(...e){return tag("option",...e)}function P(...e){return tag("p",...e)}function Span(...e){return tag("span",...e)}function Strong(...e){return tag("strong",...e)}function UL(...e){return tag("ul",...e)}function LabeledInput(e,n,i,...o){return new LabeledInputTag(e,n,i,...o)}function SelectBox(e,n,i,...o){return new SelectBoxTag(e,n,i,...o)}function LabeledSelectBox(e,n,i,o,t,...a){return new LabeledSelectBoxTag(e,n,i,o,t,...a)}function OptionPanel(e,n,...i){return new OptionPanelTag(e,n,...i)}class FormDialog extends EventTarget{constructor(e,...n){super();const i=style({display:"grid",gridTemplateColumns:"5fr 1fr 1fr",gridTemplateRows:"auto auto 1fr auto auto",overflowY:"hidden",fontFamily:systemFamily});this.element=document.getElementById(e)||Div(id(e),className("dialog"),H1(...n)),i.apply(this.element),style({gridArea:"1/1/2/4"}).apply(this.element.querySelector("h1")),this.header=this.element.querySelector(".header")||this.element.appendChild(Div(className("header"))),style({gridArea:"2/1/3/4"}).apply(this.header),this.content=this.element.querySelector(".content")||this.element.appendChild(Div(className("content"))),style({overflowY:"scroll",gridArea:"3/1/4/4"}).apply(this.content),this.footer=this.element.querySelector(".footer")||this.element.appendChild(Div(className("footer"))),style({display:"flex",flexDirection:"row-reverse",gridArea:"4/1/5/4"}).apply(this.footer)}appendChild(e){return this.element.appendChild(e)}append(...e){this.element.append(...e)}show(){this.element.show("grid")}hide(){this.element.hide()}toggleOpen(){this.element.toggleOpen("grid")}}class Emoji{constructor(e,n){this.value=e,this.desc=n}}class EmojiGroup extends Emoji{constructor(e,n,...i){super(e,n),this.alts=i,this.width=null}random(){return this.alts.random()}}function isInSet(e,n){return e.value===n||e.alts&&e.alts.findIndex(e=>e.value===n)>=0}function isSurfer(e){return isInSet(personSurfing,e)||isInSet(manSurfing,e)||isInSet(womanSurfing,e)||isInSet(personRowing,e)||isInSet(manRowing,e)||isInSet(womanRowing,e)||isInSet(personSwimming,e)||isInSet(manSwimming,e)||isInSet(womanSwimming,e)}const whiteChessKing=new Emoji("♔","White Chess King"),whiteChessQueen=new Emoji("♕","White Chess Queen"),whiteChessRook=new Emoji("♖","White Chess Rook"),whiteChessBishop=new Emoji("♗","White Chess Bishop"),whiteChessKnight=new Emoji("♘","White Chess Knight"),whiteChessPawn=new Emoji("♙","White Chess Pawn"),whiteChessPieces=Object.assign(new EmojiGroup(whiteChessKing.value+whiteChessQueen.value+whiteChessRook.value+whiteChessBishop.value+whiteChessKnight.value+whiteChessPawn.value,"White Chess Pieces",whiteChessKing,whiteChessQueen,whiteChessRook,whiteChessBishop,whiteChessKnight,whiteChessPawn),{width:"auto",king:whiteChessKing,queen:whiteChessQueen,rook:whiteChessRook,bishop:whiteChessBishop,knight:whiteChessKnight,pawn:whiteChessPawn}),blackChessKing=new Emoji("♚","Black Chess King"),blackChessQueen=new Emoji("♛","Black Chess Queen"),blackChessRook=new Emoji("♜","Black Chess Rook"),blackChessBishop=new Emoji("♝","Black Chess Bishop"),blackChessKnight=new Emoji("♞","Black Chess Knight"),blackChessPawn=new Emoji("♟","Black Chess Pawn"),blackChessPieces=Object.assign(new EmojiGroup(blackChessKing.value+blackChessQueen.value+blackChessRook.value+blackChessBishop.value+blackChessKnight.value+blackChessPawn.value,"Black Chess Pieces",blackChessKing,blackChessQueen,blackChessRook,blackChessBishop,blackChessKnight,blackChessPawn),{width:"auto",king:blackChessKing,queen:blackChessQueen,rook:blackChessRook,bishop:blackChessBishop,knight:blackChessKnight,pawn:blackChessPawn}),chessPawns=Object.assign(new EmojiGroup(whiteChessPawn.value+blackChessPawn.value,"Chess Pawns",whiteChessPawn,blackChessPawn),{width:"auto",white:whiteChessPawn,black:blackChessPawn}),chessRooks=Object.assign(new EmojiGroup(whiteChessRook.value+blackChessRook.value,"Chess Rooks",whiteChessRook,blackChessRook),{width:"auto",white:whiteChessRook,black:blackChessRook}),chessBishops=Object.assign(new EmojiGroup(whiteChessBishop.value+blackChessBishop.value,"Chess Bishops",whiteChessBishop,blackChessBishop),{width:"auto",white:whiteChessBishop,black:blackChessBishop}),chessKnights=Object.assign(new EmojiGroup(whiteChessKnight.value+blackChessKnight.value,"Chess Knights",whiteChessKnight,blackChessKnight),{width:"auto",white:whiteChessKnight,black:blackChessKnight}),chessQueens=Object.assign(new EmojiGroup(whiteChessQueen.value+blackChessQueen.value,"Chess Queens",whiteChessQueen,blackChessQueen),{width:"auto",white:whiteChessQueen,black:blackChessQueen}),chessKings=Object.assign(new EmojiGroup(whiteChessKing.value+blackChessKing.value,"Chess Kings",whiteChessKing,blackChessKing),{width:"auto",white:whiteChessKing,black:blackChessKing}),chess=Object.assign(new EmojiGroup(chessKings.value,"Chess Pieces",whiteChessPieces,blackChessPieces,chessPawns,chessRooks,chessBishops,chessKnights,chessQueens,chessKings),{width:"auto",white:whiteChessPieces,black:blackChessPieces,pawns:chessPawns,rooks:chessRooks,bishops:chessBishops,knights:chessKnights,queens:chessQueens,kings:chessKings}),personSurfingLightSkinTone=new Emoji("🏄🏻","person surfing: light skin tone"),personSurfingMediumLightSkinTone=new Emoji("🏄🏼","person surfing: medium-light skin tone"),personSurfingMediumSkinTone=new Emoji("🏄🏽","person surfing: medium skin tone"),personSurfingMediumDarkSkinTone=new Emoji("🏄🏾","person surfing: medium-dark skin tone"),personSurfingDarkSkinTone=new Emoji("🏄🏿","person surfing: dark skin tone"),personSurfing=new EmojiGroup("🏄","person surfing",personSurfingLightSkinTone,personSurfingMediumLightSkinTone,personSurfingMediumSkinTone,personSurfingMediumDarkSkinTone,personSurfingDarkSkinTone),manSurfing=new EmojiGroup("🏄‍♂️","man surfing",new Emoji("🏄🏻‍♂️","man surfing: light skin tone"),new Emoji("🏄🏼‍♂️","man surfing: medium-light skin tone"),new Emoji("🏄🏽‍♂️","man surfing: medium skin tone"),new Emoji("🏄🏾‍♂️","man surfing: medium-dark skin tone"),new Emoji("🏄🏿‍♂️","man surfing: dark skin tone")),womanSurfing=new EmojiGroup("🏄‍♀️","woman surfing",new Emoji("🏄🏻‍♀️","woman surfing: light skin tone"),new Emoji("🏄🏼‍♀️","woman surfing: medium-light skin tone"),new Emoji("🏄🏽‍♀️","woman surfing: medium skin tone"),new Emoji("🏄🏾‍♀️","woman surfing: medium-dark skin tone"),new Emoji("🏄🏿‍♀️","woman surfing: dark skin tone")),personRowing=new EmojiGroup("🚣","person rowing boat",new Emoji("🚣🏻","person rowing boat: light skin tone"),new Emoji("🚣🏼","person rowing boat: medium-light skin tone"),new Emoji("🚣🏽","person rowing boat: medium skin tone"),new Emoji("🚣🏾","person rowing boat: medium-dark skin tone"),new Emoji("🚣🏿","person rowing boat: dark skin tone")),manRowing=new EmojiGroup("🚣‍♂️","man rowing boat",new Emoji("🚣🏻‍♂️","man rowing boat: light skin tone"),new Emoji("🚣🏼‍♂️","man rowing boat: medium-light skin tone"),new Emoji("🚣🏽‍♂️","man rowing boat: medium skin tone"),new Emoji("🚣🏾‍♂️","man rowing boat: medium-dark skin tone"),new Emoji("🚣🏿‍♂️","man rowing boat: dark skin tone")),womanRowing=new EmojiGroup("🚣‍♀️","woman rowing boat",new Emoji("🚣🏻‍♀️","woman rowing boat: light skin tone"),new Emoji("🚣🏼‍♀️","woman rowing boat: medium-light skin tone"),new Emoji("🚣🏽‍♀️","woman rowing boat: medium skin tone"),new Emoji("🚣🏾‍♀️","woman rowing boat: medium-dark skin tone"),new Emoji("🚣🏿‍♀️","woman rowing boat: dark skin tone")),personSwimming=new EmojiGroup("🏊","person swimming",new Emoji("🏊🏻","person swimming: light skin tone"),new Emoji("🏊🏼","person swimming: medium-light skin tone"),new Emoji("🏊🏽","person swimming: medium skin tone"),new Emoji("🏊🏾","person swimming: medium-dark skin tone"),new Emoji("🏊🏿","person swimming: dark skin tone")),manSwimming=new EmojiGroup("🏊‍♂️","man swimming",new Emoji("🏊🏻‍♂️","man swimming: light skin tone"),new Emoji("🏊🏼‍♂️","man swimming: medium-light skin tone"),new Emoji("🏊🏽‍♂️","man swimming: medium skin tone"),new Emoji("🏊🏾‍♂️","man swimming: medium-dark skin tone"),new Emoji("🏊🏿‍♂️","man swimming: dark skin tone")),womanSwimming=new EmojiGroup("🏊‍♀️","woman swimming",new Emoji("🏊🏻‍♀️","woman swimming: light skin tone"),new Emoji("🏊🏼‍♀️","woman swimming: medium-light skin tone"),new Emoji("🏊🏽‍♀️","woman swimming: medium skin tone"),new Emoji("🏊🏾‍♀️","woman swimming: medium-dark skin tone"),new Emoji("🏊🏿‍♀️","woman swimming: dark skin tone")),personFrowning=new EmojiGroup("🙍","person frowning",new Emoji("🙍🏻","person frowning: light skin tone"),new Emoji("🙍🏼","person frowning: medium-light skin tone"),new Emoji("🙍🏽","person frowning: medium skin tone"),new Emoji("🙍🏾","person frowning: medium-dark skin tone"),new Emoji("🙍🏿","person frowning: dark skin tone")),manFrowning=new EmojiGroup("🙍‍♂️","man frowning",new Emoji("🙍🏻‍♂️","man frowning: light skin tone"),new Emoji("🙍🏼‍♂️","man frowning: medium-light skin tone"),new Emoji("🙍🏽‍♂️","man frowning: medium skin tone"),new Emoji("🙍🏾‍♂️","man frowning: medium-dark skin tone"),new Emoji("🙍🏿‍♂️","man frowning: dark skin tone")),womanFrowning=new EmojiGroup("🙍‍♀️","woman frowning",new Emoji("🙍🏻‍♀️","woman frowning: light skin tone"),new Emoji("🙍🏼‍♀️","woman frowning: medium-light skin tone"),new Emoji("🙍🏽‍♀️","woman frowning: medium skin tone"),new Emoji("🙍🏾‍♀️","woman frowning: medium-dark skin tone"),new Emoji("🙍🏿‍♀️","woman frowning: dark skin tone")),personPouting=new EmojiGroup("🙎","person pouting",new Emoji("🙎🏻","person pouting: light skin tone"),new Emoji("🙎🏼","person pouting: medium-light skin tone"),new Emoji("🙎🏽","person pouting: medium skin tone"),new Emoji("🙎🏾","person pouting: medium-dark skin tone"),new Emoji("🙎🏿","person pouting: dark skin tone")),manPouting=new EmojiGroup("🙎‍♂️","man pouting",new Emoji("🙎🏻‍♂️","man pouting: light skin tone"),new Emoji("🙎🏼‍♂️","man pouting: medium-light skin tone"),new Emoji("🙎🏽‍♂️","man pouting: medium skin tone"),new Emoji("🙎🏾‍♂️","man pouting: medium-dark skin tone"),new Emoji("🙎🏿‍♂️","man pouting: dark skin tone")),womanPouting=new EmojiGroup("🙎‍♀️","woman pouting",new Emoji("🙎🏻‍♀️","woman pouting: light skin tone"),new Emoji("🙎🏼‍♀️","woman pouting: medium-light skin tone"),new Emoji("🙎🏽‍♀️","woman pouting: medium skin tone"),new Emoji("🙎🏾‍♀️","woman pouting: medium-dark skin tone"),new Emoji("🙎🏿‍♀️","woman pouting: dark skin tone")),baby=new EmojiGroup("👶","baby",new Emoji("👶🏻","baby: light skin tone"),new Emoji("👶🏼","baby: medium-light skin tone"),new Emoji("👶🏽","baby: medium skin tone"),new Emoji("👶🏾","baby: medium-dark skin tone"),new Emoji("👶🏿","baby: dark skin tone")),child=new EmojiGroup("🧒","child",new Emoji("🧒🏻","child: light skin tone"),new Emoji("🧒🏼","child: medium-light skin tone"),new Emoji("🧒🏽","child: medium skin tone"),new Emoji("🧒🏾","child: medium-dark skin tone"),new Emoji("🧒🏿","child: dark skin tone")),boy=new EmojiGroup("👦","boy",new Emoji("👦🏻","boy: light skin tone"),new Emoji("👦🏼","boy: medium-light skin tone"),new Emoji("👦🏽","boy: medium skin tone"),new Emoji("👦🏾","boy: medium-dark skin tone"),new Emoji("👦🏿","boy: dark skin tone")),girl=new EmojiGroup("👧","girl",new Emoji("👧🏻","girl: light skin tone"),new Emoji("👧🏼","girl: medium-light skin tone"),new Emoji("👧🏽","girl: medium skin tone"),new Emoji("👧🏾","girl: medium-dark skin tone"),new Emoji("👧🏿","girl: dark skin tone")),person=new EmojiGroup("🧑","person",new Emoji("🧑🏻","person: light skin tone"),new Emoji("🧑🏼","person: medium-light skin tone"),new Emoji("🧑🏽","person: medium skin tone"),new Emoji("🧑🏾","person: medium-dark skin tone"),new Emoji("🧑🏿","person: dark skin tone")),blondPerson=new EmojiGroup("👱","person: blond hair",new Emoji("👱🏻","person: light skin tone, blond hair"),new Emoji("👱🏼","person: medium-light skin tone, blond hair"),new Emoji("👱🏽","person: medium skin tone, blond hair"),new Emoji("👱🏾","person: medium-dark skin tone, blond hair"),new Emoji("👱🏿","person: dark skin tone, blond hair")),olderPerson=new EmojiGroup("🧓","older person",new Emoji("🧓🏻","older person: light skin tone"),new Emoji("🧓🏼","older person: medium-light skin tone"),new Emoji("🧓🏽","older person: medium skin tone"),new Emoji("🧓🏾","older person: medium-dark skin tone"),new Emoji("🧓🏿","older person: dark skin tone")),personGesturingNo=new EmojiGroup("🙅","person gesturing NO",new Emoji("🙅🏻","person gesturing NO: light skin tone"),new Emoji("🙅🏼","person gesturing NO: medium-light skin tone"),new Emoji("🙅🏽","person gesturing NO: medium skin tone"),new Emoji("🙅🏾","person gesturing NO: medium-dark skin tone"),new Emoji("🙅🏿","person gesturing NO: dark skin tone")),manGesturingNo=new EmojiGroup("🙅‍♂️","man gesturing NO",new Emoji("🙅🏻‍♂️","man gesturing NO: light skin tone"),new Emoji("🙅🏼‍♂️","man gesturing NO: medium-light skin tone"),new Emoji("🙅🏽‍♂️","man gesturing NO: medium skin tone"),new Emoji("🙅🏾‍♂️","man gesturing NO: medium-dark skin tone"),new Emoji("🙅🏿‍♂️","man gesturing NO: dark skin tone")),womanGesturingNo=new EmojiGroup("🙅‍♀️","woman gesturing NO",new Emoji("🙅🏻‍♀️","woman gesturing NO: light skin tone"),new Emoji("🙅🏼‍♀️","woman gesturing NO: medium-light skin tone"),new Emoji("🙅🏽‍♀️","woman gesturing NO: medium skin tone"),new Emoji("🙅🏾‍♀️","woman gesturing NO: medium-dark skin tone"),new Emoji("🙅🏿‍♀️","woman gesturing NO: dark skin tone")),man=new EmojiGroup("👨","man",new Emoji("👨🏻","man: light skin tone"),new Emoji("👨🏼","man: medium-light skin tone"),new Emoji("👨🏽","man: medium skin tone"),new Emoji("👨🏾","man: medium-dark skin tone"),new Emoji("👨🏿","man: dark skin tone")),blondMan=new EmojiGroup("👱‍♂️","man: blond hair",new Emoji("👱🏻‍♂️","man: light skin tone, blond hair"),new Emoji("👱🏼‍♂️","man: medium-light skin tone, blond hair"),new Emoji("👱🏽‍♂️","man: medium skin tone, blond hair"),new Emoji("👱🏾‍♂️","man: medium-dark skin tone, blond hair"),new Emoji("👱🏿‍♂️","man: dark skin tone, blond hair")),redHairedMan=new EmojiGroup("👨‍🦰","man: red hair",new Emoji("👨🏻‍🦰","man: light skin tone, red hair"),new Emoji("👨🏼‍🦰","man: medium-light skin tone, red hair"),new Emoji("👨🏽‍🦰","man: medium skin tone, red hair"),new Emoji("👨🏾‍🦰","man: medium-dark skin tone, red hair"),new Emoji("👨🏿‍🦰","man: dark skin tone, red hair")),curlyHairedMan=new EmojiGroup("👨‍🦱","man: curly hair",new Emoji("👨🏻‍🦱","man: light skin tone, curly hair"),new Emoji("👨🏼‍🦱","man: medium-light skin tone, curly hair"),new Emoji("👨🏽‍🦱","man: medium skin tone, curly hair"),new Emoji("👨🏾‍🦱","man: medium-dark skin tone, curly hair"),new Emoji("👨🏿‍🦱","man: dark skin tone, curly hair")),whiteHairedMan=new EmojiGroup("👨‍🦳","man: white hair",new Emoji("👨🏻‍🦳","man: light skin tone, white hair"),new Emoji("👨🏼‍🦳","man: medium-light skin tone, white hair"),new Emoji("👨🏽‍🦳","man: medium skin tone, white hair"),new Emoji("👨🏾‍🦳","man: medium-dark skin tone, white hair"),new Emoji("👨🏿‍🦳","man: dark skin tone, white hair")),baldMan=new EmojiGroup("👨‍🦲","man: bald",new Emoji("👨🏻‍🦲","man: light skin tone, bald"),new Emoji("👨🏼‍🦲","man: medium-light skin tone, bald"),new Emoji("👨🏽‍🦲","man: medium skin tone, bald"),new Emoji("👨🏾‍🦲","man: medium-dark skin tone, bald"),new Emoji("👨🏿‍🦲","man: dark skin tone, bald")),beardedMan=new EmojiGroup("🧔","man: beard",new Emoji("🧔🏻","man: light skin tone, beard"),new Emoji("🧔🏼","man: medium-light skin tone, beard"),new Emoji("🧔🏽","man: medium skin tone, beard"),new Emoji("🧔🏾","man: medium-dark skin tone, beard"),new Emoji("🧔🏿","man: dark skin tone, beard")),oldMan=new EmojiGroup("👴","old man",new Emoji("👴🏻","old man: light skin tone"),new Emoji("👴🏼","old man: medium-light skin tone"),new Emoji("👴🏽","old man: medium skin tone"),new Emoji("👴🏾","old man: medium-dark skin tone"),new Emoji("👴🏿","old man: dark skin tone")),woman=new EmojiGroup("👩","woman",new Emoji("👩🏻","woman: light skin tone"),new Emoji("👩🏼","woman: medium-light skin tone"),new Emoji("👩🏽","woman: medium skin tone"),new Emoji("👩🏾","woman: medium-dark skin tone"),new Emoji("👩🏿","woman: dark skin tone")),blondWoman=new EmojiGroup("👱‍♀️","woman: blond hair",new Emoji("👱🏻‍♀️","woman: light skin tone, blond hair"),new Emoji("👱🏼‍♀️","woman: medium-light skin tone, blond hair"),new Emoji("👱🏽‍♀️","woman: medium skin tone, blond hair"),new Emoji("👱🏾‍♀️","woman: medium-dark skin tone, blond hair"),new Emoji("👱🏿‍♀️","woman: dark skin tone, blond hair")),redHairedWoman=new EmojiGroup("👩‍🦰","woman: red hair",new Emoji("👩🏻‍🦰","woman: light skin tone, red hair"),new Emoji("👩🏼‍🦰","woman: medium-light skin tone, red hair"),new Emoji("👩🏽‍🦰","woman: medium skin tone, red hair"),new Emoji("👩🏾‍🦰","woman: medium-dark skin tone, red hair"),new Emoji("👩🏿‍🦰","woman: dark skin tone, red hair")),curlyHairedWoman=new EmojiGroup("👩‍🦱","woman: curly hair",new Emoji("👩🏻‍🦱","woman: light skin tone, curly hair"),new Emoji("👩🏼‍🦱","woman: medium-light skin tone, curly hair"),new Emoji("👩🏽‍🦱","woman: medium skin tone, curly hair"),new Emoji("👩🏾‍🦱","woman: medium-dark skin tone, curly hair"),new Emoji("👩🏿‍🦱","woman: dark skin tone, curly hair")),whiteHairedWoman=new EmojiGroup("👩‍🦳","woman: white hair",new Emoji("👩🏻‍🦳","woman: light skin tone, white hair"),new Emoji("👩🏼‍🦳","woman: medium-light skin tone, white hair"),new Emoji("👩🏽‍🦳","woman: medium skin tone, white hair"),new Emoji("👩🏾‍🦳","woman: medium-dark skin tone, white hair"),new Emoji("👩🏿‍🦳","woman: dark skin tone, white hair")),baldWoman=new EmojiGroup("👩‍🦲","woman: bald",new Emoji("👩🏻‍🦲","woman: light skin tone, bald"),new Emoji("👩🏼‍🦲","woman: medium-light skin tone, bald"),new Emoji("👩🏽‍🦲","woman: medium skin tone, bald"),new Emoji("👩🏾‍🦲","woman: medium-dark skin tone, bald"),new Emoji("👩🏿‍🦲","woman: dark skin tone, bald")),oldWoman=new EmojiGroup("👵","old woman",new Emoji("👵🏻","old woman: light skin tone"),new Emoji("👵🏼","old woman: medium-light skin tone"),new Emoji("👵🏽","old woman: medium skin tone"),new Emoji("👵🏾","old woman: medium-dark skin tone"),new Emoji("👵🏿","old woman: dark skin tone")),personGesturingOK=new EmojiGroup("🙆","person gesturing OK",new Emoji("🙆🏻","person gesturing OK: light skin tone"),new Emoji("🙆🏼","person gesturing OK: medium-light skin tone"),new Emoji("🙆🏽","person gesturing OK: medium skin tone"),new Emoji("🙆🏾","person gesturing OK: medium-dark skin tone"),new Emoji("🙆🏿","person gesturing OK: dark skin tone")),manGesturingOK=new EmojiGroup("🙆‍♂️","man gesturing OK",new Emoji("🙆🏻‍♂️","man gesturing OK: light skin tone"),new Emoji("🙆🏼‍♂️","man gesturing OK: medium-light skin tone"),new Emoji("🙆🏽‍♂️","man gesturing OK: medium skin tone"),new Emoji("🙆🏾‍♂️","man gesturing OK: medium-dark skin tone"),new Emoji("🙆🏿‍♂️","man gesturing OK: dark skin tone")),womanGesturingOK=new EmojiGroup("🙆‍♀️","woman gesturing OK",new Emoji("🙆🏻‍♀️","woman gesturing OK: light skin tone"),new Emoji("🙆🏼‍♀️","woman gesturing OK: medium-light skin tone"),new Emoji("🙆🏽‍♀️","woman gesturing OK: medium skin tone"),new Emoji("🙆🏾‍♀️","woman gesturing OK: medium-dark skin tone"),new Emoji("🙆🏿‍♀️","woman gesturing OK: dark skin tone")),personTippingHand=new EmojiGroup("💁","person tipping hand",new Emoji("💁🏻","person tipping hand: light skin tone"),new Emoji("💁🏼","person tipping hand: medium-light skin tone"),new Emoji("💁🏽","person tipping hand: medium skin tone"),new Emoji("💁🏾","person tipping hand: medium-dark skin tone"),new Emoji("💁🏿","person tipping hand: dark skin tone")),manTippingHand=new EmojiGroup("💁‍♂️","man tipping hand",new Emoji("💁🏻‍♂️","man tipping hand: light skin tone"),new Emoji("💁🏼‍♂️","man tipping hand: medium-light skin tone"),new Emoji("💁🏽‍♂️","man tipping hand: medium skin tone"),new Emoji("💁🏾‍♂️","man tipping hand: medium-dark skin tone"),new Emoji("💁🏿‍♂️","man tipping hand: dark skin tone")),womanTippingHand=new EmojiGroup("💁‍♀️","woman tipping hand",new Emoji("💁🏻‍♀️","woman tipping hand: light skin tone"),new Emoji("💁🏼‍♀️","woman tipping hand: medium-light skin tone"),new Emoji("💁🏽‍♀️","woman tipping hand: medium skin tone"),new Emoji("💁🏾‍♀️","woman tipping hand: medium-dark skin tone"),new Emoji("💁🏿‍♀️","woman tipping hand: dark skin tone")),personRaisingHand=new EmojiGroup("🙋","person raising hand",new Emoji("🙋🏻","person raising hand: light skin tone"),new Emoji("🙋🏼","person raising hand: medium-light skin tone"),new Emoji("🙋🏽","person raising hand: medium skin tone"),new Emoji("🙋🏾","person raising hand: medium-dark skin tone"),new Emoji("🙋🏿","person raising hand: dark skin tone")),manRaisingHand=new EmojiGroup("🙋‍♂️","man raising hand",new Emoji("🙋🏻‍♂️","man raising hand: light skin tone"),new Emoji("🙋🏼‍♂️","man raising hand: medium-light skin tone"),new Emoji("🙋🏽‍♂️","man raising hand: medium skin tone"),new Emoji("🙋🏾‍♂️","man raising hand: medium-dark skin tone"),new Emoji("🙋🏿‍♂️","man raising hand: dark skin tone")),womanRaisingHand=new EmojiGroup("🙋‍♀️","woman raising hand",new Emoji("🙋🏻‍♀️","woman raising hand: light skin tone"),new Emoji("🙋🏼‍♀️","woman raising hand: medium-light skin tone"),new Emoji("🙋🏽‍♀️","woman raising hand: medium skin tone"),new Emoji("🙋🏾‍♀️","woman raising hand: medium-dark skin tone"),new Emoji("🙋🏿‍♀️","woman raising hand: dark skin tone")),deafPerson=new EmojiGroup("🧏","deaf person",new Emoji("🧏🏻","deaf person: light skin tone"),new Emoji("🧏🏼","deaf person: medium-light skin tone"),new Emoji("🧏🏽","deaf person: medium skin tone"),new Emoji("🧏🏾","deaf person: medium-dark skin tone"),new Emoji("🧏🏿","deaf person: dark skin tone")),deafMan=new EmojiGroup("🧏‍♂️","deaf man",new Emoji("🧏🏻‍♂️","deaf man: light skin tone"),new Emoji("🧏🏼‍♂️","deaf man: medium-light skin tone"),new Emoji("🧏🏽‍♂️","deaf man: medium skin tone"),new Emoji("🧏🏾‍♂️","deaf man: medium-dark skin tone"),new Emoji("🧏🏿‍♂️","deaf man: dark skin tone")),deafWoman=new EmojiGroup("🧏‍♀️","deaf woman",new Emoji("🧏🏻‍♀️","deaf woman: light skin tone"),new Emoji("🧏🏼‍♀️","deaf woman: medium-light skin tone"),new Emoji("🧏🏽‍♀️","deaf woman: medium skin tone"),new Emoji("🧏🏾‍♀️","deaf woman: medium-dark skin tone"),new Emoji("🧏🏿‍♀️","deaf woman: dark skin tone")),personBowing=new EmojiGroup("🙇","person bowing",new Emoji("🙇🏻","person bowing: light skin tone"),new Emoji("🙇🏼","person bowing: medium-light skin tone"),new Emoji("🙇🏽","person bowing: medium skin tone"),new Emoji("🙇🏾","person bowing: medium-dark skin tone"),new Emoji("🙇🏿","person bowing: dark skin tone")),manBowing=new EmojiGroup("🙇‍♂️","man bowing",new Emoji("🙇🏻‍♂️","man bowing: light skin tone"),new Emoji("🙇🏼‍♂️","man bowing: medium-light skin tone"),new Emoji("🙇🏽‍♂️","man bowing: medium skin tone"),new Emoji("🙇🏾‍♂️","man bowing: medium-dark skin tone"),new Emoji("🙇🏿‍♂️","man bowing: dark skin tone")),womanBowing=new EmojiGroup("🙇‍♀️","woman bowing",new Emoji("🙇🏻‍♀️","woman bowing: light skin tone"),new Emoji("🙇🏼‍♀️","woman bowing: medium-light skin tone"),new Emoji("🙇🏽‍♀️","woman bowing: medium skin tone"),new Emoji("🙇🏾‍♀️","woman bowing: medium-dark skin tone"),new Emoji("🙇🏿‍♀️","woman bowing: dark skin tone")),personFacePalming=new EmojiGroup("🤦","person facepalming",new Emoji("🤦🏻","person facepalming: light skin tone"),new Emoji("🤦🏼","person facepalming: medium-light skin tone"),new Emoji("🤦🏽","person facepalming: medium skin tone"),new Emoji("🤦🏾","person facepalming: medium-dark skin tone"),new Emoji("🤦🏿","person facepalming: dark skin tone")),manFacePalming=new EmojiGroup("🤦‍♂️","man facepalming",new Emoji("🤦🏻‍♂️","man facepalming: light skin tone"),new Emoji("🤦🏼‍♂️","man facepalming: medium-light skin tone"),new Emoji("🤦🏽‍♂️","man facepalming: medium skin tone"),new Emoji("🤦🏾‍♂️","man facepalming: medium-dark skin tone"),new Emoji("🤦🏿‍♂️","man facepalming: dark skin tone")),womanFacePalming=new EmojiGroup("🤦‍♀️","woman facepalming",new Emoji("🤦🏻‍♀️","woman facepalming: light skin tone"),new Emoji("🤦🏼‍♀️","woman facepalming: medium-light skin tone"),new Emoji("🤦🏽‍♀️","woman facepalming: medium skin tone"),new Emoji("🤦🏾‍♀️","woman facepalming: medium-dark skin tone"),new Emoji("🤦🏿‍♀️","woman facepalming: dark skin tone")),personShrugging=new EmojiGroup("🤷","person shrugging",new Emoji("🤷🏻","person shrugging: light skin tone"),new Emoji("🤷🏼","person shrugging: medium-light skin tone"),new Emoji("🤷🏽","person shrugging: medium skin tone"),new Emoji("🤷🏾","person shrugging: medium-dark skin tone"),new Emoji("🤷🏿","person shrugging: dark skin tone")),manShrugging=new EmojiGroup("🤷‍♂️","man shrugging",new Emoji("🤷🏻‍♂️","man shrugging: light skin tone"),new Emoji("🤷🏼‍♂️","man shrugging: medium-light skin tone"),new Emoji("🤷🏽‍♂️","man shrugging: medium skin tone"),new Emoji("🤷🏾‍♂️","man shrugging: medium-dark skin tone"),new Emoji("🤷🏿‍♂️","man shrugging: dark skin tone")),womanShrugging=new EmojiGroup("🤷‍♀️","woman shrugging",new Emoji("🤷🏻‍♀️","woman shrugging: light skin tone"),new Emoji("🤷🏼‍♀️","woman shrugging: medium-light skin tone"),new Emoji("🤷🏽‍♀️","woman shrugging: medium skin tone"),new Emoji("🤷🏾‍♀️","woman shrugging: medium-dark skin tone"),new Emoji("🤷🏿‍♀️","woman shrugging: dark skin tone")),gestures=new EmojiGroup(personGesturingOK.value,"gestures",new EmojiGroup("🙍","person frowning",personFrowning,manFrowning,womanFrowning),new EmojiGroup("🙎","person pouting",personPouting,manPouting,womanPouting),new EmojiGroup("🙅","person gesturing NO",personGesturingNo,manGesturingNo,womanGesturingNo),new EmojiGroup("🙆","person gesturing OK",personGesturingOK,manGesturingOK,womanGesturingOK),new EmojiGroup("💁","person tipping hand",personTippingHand,manTippingHand,womanTippingHand),new EmojiGroup("🙋","person raising hand",personRaisingHand,manRaisingHand,womanRaisingHand),new EmojiGroup("🧏","deaf person",deafPerson,deafMan,deafWoman),new EmojiGroup("🙇","person bowing",personBowing,manBowing,womanBowing),new EmojiGroup("🤦","person facepalming",personFacePalming,manFacePalming,womanFacePalming),new EmojiGroup("🤷","person shrugging",personShrugging,manShrugging,womanShrugging)),manHealthWorker=new EmojiGroup("👨‍⚕️","man health worker",new Emoji("👨🏻‍⚕️","man health worker: light skin tone"),new Emoji("👨🏼‍⚕️","man health worker: medium-light skin tone"),new Emoji("👨🏽‍⚕️","man health worker: medium skin tone"),new Emoji("👨🏾‍⚕️","man health worker: medium-dark skin tone"),new Emoji("👨🏿‍⚕️","man health worker: dark skin tone")),womanHealthWorker=new EmojiGroup("👩‍⚕️","woman health worker",new Emoji("👩🏻‍⚕️","woman health worker: light skin tone"),new Emoji("👩🏼‍⚕️","woman health worker: medium-light skin tone"),new Emoji("👩🏽‍⚕️","woman health worker: medium skin tone"),new Emoji("👩🏾‍⚕️","woman health worker: medium-dark skin tone"),new Emoji("👩🏿‍⚕️","woman health worker: dark skin tone")),manStudent=new EmojiGroup("👨‍🎓","man student",new Emoji("👨🏻‍🎓","man student: light skin tone"),new Emoji("👨🏼‍🎓","man student: medium-light skin tone"),new Emoji("👨🏽‍🎓","man student: medium skin tone"),new Emoji("👨🏾‍🎓","man student: medium-dark skin tone"),new Emoji("👨🏿‍🎓","man student: dark skin tone")),womanStudent=new EmojiGroup("👩‍🎓","woman student",new Emoji("👩🏻‍🎓","woman student: light skin tone"),new Emoji("👩🏼‍🎓","woman student: medium-light skin tone"),new Emoji("👩🏽‍🎓","woman student: medium skin tone"),new Emoji("👩🏾‍🎓","woman student: medium-dark skin tone"),new Emoji("👩🏿‍🎓","woman student: dark skin tone")),manTeacher=new EmojiGroup("👨‍🏫","man teacher",new Emoji("👨🏻‍🏫","man teacher: light skin tone"),new Emoji("👨🏼‍🏫","man teacher: medium-light skin tone"),new Emoji("👨🏽‍🏫","man teacher: medium skin tone"),new Emoji("👨🏾‍🏫","man teacher: medium-dark skin tone"),new Emoji("👨🏿‍🏫","man teacher: dark skin tone")),womanTeacher=new EmojiGroup("👩‍🏫","woman teacher",new Emoji("👩🏻‍🏫","woman teacher: light skin tone"),new Emoji("👩🏼‍🏫","woman teacher: medium-light skin tone"),new Emoji("👩🏽‍🏫","woman teacher: medium skin tone"),new Emoji("👩🏾‍🏫","woman teacher: medium-dark skin tone"),new Emoji("👩🏿‍🏫","woman teacher: dark skin tone")),manJudge=new EmojiGroup("👨‍⚖️","man judge",new Emoji("👨🏻‍⚖️","man judge: light skin tone"),new Emoji("👨🏼‍⚖️","man judge: medium-light skin tone"),new Emoji("👨🏽‍⚖️","man judge: medium skin tone"),new Emoji("👨🏾‍⚖️","man judge: medium-dark skin tone"),new Emoji("👨🏿‍⚖️","man judge: dark skin tone")),womanJudge=new EmojiGroup("👩‍⚖️","woman judge",new Emoji("👩🏻‍⚖️","woman judge: light skin tone"),new Emoji("👩🏼‍⚖️","woman judge: medium-light skin tone"),new Emoji("👩🏽‍⚖️","woman judge: medium skin tone"),new Emoji("👩🏾‍⚖️","woman judge: medium-dark skin tone"),new Emoji("👩🏿‍⚖️","woman judge: dark skin tone")),manFarmer=new EmojiGroup("👨‍🌾","man farmer",new Emoji("👨🏻‍🌾","man farmer: light skin tone"),new Emoji("👨🏼‍🌾","man farmer: medium-light skin tone"),new Emoji("👨🏽‍🌾","man farmer: medium skin tone"),new Emoji("👨🏾‍🌾","man farmer: medium-dark skin tone"),new Emoji("👨🏿‍🌾","man farmer: dark skin tone")),womanFarmer=new EmojiGroup("👩‍🌾","woman farmer",new Emoji("👩🏻‍🌾","woman farmer: light skin tone"),new Emoji("👩🏼‍🌾","woman farmer: medium-light skin tone"),new Emoji("👩🏽‍🌾","woman farmer: medium skin tone"),new Emoji("👩🏾‍🌾","woman farmer: medium-dark skin tone"),new Emoji("👩🏿‍🌾","woman farmer: dark skin tone")),manCook=new EmojiGroup("👨‍🍳","man cook",new Emoji("👨🏻‍🍳","man cook: light skin tone"),new Emoji("👨🏼‍🍳","man cook: medium-light skin tone"),new Emoji("👨🏽‍🍳","man cook: medium skin tone"),new Emoji("👨🏾‍🍳","man cook: medium-dark skin tone"),new Emoji("👨🏿‍🍳","man cook: dark skin tone")),womanCook=new EmojiGroup("👩‍🍳","woman cook",new Emoji("👩🏻‍🍳","woman cook: light skin tone"),new Emoji("👩🏼‍🍳","woman cook: medium-light skin tone"),new Emoji("👩🏽‍🍳","woman cook: medium skin tone"),new Emoji("👩🏾‍🍳","woman cook: medium-dark skin tone"),new Emoji("👩🏿‍🍳","woman cook: dark skin tone")),manMechanic=new EmojiGroup("👨‍🔧","man mechanic",new Emoji("👨🏻‍🔧","man mechanic: light skin tone"),new Emoji("👨🏼‍🔧","man mechanic: medium-light skin tone"),new Emoji("👨🏽‍🔧","man mechanic: medium skin tone"),new Emoji("👨🏾‍🔧","man mechanic: medium-dark skin tone"),new Emoji("👨🏿‍🔧","man mechanic: dark skin tone")),womanMechanic=new EmojiGroup("👩‍🔧","woman mechanic",new Emoji("👩🏻‍🔧","woman mechanic: light skin tone"),new Emoji("👩🏼‍🔧","woman mechanic: medium-light skin tone"),new Emoji("👩🏽‍🔧","woman mechanic: medium skin tone"),new Emoji("👩🏾‍🔧","woman mechanic: medium-dark skin tone"),new Emoji("👩🏿‍🔧","woman mechanic: dark skin tone")),manFactoryWorker=new EmojiGroup("👨‍🏭","man factory worker",new Emoji("👨🏻‍🏭","man factory worker: light skin tone"),new Emoji("👨🏼‍🏭","man factory worker: medium-light skin tone"),new Emoji("👨🏽‍🏭","man factory worker: medium skin tone"),new Emoji("👨🏾‍🏭","man factory worker: medium-dark skin tone"),new Emoji("👨🏿‍🏭","man factory worker: dark skin tone")),womanFactoryWorker=new EmojiGroup("👩‍🏭","woman factory worker",new Emoji("👩🏻‍🏭","woman factory worker: light skin tone"),new Emoji("👩🏼‍🏭","woman factory worker: medium-light skin tone"),new Emoji("👩🏽‍🏭","woman factory worker: medium skin tone"),new Emoji("👩🏾‍🏭","woman factory worker: medium-dark skin tone"),new Emoji("👩🏿‍🏭","woman factory worker: dark skin tone")),manOfficeWorker=new EmojiGroup("👨‍💼","man office worker",new Emoji("👨🏻‍💼","man office worker: light skin tone"),new Emoji("👨🏼‍💼","man office worker: medium-light skin tone"),new Emoji("👨🏽‍💼","man office worker: medium skin tone"),new Emoji("👨🏾‍💼","man office worker: medium-dark skin tone"),new Emoji("👨🏿‍💼","man office worker: dark skin tone")),womanOfficeWorker=new EmojiGroup("👩‍💼","woman office worker",new Emoji("👩🏻‍💼","woman office worker: light skin tone"),new Emoji("👩🏼‍💼","woman office worker: medium-light skin tone"),new Emoji("👩🏽‍💼","woman office worker: medium skin tone"),new Emoji("👩🏾‍💼","woman office worker: medium-dark skin tone"),new Emoji("👩🏿‍💼","woman office worker: dark skin tone")),prince=new EmojiGroup("🤴","prince",new Emoji("🤴🏻","prince: light skin tone"),new Emoji("🤴🏼","prince: medium-light skin tone"),new Emoji("🤴🏽","prince: medium skin tone"),new Emoji("🤴🏾","prince: medium-dark skin tone"),new Emoji("🤴🏿","prince: dark skin tone")),princess=new EmojiGroup("👸","princess",new Emoji("👸🏻","princess: light skin tone"),new Emoji("👸🏼","princess: medium-light skin tone"),new Emoji("👸🏽","princess: medium skin tone"),new Emoji("👸🏾","princess: medium-dark skin tone"),new Emoji("👸🏿","princess: dark skin tone")),constructionWorker=new EmojiGroup("👷","construction worker",new Emoji("👷🏻","construction worker: light skin tone"),new Emoji("👷🏼","construction worker: medium-light skin tone"),new Emoji("👷🏽","construction worker: medium skin tone"),new Emoji("👷🏾","construction worker: medium-dark skin tone"),new Emoji("👷🏿","construction worker: dark skin tone")),manConstructionWorker=new EmojiGroup("👷‍♂️","man construction worker",new Emoji("👷🏻‍♂️","man construction worker: light skin tone"),new Emoji("👷🏼‍♂️","man construction worker: medium-light skin tone"),new Emoji("👷🏽‍♂️","man construction worker: medium skin tone"),new Emoji("👷🏾‍♂️","man construction worker: medium-dark skin tone"),new Emoji("👷🏿‍♂️","man construction worker: dark skin tone")),womanConstructionWorker=new EmojiGroup("👷‍♀️","woman construction worker",new Emoji("👷🏻‍♀️","woman construction worker: light skin tone"),new Emoji("👷🏼‍♀️","woman construction worker: medium-light skin tone"),new Emoji("👷🏽‍♀️","woman construction worker: medium skin tone"),new Emoji("👷🏾‍♀️","woman construction worker: medium-dark skin tone"),new Emoji("👷🏿‍♀️","woman construction worker: dark skin tone")),guard=new EmojiGroup("💂","guard",new Emoji("💂🏻","guard: light skin tone"),new Emoji("💂🏼","guard: medium-light skin tone"),new Emoji("💂🏽","guard: medium skin tone"),new Emoji("💂🏾","guard: medium-dark skin tone"),new Emoji("💂🏿","guard: dark skin tone")),manGuard=new EmojiGroup("💂‍♂️","man guard",new Emoji("💂🏻‍♂️","man guard: light skin tone"),new Emoji("💂🏼‍♂️","man guard: medium-light skin tone"),new Emoji("💂🏽‍♂️","man guard: medium skin tone"),new Emoji("💂🏾‍♂️","man guard: medium-dark skin tone"),new Emoji("💂🏿‍♂️","man guard: dark skin tone")),womanGuard=new EmojiGroup("💂‍♀️","woman guard",new Emoji("💂🏻‍♀️","woman guard: light skin tone"),new Emoji("💂🏼‍♀️","woman guard: medium-light skin tone"),new Emoji("💂🏽‍♀️","woman guard: medium skin tone"),new Emoji("💂🏾‍♀️","woman guard: medium-dark skin tone"),new Emoji("💂🏿‍♀️","woman guard: dark skin tone")),spy=new EmojiGroup("🕵️","spy",new Emoji("🕵🏻","spy: light skin tone"),new Emoji("🕵🏼","spy: medium-light skin tone"),new Emoji("🕵🏽","spy: medium skin tone"),new Emoji("🕵🏾","spy: medium-dark skin tone"),new Emoji("🕵🏿","spy: dark skin tone")),manSpy=new EmojiGroup("🕵️‍♂️","man spy",new Emoji("🕵🏻‍♂️","man spy: light skin tone"),new Emoji("🕵🏼‍♂️","man spy: medium-light skin tone"),new Emoji("🕵🏽‍♂️","man spy: medium skin tone"),new Emoji("🕵🏾‍♂️","man spy: medium-dark skin tone"),new Emoji("🕵🏿‍♂️","man spy: dark skin tone")),womanSpy=new EmojiGroup("🕵️‍♀️","woman spy",new Emoji("🕵🏻‍♀️","woman spy: light skin tone"),new Emoji("🕵🏼‍♀️","woman spy: medium-light skin tone"),new Emoji("🕵🏽‍♀️","woman spy: medium skin tone"),new Emoji("🕵🏾‍♀️","woman spy: medium-dark skin tone"),new Emoji("🕵🏿‍♀️","woman spy: dark skin tone")),policeOfficer=new EmojiGroup("👮","police officer",new Emoji("👮🏻","police officer: light skin tone"),new Emoji("👮🏼","police officer: medium-light skin tone"),new Emoji("👮🏽","police officer: medium skin tone"),new Emoji("👮🏾","police officer: medium-dark skin tone"),new Emoji("👮🏿","police officer: dark skin tone")),manPoliceOfficer=new EmojiGroup("👮‍♂️","man police officer",new Emoji("👮🏻‍♂️","man police officer: light skin tone"),new Emoji("👮🏼‍♂️","man police officer: medium-light skin tone"),new Emoji("👮🏽‍♂️","man police officer: medium skin tone"),new Emoji("👮🏾‍♂️","man police officer: medium-dark skin tone"),new Emoji("👮🏿‍♂️","man police officer: dark skin tone")),womanPoliceOfficer=new EmojiGroup("👮‍♀️","woman police officer",new Emoji("👮🏻‍♀️","woman police officer: light skin tone"),new Emoji("👮🏼‍♀️","woman police officer: medium-light skin tone"),new Emoji("👮🏽‍♀️","woman police officer: medium skin tone"),new Emoji("👮🏾‍♀️","woman police officer: medium-dark skin tone"),new Emoji("👮🏿‍♀️","woman police officer: dark skin tone")),manFirefighter=new EmojiGroup("👨‍🚒","man firefighter",new Emoji("👨🏻‍🚒","man firefighter: light skin tone"),new Emoji("👨🏼‍🚒","man firefighter: medium-light skin tone"),new Emoji("👨🏽‍🚒","man firefighter: medium skin tone"),new Emoji("👨🏾‍🚒","man firefighter: medium-dark skin tone"),new Emoji("👨🏿‍🚒","man firefighter: dark skin tone")),womanFirefighter=new EmojiGroup("👩‍🚒","woman firefighter",new Emoji("👩🏻‍🚒","woman firefighter: light skin tone"),new Emoji("👩🏼‍🚒","woman firefighter: medium-light skin tone"),new Emoji("👩🏽‍🚒","woman firefighter: medium skin tone"),new Emoji("👩🏾‍🚒","woman firefighter: medium-dark skin tone"),new Emoji("👩🏿‍🚒","woman firefighter: dark skin tone")),manAstronaut=new EmojiGroup("👨‍🚀","man astronaut",new Emoji("👨🏻‍🚀","man astronaut: light skin tone"),new Emoji("👨🏼‍🚀","man astronaut: medium-light skin tone"),new Emoji("👨🏽‍🚀","man astronaut: medium skin tone"),new Emoji("👨🏾‍🚀","man astronaut: medium-dark skin tone"),new Emoji("👨🏿‍🚀","man astronaut: dark skin tone")),womanAstronaut=new EmojiGroup("👩‍🚀","woman astronaut",new Emoji("👩🏻‍🚀","woman astronaut: light skin tone"),new Emoji("👩🏼‍🚀","woman astronaut: medium-light skin tone"),new Emoji("👩🏽‍🚀","woman astronaut: medium skin tone"),new Emoji("👩🏾‍🚀","woman astronaut: medium-dark skin tone"),new Emoji("👩🏿‍🚀","woman astronaut: dark skin tone")),manPilot=new EmojiGroup("👨‍✈️","man pilot",new Emoji("👨🏻‍✈️","man pilot: light skin tone"),new Emoji("👨🏼‍✈️","man pilot: medium-light skin tone"),new Emoji("👨🏽‍✈️","man pilot: medium skin tone"),new Emoji("👨🏾‍✈️","man pilot: medium-dark skin tone"),new Emoji("👨🏿‍✈️","man pilot: dark skin tone")),womanPilot=new EmojiGroup("👩‍✈️","woman pilot",new Emoji("👩🏻‍✈️","woman pilot: light skin tone"),new Emoji("👩🏼‍✈️","woman pilot: medium-light skin tone"),new Emoji("👩🏽‍✈️","woman pilot: medium skin tone"),new Emoji("👩🏾‍✈️","woman pilot: medium-dark skin tone"),new Emoji("👩🏿‍✈️","woman pilot: dark skin tone")),manArtist=new EmojiGroup("👨‍🎨","man artist",new Emoji("👨🏻‍🎨","man artist: light skin tone"),new Emoji("👨🏼‍🎨","man artist: medium-light skin tone"),new Emoji("👨🏽‍🎨","man artist: medium skin tone"),new Emoji("👨🏾‍🎨","man artist: medium-dark skin tone"),new Emoji("👨🏿‍🎨","man artist: dark skin tone")),womanArtist=new EmojiGroup("👩‍🎨","woman artist",new Emoji("👩🏻‍🎨","woman artist: light skin tone"),new Emoji("👩🏼‍🎨","woman artist: medium-light skin tone"),new Emoji("👩🏽‍🎨","woman artist: medium skin tone"),new Emoji("👩🏾‍🎨","woman artist: medium-dark skin tone"),new Emoji("👩🏿‍🎨","woman artist: dark skin tone")),manSinger=new EmojiGroup("👨‍🎤","man singer",new Emoji("👨🏻‍🎤","man singer: light skin tone"),new Emoji("👨🏼‍🎤","man singer: medium-light skin tone"),new Emoji("👨🏽‍🎤","man singer: medium skin tone"),new Emoji("👨🏾‍🎤","man singer: medium-dark skin tone"),new Emoji("👨🏿‍🎤","man singer: dark skin tone")),womanSinger=new EmojiGroup("👩‍🎤","woman singer",new Emoji("👩🏻‍🎤","woman singer: light skin tone"),new Emoji("👩🏼‍🎤","woman singer: medium-light skin tone"),new Emoji("👩🏽‍🎤","woman singer: medium skin tone"),new Emoji("👩🏾‍🎤","woman singer: medium-dark skin tone"),new Emoji("👩🏿‍🎤","woman singer: dark skin tone")),manTechnologist=new EmojiGroup("👨‍💻","man technologist",new Emoji("👨🏻‍💻","man technologist: light skin tone"),new Emoji("👨🏼‍💻","man technologist: medium-light skin tone"),new Emoji("👨🏽‍💻","man technologist: medium skin tone"),new Emoji("👨🏾‍💻","man technologist: medium-dark skin tone"),new Emoji("👨🏿‍💻","man technologist: dark skin tone")),womanTechnologist=new EmojiGroup("👩‍💻","woman technologist",new Emoji("👩🏻‍💻","woman technologist: light skin tone"),new Emoji("👩🏼‍💻","woman technologist: medium-light skin tone"),new Emoji("👩🏽‍💻","woman technologist: medium skin tone"),new Emoji("👩🏾‍💻","woman technologist: medium-dark skin tone"),new Emoji("👩🏿‍💻","woman technologist: dark skin tone")),manScientist=new EmojiGroup("👨‍🔬","man scientist",new Emoji("👨🏻‍🔬","man scientist: light skin tone"),new Emoji("👨🏼‍🔬","man scientist: medium-light skin tone"),new Emoji("👨🏽‍🔬","man scientist: medium skin tone"),new Emoji("👨🏾‍🔬","man scientist: medium-dark skin tone"),new Emoji("👨🏿‍🔬","man scientist: dark skin tone")),womanScientist=new EmojiGroup("👩‍🔬","woman scientist",new Emoji("👩🏻‍🔬","woman scientist: light skin tone"),new Emoji("👩🏼‍🔬","woman scientist: medium-light skin tone"),new Emoji("👩🏽‍🔬","woman scientist: medium skin tone"),new Emoji("👩🏾‍🔬","woman scientist: medium-dark skin tone"),new Emoji("👩🏿‍🔬","woman scientist: dark skin tone")),roles=[new EmojiGroup("⚕️","health worker",manHealthWorker,womanHealthWorker),new EmojiGroup("🎓","student",manStudent,womanStudent),new EmojiGroup("🏫","teacher",manTeacher,womanTeacher),new EmojiGroup("⚖️","judge",manJudge,womanJudge),new EmojiGroup("🌾","farmer",manFarmer,womanFarmer),new EmojiGroup("🍳","cook",manCook,womanCook),new EmojiGroup("🔧","mechanic",manMechanic,womanMechanic),new EmojiGroup("🏭","factory worker",manFactoryWorker,womanFactoryWorker),new EmojiGroup("💼","office worker",manOfficeWorker,womanOfficeWorker),new EmojiGroup("🔬","scientist",manScientist,womanScientist),new EmojiGroup("💻","technologist",manTechnologist,womanTechnologist),new EmojiGroup("🎤","singer",manSinger,womanSinger),new EmojiGroup("🎨","artist",manArtist,womanArtist),new EmojiGroup("✈️","pilot",manPilot,womanPilot),new EmojiGroup("🚀","astronaut",manAstronaut,womanAstronaut),new EmojiGroup("🚒","firefighter",manFirefighter,womanFirefighter),new EmojiGroup("🕵️","spy",spy,manSpy,womanSpy),new EmojiGroup("💂","guard",guard,manGuard,womanGuard),new EmojiGroup("👷","construction worker",constructionWorker,manConstructionWorker,womanConstructionWorker),new EmojiGroup("🤴","royalty",prince,princess)],personWearingTurban=new EmojiGroup("👳","person wearing turban",new Emoji("👳🏻","person wearing turban: light skin tone"),new Emoji("👳🏼","person wearing turban: medium-light skin tone"),new Emoji("👳🏽","person wearing turban: medium skin tone"),new Emoji("👳🏾","person wearing turban: medium-dark skin tone"),new Emoji("👳🏿","person wearing turban: dark skin tone")),manWearingTurban=new EmojiGroup("👳‍♂️","man wearing turban",new Emoji("👳🏻‍♂️","man wearing turban: light skin tone"),new Emoji("👳🏼‍♂️","man wearing turban: medium-light skin tone"),new Emoji("👳🏽‍♂️","man wearing turban: medium skin tone"),new Emoji("👳🏾‍♂️","man wearing turban: medium-dark skin tone"),new Emoji("👳🏿‍♂️","man wearing turban: dark skin tone")),womanWearingTurban=new EmojiGroup("👳‍♀️","woman wearing turban",new Emoji("👳🏻‍♀️","woman wearing turban: light skin tone"),new Emoji("👳🏼‍♀️","woman wearing turban: medium-light skin tone"),new Emoji("👳🏽‍♀️","woman wearing turban: medium skin tone"),new Emoji("👳🏾‍♀️","woman wearing turban: medium-dark skin tone"),new Emoji("👳🏿‍♀️","woman wearing turban: dark skin tone")),wearingTurban=new EmojiGroup(personWearingTurban.value,"wearing turban",personWearingTurban,manWearingTurban,womanWearingTurban),manWithChineseCap=new EmojiGroup("👲","man with Chinese cap",new Emoji("👲🏻","man with Chinese cap: light skin tone"),new Emoji("👲🏼","man with Chinese cap: medium-light skin tone"),new Emoji("👲🏽","man with Chinese cap: medium skin tone"),new Emoji("👲🏾","man with Chinese cap: medium-dark skin tone"),new Emoji("👲🏿","man with Chinese cap: dark skin tone")),womanWithHeadscarf=new EmojiGroup("🧕","woman with headscarf",new Emoji("🧕🏻","woman with headscarf: light skin tone"),new Emoji("🧕🏼","woman with headscarf: medium-light skin tone"),new Emoji("🧕🏽","woman with headscarf: medium skin tone"),new Emoji("🧕🏾","woman with headscarf: medium-dark skin tone"),new Emoji("🧕🏿","woman with headscarf: dark skin tone")),manInTuxedo=new EmojiGroup("🤵","man in tuxedo",new Emoji("🤵🏻","man in tuxedo: light skin tone"),new Emoji("🤵🏼","man in tuxedo: medium-light skin tone"),new Emoji("🤵🏽","man in tuxedo: medium skin tone"),new Emoji("🤵🏾","man in tuxedo: medium-dark skin tone"),new Emoji("🤵🏿","man in tuxedo: dark skin tone")),brideWithVeil=new EmojiGroup("👰","bride with veil",new Emoji("👰🏻","bride with veil: light skin tone"),new Emoji("👰🏼","bride with veil: medium-light skin tone"),new Emoji("👰🏽","bride with veil: medium skin tone"),new Emoji("👰🏾","bride with veil: medium-dark skin tone"),new Emoji("👰🏿","bride with veil: dark skin tone")),pregnantWoman=new EmojiGroup("🤰","pregnant woman",new Emoji("🤰🏻","pregnant woman: light skin tone"),new Emoji("🤰🏼","pregnant woman: medium-light skin tone"),new Emoji("🤰🏽","pregnant woman: medium skin tone"),new Emoji("🤰🏾","pregnant woman: medium-dark skin tone"),new Emoji("🤰🏿","pregnant woman: dark skin tone")),breastFeeding=new EmojiGroup("🤱","breast-feeding",new Emoji("🤱🏻","breast-feeding: light skin tone"),new Emoji("🤱🏼","breast-feeding: medium-light skin tone"),new Emoji("🤱🏽","breast-feeding: medium skin tone"),new Emoji("🤱🏾","breast-feeding: medium-dark skin tone"),new Emoji("🤱🏿","breast-feeding: dark skin tone")),otherPeople=[wearingTurban,manWithChineseCap,womanWithHeadscarf,manInTuxedo,brideWithVeil,pregnantWoman,breastFeeding],babyAngel=new EmojiGroup("👼","baby angel",new Emoji("👼🏻","baby angel: light skin tone"),new Emoji("👼🏼","baby angel: medium-light skin tone"),new Emoji("👼🏽","baby angel: medium skin tone"),new Emoji("👼🏾","baby angel: medium-dark skin tone"),new Emoji("👼🏿","baby angel: dark skin tone")),santaClaus=new EmojiGroup("🎅","Santa Claus",new Emoji("🎅🏻","Santa Claus: light skin tone"),new Emoji("🎅🏼","Santa Claus: medium-light skin tone"),new Emoji("🎅🏽","Santa Claus: medium skin tone"),new Emoji("🎅🏾","Santa Claus: medium-dark skin tone"),new Emoji("🎅🏿","Santa Claus: dark skin tone")),mrsClaus=new EmojiGroup("🤶","Mrs. Claus",new Emoji("🤶🏻","Mrs. Claus: light skin tone"),new Emoji("🤶🏼","Mrs. Claus: medium-light skin tone"),new Emoji("🤶🏽","Mrs. Claus: medium skin tone"),new Emoji("🤶🏾","Mrs. Claus: medium-dark skin tone"),new Emoji("🤶🏿","Mrs. Claus: dark skin tone")),superhero=new EmojiGroup("🦸","superhero",new Emoji("🦸🏻","superhero: light skin tone"),new Emoji("🦸🏼","superhero: medium-light skin tone"),new Emoji("🦸🏽","superhero: medium skin tone"),new Emoji("🦸🏾","superhero: medium-dark skin tone"),new Emoji("🦸🏿","superhero: dark skin tone")),manSuperhero=new EmojiGroup("🦸‍♂️","man superhero",new Emoji("🦸🏻‍♂️","man superhero: light skin tone"),new Emoji("🦸🏼‍♂️","man superhero: medium-light skin tone"),new Emoji("🦸🏽‍♂️","man superhero: medium skin tone"),new Emoji("🦸🏾‍♂️","man superhero: medium-dark skin tone"),new Emoji("🦸🏿‍♂️","man superhero: dark skin tone")),womanSuperhero=new EmojiGroup("🦸‍♀️","woman superhero",new Emoji("🦸🏻‍♀️","woman superhero: light skin tone"),new Emoji("🦸🏼‍♀️","woman superhero: medium-light skin tone"),new Emoji("🦸🏽‍♀️","woman superhero: medium skin tone"),new Emoji("🦸🏾‍♀️","woman superhero: medium-dark skin tone"),new Emoji("🦸🏿‍♀️","woman superhero: dark skin tone")),supervillain=new EmojiGroup("🦹","supervillain",new Emoji("🦹🏻","supervillain: light skin tone"),new Emoji("🦹🏼","supervillain: medium-light skin tone"),new Emoji("🦹🏽","supervillain: medium skin tone"),new Emoji("🦹🏾","supervillain: medium-dark skin tone"),new Emoji("🦹🏿","supervillain: dark skin tone")),manSupervillain=new EmojiGroup("🦹‍♂️","man supervillain",new Emoji("🦹🏻‍♂️","man supervillain: light skin tone"),new Emoji("🦹🏼‍♂️","man supervillain: medium-light skin tone"),new Emoji("🦹🏽‍♂️","man supervillain: medium skin tone"),new Emoji("🦹🏾‍♂️","man supervillain: medium-dark skin tone"),new Emoji("🦹🏿‍♂️","man supervillain: dark skin tone")),womanSupervillain=new EmojiGroup("🦹‍♀️","woman supervillain",new Emoji("🦹🏻‍♀️","woman supervillain: light skin tone"),new Emoji("🦹🏼‍♀️","woman supervillain: medium-light skin tone"),new Emoji("🦹🏽‍♀️","woman supervillain: medium skin tone"),new Emoji("🦹🏾‍♀️","woman supervillain: medium-dark skin tone"),new Emoji("🦹🏿‍♀️","woman supervillain: dark skin tone")),mage=new EmojiGroup("🧙","mage",new Emoji("🧙🏻","mage: light skin tone"),new Emoji("🧙🏼","mage: medium-light skin tone"),new Emoji("🧙🏽","mage: medium skin tone"),new Emoji("🧙🏾","mage: medium-dark skin tone"),new Emoji("🧙🏿","mage: dark skin tone")),manMage=new EmojiGroup("🧙‍♂️","man mage",new Emoji("🧙🏻‍♂️","man mage: light skin tone"),new Emoji("🧙🏼‍♂️","man mage: medium-light skin tone"),new Emoji("🧙🏽‍♂️","man mage: medium skin tone"),new Emoji("🧙🏾‍♂️","man mage: medium-dark skin tone"),new Emoji("🧙🏿‍♂️","man mage: dark skin tone")),womanMage=new EmojiGroup("🧙‍♀️","woman mage",new Emoji("🧙🏻‍♀️","woman mage: light skin tone"),new Emoji("🧙🏼‍♀️","woman mage: medium-light skin tone"),new Emoji("🧙🏽‍♀️","woman mage: medium skin tone"),new Emoji("🧙🏾‍♀️","woman mage: medium-dark skin tone"),new Emoji("🧙🏿‍♀️","woman mage: dark skin tone")),fairy=new EmojiGroup("🧚","fairy",new Emoji("🧚🏻","fairy: light skin tone"),new Emoji("🧚🏼","fairy: medium-light skin tone"),new Emoji("🧚🏽","fairy: medium skin tone"),new Emoji("🧚🏾","fairy: medium-dark skin tone"),new Emoji("🧚🏿","fairy: dark skin tone")),manFairy=new EmojiGroup("🧚‍♂️","man fairy",new Emoji("🧚🏻‍♂️","man fairy: light skin tone"),new Emoji("🧚🏼‍♂️","man fairy: medium-light skin tone"),new Emoji("🧚🏽‍♂️","man fairy: medium skin tone"),new Emoji("🧚🏾‍♂️","man fairy: medium-dark skin tone"),new Emoji("🧚🏿‍♂️","man fairy: dark skin tone")),womanFairy=new EmojiGroup("🧚‍♀️","woman fairy",new Emoji("🧚🏻‍♀️","woman fairy: light skin tone"),new Emoji("🧚🏼‍♀️","woman fairy: medium-light skin tone"),new Emoji("🧚🏽‍♀️","woman fairy: medium skin tone"),new Emoji("🧚🏾‍♀️","woman fairy: medium-dark skin tone"),new Emoji("🧚🏿‍♀️","woman fairy: dark skin tone")),vampire=new EmojiGroup("🧛","vampire",new Emoji("🧛🏻","vampire: light skin tone"),new Emoji("🧛🏼","vampire: medium-light skin tone"),new Emoji("🧛🏽","vampire: medium skin tone"),new Emoji("🧛🏾","vampire: medium-dark skin tone"),new Emoji("🧛🏿","vampire: dark skin tone")),manVampire=new EmojiGroup("🧛‍♂️","man vampire",new Emoji("🧛🏻‍♂️","man vampire: light skin tone"),new Emoji("🧛🏼‍♂️","man vampire: medium-light skin tone"),new Emoji("🧛🏽‍♂️","man vampire: medium skin tone"),new Emoji("🧛🏾‍♂️","man vampire: medium-dark skin tone"),new Emoji("🧛🏿‍♂️","man vampire: dark skin tone")),womanVampire=new EmojiGroup("🧛‍♀️","woman vampire",new Emoji("🧛🏻‍♀️","woman vampire: light skin tone"),new Emoji("🧛🏼‍♀️","woman vampire: medium-light skin tone"),new Emoji("🧛🏽‍♀️","woman vampire: medium skin tone"),new Emoji("🧛🏾‍♀️","woman vampire: medium-dark skin tone"),new Emoji("🧛🏿‍♀️","woman vampire: dark skin tone")),merperson=new EmojiGroup("🧜","merperson",new Emoji("🧜🏻","merperson: light skin tone"),new Emoji("🧜🏼","merperson: medium-light skin tone"),new Emoji("🧜🏽","merperson: medium skin tone"),new Emoji("🧜🏾","merperson: medium-dark skin tone"),new Emoji("🧜🏿","merperson: dark skin tone")),merman=new EmojiGroup("🧜‍♂️","merman",new Emoji("🧜🏻‍♂️","merman: light skin tone"),new Emoji("🧜🏼‍♂️","merman: medium-light skin tone"),new Emoji("🧜🏽‍♂️","merman: medium skin tone"),new Emoji("🧜🏾‍♂️","merman: medium-dark skin tone"),new Emoji("🧜🏿‍♂️","merman: dark skin tone")),mermaid=new EmojiGroup("🧜‍♀️","mermaid",new Emoji("🧜🏻‍♀️","mermaid: light skin tone"),new Emoji("🧜🏼‍♀️","mermaid: medium-light skin tone"),new Emoji("🧜🏽‍♀️","mermaid: medium skin tone"),new Emoji("🧜🏾‍♀️","mermaid: medium-dark skin tone"),new Emoji("🧜🏿‍♀️","mermaid: dark skin tone")),elf=new EmojiGroup("🧝","elf",new Emoji("🧝🏻","elf: light skin tone"),new Emoji("🧝🏼","elf: medium-light skin tone"),new Emoji("🧝🏽","elf: medium skin tone"),new Emoji("🧝🏾","elf: medium-dark skin tone"),new Emoji("🧝🏿","elf: dark skin tone")),manElf=new EmojiGroup("🧝‍♂️","man elf",new Emoji("🧝🏻‍♂️","man elf: light skin tone"),new Emoji("🧝🏼‍♂️","man elf: medium-light skin tone"),new Emoji("🧝🏽‍♂️","man elf: medium skin tone"),new Emoji("🧝🏾‍♂️","man elf: medium-dark skin tone"),new Emoji("🧝🏿‍♂️","man elf: dark skin tone")),womanElf=new EmojiGroup("🧝‍♀️","woman elf",new Emoji("🧝🏻‍♀️","woman elf: light skin tone"),new Emoji("🧝🏼‍♀️","woman elf: medium-light skin tone"),new Emoji("🧝🏽‍♀️","woman elf: medium skin tone"),new Emoji("🧝🏾‍♀️","woman elf: medium-dark skin tone"),new Emoji("🧝🏿‍♀️","woman elf: dark skin tone")),genie=new Emoji("🧞","genie"),manGenie=new Emoji("🧞‍♂️","man genie"),womanGenie=new Emoji("🧞‍♀️","woman genie"),zombie=new Emoji("🧟","zombie"),manZombie=new Emoji("🧟‍♂️","man zombie"),womanZombie=new Emoji("🧟‍♀️","woman zombie"),fantasy=[babyAngel,santaClaus,mrsClaus,new EmojiGroup("🦸","superhero",superhero,manSuperhero,womanSuperhero),new EmojiGroup("🦹","supervillain",supervillain,manSupervillain,womanSupervillain),new EmojiGroup("🧙","mage",mage,manMage,womanMage),new EmojiGroup("🧚","fairy",fairy,manFairy,womanFairy),new EmojiGroup("🧛","vampire",vampire,manVampire,womanVampire),new EmojiGroup("🧜","merperson",merperson,merman,mermaid),new EmojiGroup("🧝","elf",elf,manElf,womanElf),new EmojiGroup("🧞","genie",genie,manGenie,womanGenie),new EmojiGroup("🧟","zombie",zombie,manZombie,womanZombie)],personGettingMassage=new EmojiGroup("💆","person getting massage",new Emoji("💆🏻","person getting massage: light skin tone"),new Emoji("💆🏼","person getting massage: medium-light skin tone"),new Emoji("💆🏽","person getting massage: medium skin tone"),new Emoji("💆🏾","person getting massage: medium-dark skin tone"),new Emoji("💆🏿","person getting massage: dark skin tone")),manGettingMassage=new EmojiGroup("💆‍♂️","man getting massage",new Emoji("💆🏻‍♂️","man getting massage: light skin tone"),new Emoji("💆🏼‍♂️","man getting massage: medium-light skin tone"),new Emoji("💆🏽‍♂️","man getting massage: medium skin tone"),new Emoji("💆🏾‍♂️","man getting massage: medium-dark skin tone"),new Emoji("💆🏿‍♂️","man getting massage: dark skin tone")),womanGettingMassage=new EmojiGroup("💆‍♀️","woman getting massage",new Emoji("💆🏻‍♀️","woman getting massage: light skin tone"),new Emoji("💆🏼‍♀️","woman getting massage: medium-light skin tone"),new Emoji("💆🏽‍♀️","woman getting massage: medium skin tone"),new Emoji("💆🏾‍♀️","woman getting massage: medium-dark skin tone"),new Emoji("💆🏿‍♀️","woman getting massage: dark skin tone")),personGettingHaircut=new EmojiGroup("💇","person getting haircut",new Emoji("💇🏻","person getting haircut: light skin tone"),new Emoji("💇🏼","person getting haircut: medium-light skin tone"),new Emoji("💇🏽","person getting haircut: medium skin tone"),new Emoji("💇🏾","person getting haircut: medium-dark skin tone"),new Emoji("💇🏿","person getting haircut: dark skin tone")),manGettingHaircut=new EmojiGroup("💇‍♂️","man getting haircut",new Emoji("💇🏻‍♂️","man getting haircut: light skin tone"),new Emoji("💇🏼‍♂️","man getting haircut: medium-light skin tone"),new Emoji("💇🏽‍♂️","man getting haircut: medium skin tone"),new Emoji("💇🏾‍♂️","man getting haircut: medium-dark skin tone"),new Emoji("💇🏿‍♂️","man getting haircut: dark skin tone")),womanGettingHaircut=new EmojiGroup("💇‍♀️","woman getting haircut",new Emoji("💇🏻‍♀️","woman getting haircut: light skin tone"),new Emoji("💇🏼‍♀️","woman getting haircut: medium-light skin tone"),new Emoji("💇🏽‍♀️","woman getting haircut: medium skin tone"),new Emoji("💇🏾‍♀️","woman getting haircut: medium-dark skin tone"),new Emoji("💇🏿‍♀️","woman getting haircut: dark skin tone")),personWalking=new EmojiGroup("🚶","person walking",new Emoji("🚶🏻","person walking: light skin tone"),new Emoji("🚶🏼","person walking: medium-light skin tone"),new Emoji("🚶🏽","person walking: medium skin tone"),new Emoji("🚶🏾","person walking: medium-dark skin tone"),new Emoji("🚶🏿","person walking: dark skin tone")),manWalking={value:"🚶‍♂️",desc:"man walking",alts:[new Emoji("🚶🏻‍♂️","man walking: light skin tone"),new Emoji("🚶🏼‍♂️","man walking: medium-light skin tone"),new Emoji("🚶🏽‍♂️","man walking: medium skin tone"),new Emoji("🚶🏾‍♂️","man walking: medium-dark skin tone"),new Emoji("🚶🏿‍♂️","man walking: dark skin tone"),new Emoji("🚶‍♀️","woman walking")]},womanWalking=new EmojiGroup("🚶‍♀","woman walking",new Emoji("🚶🏻‍♀️","woman walking: light skin tone"),new Emoji("🚶🏼‍♀️","woman walking: medium-light skin tone"),new Emoji("🚶🏽‍♀️","woman walking: medium skin tone"),new Emoji("🚶🏾‍♀️","woman walking: medium-dark skin tone"),new Emoji("🚶🏿‍♀️","woman walking: dark skin tone")),personStanding=new EmojiGroup("🧍","person standing",new Emoji("🧍🏻","person standing: light skin tone"),new Emoji("🧍🏼","person standing: medium-light skin tone"),new Emoji("🧍🏽","person standing: medium skin tone"),new Emoji("🧍🏾","person standing: medium-dark skin tone"),new Emoji("🧍🏿","person standing: dark skin tone")),manStanding=new EmojiGroup("🧍‍♂️","man standing",new Emoji("🧍🏻‍♂️","man standing: light skin tone"),new Emoji("🧍🏼‍♂️","man standing: medium-light skin tone"),new Emoji("🧍🏽‍♂️","man standing: medium skin tone"),new Emoji("🧍🏾‍♂️","man standing: medium-dark skin tone"),new Emoji("🧍🏿‍♂️","man standing: dark skin tone")),womanStanding=new EmojiGroup("🧍‍♀️","woman standing",new Emoji("🧍🏻‍♀️","woman standing: light skin tone"),new Emoji("🧍🏼‍♀️","woman standing: medium-light skin tone"),new Emoji("🧍🏽‍♀️","woman standing: medium skin tone"),new Emoji("🧍🏾‍♀️","woman standing: medium-dark skin tone"),new Emoji("🧍🏿‍♀️","woman standing: dark skin tone")),personKneeling=new EmojiGroup("🧎","person kneeling",new Emoji("🧎🏻","person kneeling: light skin tone"),new Emoji("🧎🏼","person kneeling: medium-light skin tone"),new Emoji("🧎🏽","person kneeling: medium skin tone"),new Emoji("🧎🏾","person kneeling: medium-dark skin tone"),new Emoji("🧎🏿","person kneeling: dark skin tone")),manKneeling=new EmojiGroup("🧎‍♂️","man kneeling",new Emoji("🧎🏻‍♂️","man kneeling: light skin tone"),new Emoji("🧎🏼‍♂️","man kneeling: medium-light skin tone"),new Emoji("🧎🏽‍♂️","man kneeling: medium skin tone"),new Emoji("🧎🏾‍♂️","man kneeling: medium-dark skin tone"),new Emoji("🧎🏿‍♂️","man kneeling: dark skin tone")),womanKneeling=new EmojiGroup("🧎‍♀️","woman kneeling",new Emoji("🧎🏻‍♀️","woman kneeling: light skin tone"),new Emoji("🧎🏼‍♀️","woman kneeling: medium-light skin tone"),new Emoji("🧎🏽‍♀️","woman kneeling: medium skin tone"),new Emoji("🧎🏾‍♀️","woman kneeling: medium-dark skin tone"),new Emoji("🧎🏿‍♀️","woman kneeling: dark skin tone")),manWithProbingCane=new EmojiGroup("👨‍🦯","man with probing cane",new Emoji("👨🏻‍🦯","man with probing cane: light skin tone"),new Emoji("👨🏼‍🦯","man with probing cane: medium-light skin tone"),new Emoji("👨🏽‍🦯","man with probing cane: medium skin tone"),new Emoji("👨🏾‍🦯","man with probing cane: medium-dark skin tone"),new Emoji("👨🏿‍🦯","man with probing cane: dark skin tone")),womanWithProbingCane=new EmojiGroup("👩‍🦯","woman with probing cane",new Emoji("👩🏻‍🦯","woman with probing cane: light skin tone"),new Emoji("👩🏼‍🦯","woman with probing cane: medium-light skin tone"),new Emoji("👩🏽‍🦯","woman with probing cane: medium skin tone"),new Emoji("👩🏾‍🦯","woman with probing cane: medium-dark skin tone"),new Emoji("👩🏿‍🦯","woman with probing cane: dark skin tone")),manInMotorizedWheelchair=new EmojiGroup("👨‍🦼","man in motorized wheelchair",new Emoji("👨🏻‍🦼","man in motorized wheelchair: light skin tone"),new Emoji("👨🏼‍🦼","man in motorized wheelchair: medium-light skin tone"),new Emoji("👨🏽‍🦼","man in motorized wheelchair: medium skin tone"),new Emoji("👨🏾‍🦼","man in motorized wheelchair: medium-dark skin tone"),new Emoji("👨🏿‍🦼","man in motorized wheelchair: dark skin tone")),womanInMotorizedWheelchair=new EmojiGroup("👩‍🦼","woman in motorized wheelchair",new Emoji("👩🏻‍🦼","woman in motorized wheelchair: light skin tone"),new Emoji("👩🏼‍🦼","woman in motorized wheelchair: medium-light skin tone"),new Emoji("👩🏽‍🦼","woman in motorized wheelchair: medium skin tone"),new Emoji("👩🏾‍🦼","woman in motorized wheelchair: medium-dark skin tone"),new Emoji("👩🏿‍🦼","woman in motorized wheelchair: dark skin tone")),manInManualWheelchair=new EmojiGroup("👨‍🦽","man in manual wheelchair",new Emoji("👨🏻‍🦽","man in manual wheelchair: light skin tone"),new Emoji("👨🏼‍🦽","man in manual wheelchair: medium-light skin tone"),new Emoji("👨🏽‍🦽","man in manual wheelchair: medium skin tone"),new Emoji("👨🏾‍🦽","man in manual wheelchair: medium-dark skin tone"),new Emoji("👨🏿‍🦽","man in manual wheelchair: dark skin tone")),womanInManualWheelchair=new EmojiGroup("👩‍🦽","woman in manual wheelchair",new Emoji("👩🏻‍🦽","woman in manual wheelchair: light skin tone"),new Emoji("👩🏼‍🦽","woman in manual wheelchair: medium-light skin tone"),new Emoji("👩🏽‍🦽","woman in manual wheelchair: medium skin tone"),new Emoji("👩🏾‍🦽","woman in manual wheelchair: medium-dark skin tone"),new Emoji("👩🏿‍🦽","woman in manual wheelchair: dark skin tone")),personRunning=new EmojiGroup("🏃","person running",new Emoji("🏃🏻","person running: light skin tone"),new Emoji("🏃🏼","person running: medium-light skin tone"),new Emoji("🏃🏽","person running: medium skin tone"),new Emoji("🏃🏾","person running: medium-dark skin tone"),new Emoji("🏃🏿","person running: dark skin tone")),manRunning=new EmojiGroup("🏃‍♂️","man running",new Emoji("🏃🏻‍♂️","man running: light skin tone"),new Emoji("🏃🏼‍♂️","man running: medium-light skin tone"),new Emoji("🏃🏽‍♂️","man running: medium skin tone"),new Emoji("🏃🏾‍♂️","man running: medium-dark skin tone"),new Emoji("🏃🏿‍♂️","man running: dark skin tone")),womanRunning=new EmojiGroup("🏃‍♀️","woman running",new Emoji("🏃🏻‍♀️","woman running: light skin tone"),new Emoji("🏃🏼‍♀️","woman running: medium-light skin tone"),new Emoji("🏃🏽‍♀️","woman running: medium skin tone"),new Emoji("🏃🏾‍♀️","woman running: medium-dark skin tone"),new Emoji("🏃🏿‍♀️","woman running: dark skin tone")),manDancing=new EmojiGroup("🕺","man dancing",new Emoji("🕺🏻","man dancing: light skin tone"),new Emoji("🕺🏼","man dancing: medium-light skin tone"),new Emoji("🕺🏽","man dancing: medium skin tone"),new Emoji("🕺🏾","man dancing: medium-dark skin tone"),new Emoji("🕺🏿","man dancing: dark skin tone")),womanDancing=new EmojiGroup("💃","woman dancing",new Emoji("💃🏻","woman dancing: light skin tone"),new Emoji("💃🏼","woman dancing: medium-light skin tone"),new Emoji("💃🏽","woman dancing: medium skin tone"),new Emoji("💃🏾","woman dancing: medium-dark skin tone"),new Emoji("💃🏿","woman dancing: dark skin tone")),manInSuitLevitating=new EmojiGroup("🕴️","man in suit levitating",new Emoji("🕴🏻","man in suit levitating: light skin tone"),new Emoji("🕴🏼","man in suit levitating: medium-light skin tone"),new Emoji("🕴🏽","man in suit levitating: medium skin tone"),new Emoji("🕴🏾","man in suit levitating: medium-dark skin tone"),new Emoji("🕴🏿","man in suit levitating: dark skin tone")),personInSteamyRoom=new EmojiGroup("🧖","person in steamy room",new Emoji("🧖🏻","person in steamy room: light skin tone"),new Emoji("🧖🏼","person in steamy room: medium-light skin tone"),new Emoji("🧖🏽","person in steamy room: medium skin tone"),new Emoji("🧖🏾","person in steamy room: medium-dark skin tone"),new Emoji("🧖🏿","person in steamy room: dark skin tone")),manInSteamyRoom=new EmojiGroup("🧖‍♂️","man in steamy room",new Emoji("🧖🏻‍♂️","man in steamy room: light skin tone"),new Emoji("🧖🏼‍♂️","man in steamy room: medium-light skin tone"),new Emoji("🧖🏽‍♂️","man in steamy room: medium skin tone"),new Emoji("🧖🏾‍♂️","man in steamy room: medium-dark skin tone"),new Emoji("🧖🏿‍♂️","man in steamy room: dark skin tone")),womanInSteamyRoom=new EmojiGroup("🧖‍♀️","woman in steamy room",new Emoji("🧖🏻‍♀️","woman in steamy room: light skin tone"),new Emoji("🧖🏼‍♀️","woman in steamy room: medium-light skin tone"),new Emoji("🧖🏽‍♀️","woman in steamy room: medium skin tone"),new Emoji("🧖🏾‍♀️","woman in steamy room: medium-dark skin tone"),new Emoji("🧖🏿‍♀️","woman in steamy room: dark skin tone")),activity=[new EmojiGroup("💆","person getting massage",personGettingMassage,manGettingMassage,womanGettingMassage),new EmojiGroup("💇","person getting haircut",personGettingHaircut,manGettingHaircut,womanGettingHaircut),new EmojiGroup("🚶","person walking",personWalking,manWalking,womanWalking),new EmojiGroup("🧍","person standing",personStanding,manStanding,womanStanding),new EmojiGroup("🧎","person kneeling",personKneeling,manKneeling,womanKneeling),new EmojiGroup("🦯","probing cane",manWithProbingCane,womanWithProbingCane),new EmojiGroup("🦼","motorized wheelchair",manInMotorizedWheelchair,womanInMotorizedWheelchair),new EmojiGroup("🦽","manual wheelchair",manInManualWheelchair,womanInManualWheelchair),new EmojiGroup("🏃","person running",personRunning,manRunning,womanRunning),new EmojiGroup("🕺","dancing",manDancing,womanDancing),manInSuitLevitating,new EmojiGroup("🧖","person in steamy room",personInSteamyRoom,manInSteamyRoom,womanInSteamyRoom)],personClimbing=new EmojiGroup("🧗","person climbing",new Emoji("🧗🏻","person climbing: light skin tone"),new Emoji("🧗🏼","person climbing: medium-light skin tone"),new Emoji("🧗🏽","person climbing: medium skin tone"),new Emoji("🧗🏾","person climbing: medium-dark skin tone"),new Emoji("🧗🏿","person climbing: dark skin tone")),manClimbing=new EmojiGroup("🧗‍♂️","man climbing",new Emoji("🧗🏻‍♂️","man climbing: light skin tone"),new Emoji("🧗🏼‍♂️","man climbing: medium-light skin tone"),new Emoji("🧗🏽‍♂️","man climbing: medium skin tone"),new Emoji("🧗🏾‍♂️","man climbing: medium-dark skin tone"),new Emoji("🧗🏿‍♂️","man climbing: dark skin tone")),womanClimbing=new EmojiGroup("🧗‍♀️","woman climbing",new Emoji("🧗🏻‍♀️","woman climbing: light skin tone"),new Emoji("🧗🏼‍♀️","woman climbing: medium-light skin tone"),new Emoji("🧗🏽‍♀️","woman climbing: medium skin tone"),new Emoji("🧗🏾‍♀️","woman climbing: medium-dark skin tone"),new Emoji("🧗🏿‍♀️","woman climbing: dark skin tone")),personFencing=new Emoji("🤺","person fencing"),personRacingHorse=new EmojiGroup("🏇","horse racing",new Emoji("🏇🏻","horse racing: light skin tone"),new Emoji("🏇🏼","horse racing: medium-light skin tone"),new Emoji("🏇🏽","horse racing: medium skin tone"),new Emoji("🏇🏾","horse racing: medium-dark skin tone"),new Emoji("🏇🏿","horse racing: dark skin tone")),personSkiing=new Emoji("⛷️","skier"),personSnowboarding=new EmojiGroup("🏂","snowboarder",new Emoji("🏂🏻","snowboarder: light skin tone"),new Emoji("🏂🏼","snowboarder: medium-light skin tone"),new Emoji("🏂🏽","snowboarder: medium skin tone"),new Emoji("🏂🏾","snowboarder: medium-dark skin tone"),new Emoji("🏂🏿","snowboarder: dark skin tone")),personGolfing=new EmojiGroup("🏌️","person golfing",new Emoji("🏌🏻","person golfing: light skin tone"),new Emoji("🏌🏼","person golfing: medium-light skin tone"),new Emoji("🏌🏽","person golfing: medium skin tone"),new Emoji("🏌🏾","person golfing: medium-dark skin tone"),new Emoji("🏌🏿","person golfing: dark skin tone")),manGolfing=new EmojiGroup("🏌️‍♂️","man golfing",new Emoji("🏌🏻‍♂️","man golfing: light skin tone"),new Emoji("🏌🏼‍♂️","man golfing: medium-light skin tone"),new Emoji("🏌🏽‍♂️","man golfing: medium skin tone"),new Emoji("🏌🏾‍♂️","man golfing: medium-dark skin tone"),new Emoji("🏌🏿‍♂️","man golfing: dark skin tone")),womanGolfing=new EmojiGroup("🏌️‍♀️","woman golfing",new Emoji("🏌🏻‍♀️","woman golfing: light skin tone"),new Emoji("🏌🏼‍♀️","woman golfing: medium-light skin tone"),new Emoji("🏌🏽‍♀️","woman golfing: medium skin tone"),new Emoji("🏌🏾‍♀️","woman golfing: medium-dark skin tone"),new Emoji("🏌🏿‍♀️","woman golfing: dark skin tone")),personBouncingBall=new EmojiGroup("⛹️","person bouncing ball",new Emoji("⛹🏻","person bouncing ball: light skin tone"),new Emoji("⛹🏼","person bouncing ball: medium-light skin tone"),new Emoji("⛹🏽","person bouncing ball: medium skin tone"),new Emoji("⛹🏾","person bouncing ball: medium-dark skin tone"),new Emoji("⛹🏿","person bouncing ball: dark skin tone")),manBouncingBall=new EmojiGroup("⛹️‍♂️","man bouncing ball",new Emoji("⛹🏻‍♂️","man bouncing ball: light skin tone"),new Emoji("⛹🏼‍♂️","man bouncing ball: medium-light skin tone"),new Emoji("⛹🏽‍♂️","man bouncing ball: medium skin tone"),new Emoji("⛹🏾‍♂️","man bouncing ball: medium-dark skin tone"),new Emoji("⛹🏿‍♂️","man bouncing ball: dark skin tone")),womanBouncingBall=new EmojiGroup("⛹️‍♀️","woman bouncing ball",new Emoji("⛹🏻‍♀️","woman bouncing ball: light skin tone"),new Emoji("⛹🏼‍♀️","woman bouncing ball: medium-light skin tone"),new Emoji("⛹🏽‍♀️","woman bouncing ball: medium skin tone"),new Emoji("⛹🏾‍♀️","woman bouncing ball: medium-dark skin tone"),new Emoji("⛹🏿‍♀️","woman bouncing ball: dark skin tone")),personLiftingWeights=new EmojiGroup("🏋️","person lifting weights",new Emoji("🏋🏻","person lifting weights: light skin tone"),new Emoji("🏋🏼","person lifting weights: medium-light skin tone"),new Emoji("🏋🏽","person lifting weights: medium skin tone"),new Emoji("🏋🏾","person lifting weights: medium-dark skin tone"),new Emoji("🏋🏿","person lifting weights: dark skin tone")),manLifitingWeights=new EmojiGroup("🏋️‍♂️","man lifting weights",new Emoji("🏋🏻‍♂️","man lifting weights: light skin tone"),new Emoji("🏋🏼‍♂️","man lifting weights: medium-light skin tone"),new Emoji("🏋🏽‍♂️","man lifting weights: medium skin tone"),new Emoji("🏋🏾‍♂️","man lifting weights: medium-dark skin tone"),new Emoji("🏋🏿‍♂️","man lifting weights: dark skin tone")),womanLiftingWeights=new EmojiGroup("🏋️‍♀️","woman lifting weights",new Emoji("🏋🏻‍♀️","woman lifting weights: light skin tone"),new Emoji("🏋🏼‍♀️","woman lifting weights: medium-light skin tone"),new Emoji("🏋🏽‍♀️","woman lifting weights: medium skin tone"),new Emoji("🏋🏾‍♀️","woman lifting weights: medium-dark skin tone"),new Emoji("🏋🏿‍♀️","woman lifting weights: dark skin tone")),personBiking=new EmojiGroup("🚴","person biking",new Emoji("🚴🏻","person biking: light skin tone"),new Emoji("🚴🏼","person biking: medium-light skin tone"),new Emoji("🚴🏽","person biking: medium skin tone"),new Emoji("🚴🏾","person biking: medium-dark skin tone"),new Emoji("🚴🏿","person biking: dark skin tone")),manBiking=new EmojiGroup("🚴‍♂️","man biking",new Emoji("🚴🏻‍♂️","man biking: light skin tone"),new Emoji("🚴🏼‍♂️","man biking: medium-light skin tone"),new Emoji("🚴🏽‍♂️","man biking: medium skin tone"),new Emoji("🚴🏾‍♂️","man biking: medium-dark skin tone"),new Emoji("🚴🏿‍♂️","man biking: dark skin tone")),womanBiking=new EmojiGroup("🚴‍♀️","woman biking",new Emoji("🚴🏻‍♀️","woman biking: light skin tone"),new Emoji("🚴🏼‍♀️","woman biking: medium-light skin tone"),new Emoji("🚴🏽‍♀️","woman biking: medium skin tone"),new Emoji("🚴🏾‍♀️","woman biking: medium-dark skin tone"),new Emoji("🚴🏿‍♀️","woman biking: dark skin tone")),personMountainBiking=new EmojiGroup("🚵","person mountain biking",new Emoji("🚵🏻","person mountain biking: light skin tone"),new Emoji("🚵🏼","person mountain biking: medium-light skin tone"),new Emoji("🚵🏽","person mountain biking: medium skin tone"),new Emoji("🚵🏾","person mountain biking: medium-dark skin tone"),new Emoji("🚵🏿","person mountain biking: dark skin tone")),manMountainBiking=new EmojiGroup("🚵‍♂️","man mountain biking",new Emoji("🚵🏻‍♂️","man mountain biking: light skin tone"),new Emoji("🚵🏼‍♂️","man mountain biking: medium-light skin tone"),new Emoji("🚵🏽‍♂️","man mountain biking: medium skin tone"),new Emoji("🚵🏾‍♂️","man mountain biking: medium-dark skin tone"),new Emoji("🚵🏿‍♂️","man mountain biking: dark skin tone")),womanMountainBiking=new EmojiGroup("🚵‍♀️","woman mountain biking",new Emoji("🚵🏻‍♀️","woman mountain biking: light skin tone"),new Emoji("🚵🏼‍♀️","woman mountain biking: medium-light skin tone"),new Emoji("🚵🏽‍♀️","woman mountain biking: medium skin tone"),new Emoji("🚵🏾‍♀️","woman mountain biking: medium-dark skin tone"),new Emoji("🚵🏿‍♀️","woman mountain biking: dark skin tone")),personCartwheeling=new EmojiGroup("🤸","person cartwheeling",new Emoji("🤸🏻","person cartwheeling: light skin tone"),new Emoji("🤸🏼","person cartwheeling: medium-light skin tone"),new Emoji("🤸🏽","person cartwheeling: medium skin tone"),new Emoji("🤸🏾","person cartwheeling: medium-dark skin tone"),new Emoji("🤸🏿","person cartwheeling: dark skin tone")),manCartwheeling=new EmojiGroup("🤸‍♂️","man cartwheeling",new Emoji("🤸🏻‍♂️","man cartwheeling: light skin tone"),new Emoji("🤸🏼‍♂️","man cartwheeling: medium-light skin tone"),new Emoji("🤸🏽‍♂️","man cartwheeling: medium skin tone"),new Emoji("🤸🏾‍♂️","man cartwheeling: medium-dark skin tone"),new Emoji("🤸🏿‍♂️","man cartwheeling: dark skin tone")),womanCartweeling=new EmojiGroup("🤸‍♀️","woman cartwheeling",new Emoji("🤸🏻‍♀️","woman cartwheeling: light skin tone"),new Emoji("🤸🏼‍♀️","woman cartwheeling: medium-light skin tone"),new Emoji("🤸🏽‍♀️","woman cartwheeling: medium skin tone"),new Emoji("🤸🏾‍♀️","woman cartwheeling: medium-dark skin tone"),new Emoji("🤸🏿‍♀️","woman cartwheeling: dark skin tone")),peopleWrestling=new Emoji("🤼","people wrestling"),menWrestling=new Emoji("🤼‍♂️","men wrestling"),womenWrestling=new Emoji("🤼‍♀️","women wrestling"),personPlayingWaterPolo=new EmojiGroup("🤽","person playing water polo",new Emoji("🤽🏻","person playing water polo: light skin tone"),new Emoji("🤽🏼","person playing water polo: medium-light skin tone"),new Emoji("🤽🏽","person playing water polo: medium skin tone"),new Emoji("🤽🏾","person playing water polo: medium-dark skin tone"),new Emoji("🤽🏿","person playing water polo: dark skin tone")),manPlayingWaterPolo=new EmojiGroup("🤽‍♂️","man playing water polo",new Emoji("🤽🏻‍♂️","man playing water polo: light skin tone"),new Emoji("🤽🏼‍♂️","man playing water polo: medium-light skin tone"),new Emoji("🤽🏽‍♂️","man playing water polo: medium skin tone"),new Emoji("🤽🏾‍♂️","man playing water polo: medium-dark skin tone"),new Emoji("🤽🏿‍♂️","man playing water polo: dark skin tone")),womanPlayingWaterPolo=new EmojiGroup("🤽‍♀️","woman playing water polo",new Emoji("🤽🏻‍♀️","woman playing water polo: light skin tone"),new Emoji("🤽🏼‍♀️","woman playing water polo: medium-light skin tone"),new Emoji("🤽🏽‍♀️","woman playing water polo: medium skin tone"),new Emoji("🤽🏾‍♀️","woman playing water polo: medium-dark skin tone"),new Emoji("🤽🏿‍♀️","woman playing water polo: dark skin tone")),personPlayingHandball=new EmojiGroup("🤾","person playing handball",new Emoji("🤾🏻","person playing handball: light skin tone"),new Emoji("🤾🏼","person playing handball: medium-light skin tone"),new Emoji("🤾🏽","person playing handball: medium skin tone"),new Emoji("🤾🏾","person playing handball: medium-dark skin tone"),new Emoji("🤾🏿","person playing handball: dark skin tone")),manPlayingHandball=new EmojiGroup("🤾‍♂️","man playing handball",new Emoji("🤾🏻‍♂️","man playing handball: light skin tone"),new Emoji("🤾🏼‍♂️","man playing handball: medium-light skin tone"),new Emoji("🤾🏽‍♂️","man playing handball: medium skin tone"),new Emoji("🤾🏾‍♂️","man playing handball: medium-dark skin tone"),new Emoji("🤾🏿‍♂️","man playing handball: dark skin tone")),womanPlayingHandball=new EmojiGroup("🤾‍♀️","woman playing handball",new Emoji("🤾🏻‍♀️","woman playing handball: light skin tone"),new Emoji("🤾🏼‍♀️","woman playing handball: medium-light skin tone"),new Emoji("🤾🏽‍♀️","woman playing handball: medium skin tone"),new Emoji("🤾🏾‍♀️","woman playing handball: medium-dark skin tone"),new Emoji("🤾🏿‍♀️","woman playing handball: dark skin tone")),personJuggling=new EmojiGroup("🤹","person juggling",new Emoji("🤹🏻","person juggling: light skin tone"),new Emoji("🤹🏼","person juggling: medium-light skin tone"),new Emoji("🤹🏽","person juggling: medium skin tone"),new Emoji("🤹🏾","person juggling: medium-dark skin tone"),new Emoji("🤹🏿","person juggling: dark skin tone")),manJuggling=new EmojiGroup("🤹‍♂️","man juggling",new Emoji("🤹🏻‍♂️","man juggling: light skin tone"),new Emoji("🤹🏼‍♂️","man juggling: medium-light skin tone"),new Emoji("🤹🏽‍♂️","man juggling: medium skin tone"),new Emoji("🤹🏾‍♂️","man juggling: medium-dark skin tone"),new Emoji("🤹🏿‍♂️","man juggling: dark skin tone")),womanJuggling=new EmojiGroup("🤹‍♀️","woman juggling",new Emoji("🤹🏻‍♀️","woman juggling: light skin tone"),new Emoji("🤹🏼‍♀️","woman juggling: medium-light skin tone"),new Emoji("🤹🏽‍♀️","woman juggling: medium skin tone"),new Emoji("🤹🏾‍♀️","woman juggling: medium-dark skin tone"),new Emoji("🤹🏿‍♀️","woman juggling: dark skin tone")),sports=[new EmojiGroup("🧗","person climbing",personClimbing,manClimbing,womanClimbing),personFencing,personRacingHorse,personSkiing,personSnowboarding,new EmojiGroup("🏌️","person golfing",personGolfing,manGolfing,womanGolfing),new EmojiGroup("🏄","person surfing",personSurfing,manSurfing,womanSurfing),new EmojiGroup("🚣","person rowing boat",personRowing,manRowing,womanRowing),new EmojiGroup("🏊","person swimming",personSwimming,manSwimming,womanSwimming),new EmojiGroup("⛹️","person bouncing ball",personBouncingBall,manBouncingBall,womanBouncingBall),new EmojiGroup("🏋️","person lifting weights",personLiftingWeights,manLifitingWeights,womanLiftingWeights),new EmojiGroup("🚴","person biking",personBiking,manBiking,womanBiking),new EmojiGroup("🚵","person mountain biking",personMountainBiking,manMountainBiking,womanMountainBiking),new EmojiGroup("🤸","person cartwheeling",personCartwheeling,manCartwheeling,womanCartweeling),new EmojiGroup("🤼","people wrestling",peopleWrestling,menWrestling,womenWrestling),new EmojiGroup("🤽","person playing water polo",personPlayingWaterPolo,manPlayingWaterPolo,womanPlayingWaterPolo),new EmojiGroup("🤾","person playing handball",personPlayingHandball,manPlayingHandball,womanPlayingHandball),new EmojiGroup("🤹","person juggling",personJuggling,manJuggling,womanJuggling)],personInLotusPosition=new EmojiGroup("🧘","person in lotus position",new Emoji("🧘🏻","person in lotus position: light skin tone"),new Emoji("🧘🏼","person in lotus position: medium-light skin tone"),new Emoji("🧘🏽","person in lotus position: medium skin tone"),new Emoji("🧘🏾","person in lotus position: medium-dark skin tone"),new Emoji("🧘🏿","person in lotus position: dark skin tone")),manInLotusPosition=new EmojiGroup("🧘‍♂️","man in lotus position",new Emoji("🧘🏻‍♂️","man in lotus position: light skin tone"),new Emoji("🧘🏼‍♂️","man in lotus position: medium-light skin tone"),new Emoji("🧘🏽‍♂️","man in lotus position: medium skin tone"),new Emoji("🧘🏾‍♂️","man in lotus position: medium-dark skin tone"),new Emoji("🧘🏿‍♂️","man in lotus position: dark skin tone")),womanInLotusPosition=new EmojiGroup("🧘‍♀️","woman in lotus position",new Emoji("🧘🏻‍♀️","woman in lotus position: light skin tone"),new Emoji("🧘🏼‍♀️","woman in lotus position: medium-light skin tone"),new Emoji("🧘🏽‍♀️","woman in lotus position: medium skin tone"),new Emoji("🧘🏾‍♀️","woman in lotus position: medium-dark skin tone"),new Emoji("🧘🏿‍♀️","woman in lotus position: dark skin tone")),personTakingBath=new EmojiGroup("🛀","person taking bath",new Emoji("🛀🏻","person taking bath: light skin tone"),new Emoji("🛀🏼","person taking bath: medium-light skin tone"),new Emoji("🛀🏽","person taking bath: medium skin tone"),new Emoji("🛀🏾","person taking bath: medium-dark skin tone"),new Emoji("🛀🏿","person taking bath: dark skin tone")),personInBed=new EmojiGroup("🛌","person in bed",new Emoji("🛌🏻","person in bed: light skin tone"),new Emoji("🛌🏼","person in bed: medium-light skin tone"),new Emoji("🛌🏽","person in bed: medium skin tone"),new Emoji("🛌🏾","person in bed: medium-dark skin tone"),new Emoji("🛌🏿","person in bed: dark skin tone")),personResting=[new EmojiGroup(personInLotusPosition.value,"in lotus position",personInLotusPosition,manInLotusPosition,womanInLotusPosition),personTakingBath,personInBed],people=[{value:baby.value,desc:"baby",alts:[baby,babyAngel]},new EmojiGroup("🧒","child",child,boy,girl),{value:"🧑",desc:"person",alts:[new EmojiGroup("🧑","person",person,blondPerson,olderPerson,personFrowning,personPouting,personGesturingNo,personGesturingOK,personTippingHand,personRaisingHand,deafPerson,personBowing,personFacePalming,personShrugging,spy,guard,constructionWorker,personWearingTurban,superhero,supervillain,mage,fairy,vampire,merperson,elf,genie,zombie,personGettingMassage,personGettingHaircut,personWalking,personStanding,personKneeling,personRunning,personInSteamyRoom,personClimbing,personFencing,personRacingHorse,personSkiing,personSnowboarding,personGolfing,personSurfing,personRowing,personSwimming,personBouncingBall,personLiftingWeights,personBiking,personMountainBiking,personCartwheeling,peopleWrestling,personPlayingWaterPolo,personPlayingHandball,personJuggling,personInLotusPosition,personTakingBath,personInBed),new EmojiGroup("👨","man",man,blondMan,redHairedMan,curlyHairedMan,whiteHairedMan,baldMan,beardedMan,oldMan,manFrowning,manPouting,manGesturingNo,manGesturingOK,manTippingHand,manRaisingHand,deafMan,manBowing,manFacePalming,manShrugging,manHealthWorker,manStudent,manTeacher,manJudge,manFarmer,manCook,manMechanic,manFactoryWorker,manOfficeWorker,manScientist,manTechnologist,manSinger,manArtist,manPilot,manAstronaut,manFirefighter,manPoliceOfficer,manSpy,manGuard,manConstructionWorker,prince,manWearingTurban,manWithChineseCap,manInTuxedo,santaClaus,manSuperhero,manSupervillain,manMage,manFairy,manVampire,merman,manElf,manGenie,manZombie,manGettingMassage,manGettingHaircut,manWalking,manStanding,manKneeling,manWithProbingCane,manInMotorizedWheelchair,manInManualWheelchair,manRunning,manDancing,manInSuitLevitating,manInSteamyRoom,manClimbing,manGolfing,manSurfing,manRowing,manSwimming,manBouncingBall,manLifitingWeights,manBiking,manMountainBiking,manCartwheeling,menWrestling,manPlayingWaterPolo,manPlayingHandball,manJuggling,manInLotusPosition),new EmojiGroup("👩","woman",woman,blondWoman,redHairedWoman,curlyHairedWoman,whiteHairedWoman,baldWoman,oldWoman,womanFrowning,womanPouting,womanGesturingNo,womanGesturingOK,womanTippingHand,womanRaisingHand,deafWoman,womanBowing,womanFacePalming,womanShrugging,womanHealthWorker,womanStudent,womanTeacher,womanJudge,womanFarmer,womanCook,womanMechanic,womanFactoryWorker,womanOfficeWorker,womanScientist,womanTechnologist,womanSinger,womanArtist,womanPilot,womanAstronaut,womanFirefighter,womanPoliceOfficer,womanSpy,womanGuard,womanConstructionWorker,princess,womanWearingTurban,womanWithHeadscarf,brideWithVeil,pregnantWoman,breastFeeding,mrsClaus,womanSuperhero,womanSupervillain,womanMage,womanFairy,womanVampire,mermaid,womanElf,womanGenie,womanZombie,womanGettingMassage,womanGettingHaircut,womanWalking,womanStanding,womanKneeling,womanWithProbingCane,womanInMotorizedWheelchair,womanInManualWheelchair,womanRunning,womanDancing,womanInSteamyRoom,womanClimbing,womanGolfing,womanSurfing,womanRowing,womanSwimming,womanBouncingBall,womanLiftingWeights,womanBiking,womanMountainBiking,womanCartweeling,womenWrestling,womanPlayingWaterPolo,womanPlayingHandball,womanJuggling,womanInLotusPosition)]},new EmojiGroup("🧓","older person",olderPerson,oldMan,oldWoman)],allPeople=[people,gestures,activity,roles,fantasy,sports,personResting,otherPeople];function randomPerson(){let e=allPeople.random().random(),n=null;for(;e.alts&&n!==e;)n=e,e=e.value!==e.alts[0].value?e.alts.random(e):e.alts.random();return e}const ogre=new Emoji("👹","Ogre"),goblin=new Emoji("👺","Goblin"),ghost=new Emoji("👻","Ghost"),alien=new Emoji("👽","Alien"),alienMonster=new Emoji("👾","Alien Monster"),angryFaceWithHorns=new Emoji("👿","Angry Face with Horns"),skull=new Emoji("💀","Skull"),pileOfPoo=new Emoji("💩","Pile of Poo"),grinningFace=new Emoji("😀","Grinning Face"),beamingFaceWithSmilingEyes=new Emoji("😁","Beaming Face with Smiling Eyes"),faceWithTearsOfJoy=new Emoji("😂","Face with Tears of Joy"),grinningFaceWithBigEyes=new Emoji("😃","Grinning Face with Big Eyes"),grinningFaceWithSmilingEyes=new Emoji("😄","Grinning Face with Smiling Eyes"),grinningFaceWithSweat=new Emoji("😅","Grinning Face with Sweat"),grinningSquitingFace=new Emoji("😆","Grinning Squinting Face"),smillingFaceWithHalo=new Emoji("😇","Smiling Face with Halo"),smilingFaceWithHorns=new Emoji("😈","Smiling Face with Horns"),winkingFace=new Emoji("😉","Winking Face"),smilingFaceWithSmilingEyes=new Emoji("😊","Smiling Face with Smiling Eyes"),faceSavoringFood=new Emoji("😋","Face Savoring Food"),relievedFace=new Emoji("😌","Relieved Face"),smilingFaceWithHeartEyes=new Emoji("😍","Smiling Face with Heart-Eyes"),smilingFaceWithSunglasses=new Emoji("😎","Smiling Face with Sunglasses"),smirkingFace=new Emoji("😏","Smirking Face"),neutralFace=new Emoji("😐","Neutral Face"),expressionlessFace=new Emoji("😑","Expressionless Face"),unamusedFace=new Emoji("😒","Unamused Face"),downcastFaceWithSweat=new Emoji("😓","Downcast Face with Sweat"),pensiveFace=new Emoji("😔","Pensive Face"),confusedFace=new Emoji("😕","Confused Face"),confoundedFace=new Emoji("😖","Confounded Face"),kissingFace=new Emoji("😗","Kissing Face"),faceBlowingAKiss=new Emoji("😘","Face Blowing a Kiss"),kissingFaceWithSmilingEyes=new Emoji("😙","Kissing Face with Smiling Eyes"),kissingFaceWithClosedEyes=new Emoji("😚","Kissing Face with Closed Eyes"),faceWithTongue=new Emoji("😛","Face with Tongue"),winkingFaceWithTongue=new Emoji("😜","Winking Face with Tongue"),squintingFaceWithTongue=new Emoji("😝","Squinting Face with Tongue"),disappointedFace=new Emoji("😞","Disappointed Face"),worriedFace=new Emoji("😟","Worried Face"),angryFace=new Emoji("😠","Angry Face"),poutingFace=new Emoji("😡","Pouting Face"),cryingFace=new Emoji("😢","Crying Face"),perseveringFace=new Emoji("😣","Persevering Face"),faceWithSteamFromNose=new Emoji("😤","Face with Steam From Nose"),sadButRelievedFace=new Emoji("😥","Sad but Relieved Face"),frowningFaceWithOpenMouth=new Emoji("😦","Frowning Face with Open Mouth"),anguishedFace=new Emoji("😧","Anguished Face"),fearfulFace=new Emoji("😨","Fearful Face"),wearyFace=new Emoji("😩","Weary Face"),sleepyFace=new Emoji("😪","Sleepy Face"),tiredFace=new Emoji("😫","Tired Face"),grimacingFace=new Emoji("😬","Grimacing Face"),loudlyCryingFace=new Emoji("😭","Loudly Crying Face"),faceWithOpenMouth=new Emoji("😮","Face with Open Mouth"),hushedFace=new Emoji("😯","Hushed Face"),anxiousFaceWithSweat=new Emoji("😰","Anxious Face with Sweat"),faceScreamingInFear=new Emoji("😱","Face Screaming in Fear"),astonishedFace=new Emoji("😲","Astonished Face"),flushedFace=new Emoji("😳","Flushed Face"),sleepingFace=new Emoji("😴","Sleeping Face"),dizzyFace=new Emoji("😵","Dizzy Face"),faceWithoutMouth=new Emoji("😶","Face Without Mouth"),faceWithMedicalMask=new Emoji("😷","Face with Medical Mask"),grinningCatWithSmilingEyes=new Emoji("😸","Grinning Cat with Smiling Eyes"),catWithTearsOfJoy=new Emoji("😹","Cat with Tears of Joy"),grinningCat=new Emoji("😺","Grinning Cat"),smilingCatWithHeartEyes=new Emoji("😻","Smiling Cat with Heart-Eyes"),catWithWrySmile=new Emoji("😼","Cat with Wry Smile"),kissingCat=new Emoji("😽","Kissing Cat"),poutingCat=new Emoji("😾","Pouting Cat"),cryingCat=new Emoji("😿","Crying Cat"),wearyCat=new Emoji("🙀","Weary Cat"),slightlyFrowningFace=new Emoji("🙁","Slightly Frowning Face"),slightlySmilingFace=new Emoji("🙂","Slightly Smiling Face"),updisdeDownFace=new Emoji("🙃","Upside-Down Face"),faceWithRollingEyes=new Emoji("🙄","Face with Rolling Eyes"),seeNoEvilMonkey=new Emoji("🙈","See-No-Evil Monkey"),hearNoEvilMonkey=new Emoji("🙉","Hear-No-Evil Monkey"),speakNoEvilMonkey=new Emoji("🙊","Speak-No-Evil Monkey"),zipperMouthFace=new Emoji("🤐","Zipper-Mouth Face"),moneyMouthFace=new Emoji("🤑","Money-Mouth Face"),faceWithThermometer=new Emoji("🤒","Face with Thermometer"),nerdFace=new Emoji("🤓","Nerd Face"),thinkingFace=new Emoji("🤔","Thinking Face"),faceWithHeadBandage=new Emoji("🤕","Face with Head-Bandage"),robot=new Emoji("🤖","Robot"),huggingFace=new Emoji("🤗","Hugging Face"),cowboyHatFace=new Emoji("🤠","Cowboy Hat Face"),clownFace=new Emoji("🤡","Clown Face"),nauseatedFace=new Emoji("🤢","Nauseated Face"),rollingOnTheFloorLaughing=new Emoji("🤣","Rolling on the Floor Laughing"),droolingFace=new Emoji("🤤","Drooling Face"),lyingFace=new Emoji("🤥","Lying Face"),sneezingFace=new Emoji("🤧","Sneezing Face"),faceWithRaisedEyebrow=new Emoji("🤨","Face with Raised Eyebrow"),starStruck=new Emoji("🤩","Star-Struck"),zanyFace=new Emoji("🤪","Zany Face"),shushingFace=new Emoji("🤫","Shushing Face"),faceWithSymbolsOnMouth=new Emoji("🤬","Face with Symbols on Mouth"),faceWithHandOverMouth=new Emoji("🤭","Face with Hand Over Mouth"),faceVomitting=new Emoji("🤮","Face Vomiting"),explodingHead=new Emoji("🤯","Exploding Head"),smilingFaceWithHearts=new Emoji("🥰","Smiling Face with Hearts"),yawningFace=new Emoji("🥱","Yawning Face"),smilingFaceWithTear=new Emoji("🥲","Smiling Face with Tear"),partyingFace=new Emoji("🥳","Partying Face"),woozyFace=new Emoji("🥴","Woozy Face"),hotFace=new Emoji("🥵","Hot Face"),coldFace=new Emoji("🥶","Cold Face"),disguisedFace=new Emoji("🥸","Disguised Face"),pleadingFace=new Emoji("🥺","Pleading Face"),faceWithMonocle=new Emoji("🧐","Face with Monocle"),skullAndCrossbones=new Emoji("☠️","Skull and Crossbones"),frowningFace=new Emoji("☹️","Frowning Face"),fmilingFace=new Emoji("☺️","Smiling Face"),speakingHead=new Emoji("🗣️","Speaking Head"),bust=new Emoji("👤","Bust in Silhouette"),faces=[ogre,goblin,ghost,alien,alienMonster,angryFaceWithHorns,skull,pileOfPoo,grinningFace,beamingFaceWithSmilingEyes,faceWithTearsOfJoy,grinningFaceWithBigEyes,grinningFaceWithSmilingEyes,grinningFaceWithSweat,grinningSquitingFace,smillingFaceWithHalo,smilingFaceWithHorns,winkingFace,smilingFaceWithSmilingEyes,faceSavoringFood,relievedFace,smilingFaceWithHeartEyes,smilingFaceWithSunglasses,smirkingFace,neutralFace,expressionlessFace,unamusedFace,downcastFaceWithSweat,pensiveFace,confusedFace,confoundedFace,kissingFace,faceBlowingAKiss,kissingFaceWithSmilingEyes,kissingFaceWithClosedEyes,faceWithTongue,winkingFaceWithTongue,squintingFaceWithTongue,disappointedFace,worriedFace,angryFace,poutingFace,cryingFace,perseveringFace,faceWithSteamFromNose,sadButRelievedFace,frowningFaceWithOpenMouth,anguishedFace,fearfulFace,wearyFace,sleepyFace,tiredFace,grimacingFace,loudlyCryingFace,faceWithOpenMouth,hushedFace,anxiousFaceWithSweat,faceScreamingInFear,astonishedFace,flushedFace,sleepingFace,dizzyFace,faceWithoutMouth,faceWithMedicalMask,grinningCatWithSmilingEyes,catWithTearsOfJoy,grinningCat,smilingCatWithHeartEyes,catWithWrySmile,kissingCat,poutingCat,cryingCat,wearyCat,slightlyFrowningFace,slightlySmilingFace,updisdeDownFace,faceWithRollingEyes,seeNoEvilMonkey,hearNoEvilMonkey,speakNoEvilMonkey,zipperMouthFace,moneyMouthFace,faceWithThermometer,nerdFace,thinkingFace,faceWithHeadBandage,robot,huggingFace,cowboyHatFace,clownFace,nauseatedFace,rollingOnTheFloorLaughing,droolingFace,lyingFace,sneezingFace,faceWithRaisedEyebrow,starStruck,zanyFace,shushingFace,faceWithSymbolsOnMouth,faceWithHandOverMouth,faceVomitting,explodingHead,smilingFaceWithHearts,yawningFace,smilingFaceWithTear,partyingFace,woozyFace,hotFace,coldFace,disguisedFace,pleadingFace,faceWithMonocle,skullAndCrossbones,frowningFace,fmilingFace,speakingHead,bust],kissMark=new Emoji("💋","Kiss Mark"),loveLetter=new Emoji("💌","Love Letter"),beatingHeart=new Emoji("💓","Beating Heart"),brokenHeart=new Emoji("💔","Broken Heart"),twoHearts=new Emoji("💕","Two Hearts"),sparklingHeart=new Emoji("💖","Sparkling Heart"),growingHeart=new Emoji("💗","Growing Heart"),heartWithArrow=new Emoji("💘","Heart with Arrow"),blueHeart=new Emoji("💙","Blue Heart"),greenHeart=new Emoji("💚","Green Heart"),yellowHeart=new Emoji("💛","Yellow Heart"),purpleHeart=new Emoji("💜","Purple Heart"),heartWithRibbon=new Emoji("💝","Heart with Ribbon"),revolvingHearts=new Emoji("💞","Revolving Hearts"),heartDecoration=new Emoji("💟","Heart Decoration"),blackHeart=new Emoji("🖤","Black Heart"),whiteHeart=new Emoji("🤍","White Heart"),brownHeart=new Emoji("🤎","Brown Heart"),orangeHeart=new Emoji("🧡","Orange Heart"),heartExclamation=new Emoji("❣️","Heart Exclamation"),redHeart=new Emoji("❤️","Red Heart"),love=[kissMark,loveLetter,beatingHeart,brokenHeart,twoHearts,sparklingHeart,growingHeart,heartWithArrow,blueHeart,greenHeart,yellowHeart,purpleHeart,heartWithRibbon,revolvingHearts,heartDecoration,blackHeart,whiteHeart,brownHeart,orangeHeart,heartExclamation,redHeart],cartoon=[new Emoji("💢","Anger Symbol"),new Emoji("💣","Bomb"),new Emoji("💤","Zzz"),new Emoji("💥","Collision"),new Emoji("💦","Sweat Droplets"),new Emoji("💨","Dashing Away"),new Emoji("💫","Dizzy"),new Emoji("💬","Speech Balloon"),new Emoji("💭","Thought Balloon"),new Emoji("💯","Hundred Points"),new Emoji("🕳️","Hole"),new Emoji("🗨️","Left Speech Bubble"),new Emoji("🗯️","Right Anger Bubble")],hands=[new Emoji("👆","Backhand Index Pointing Up"),new Emoji("👇","Backhand Index Pointing Down"),new Emoji("👈","Backhand Index Pointing Left"),new Emoji("👉","Backhand Index Pointing Right"),new Emoji("👊","Oncoming Fist"),new Emoji("👋","Waving Hand"),new Emoji("👌","OK Hand"),new Emoji("👍","Thumbs Up"),new Emoji("👎","Thumbs Down"),new Emoji("👏","Clapping Hands"),new Emoji("👐","Open Hands"),new Emoji("💅","Nail Polish"),new Emoji("🖐️","Hand with Fingers Splayed"),new Emoji("🖕","Middle Finger"),new Emoji("🖖","Vulcan Salute"),new Emoji("🙌","Raising Hands"),new Emoji("🙏","Folded Hands"),new Emoji("🤌","Pinched Fingers"),new Emoji("🤏","Pinching Hand"),new Emoji("🤘","Sign of the Horns"),new Emoji("🤙","Call Me Hand"),new Emoji("🤚","Raised Back of Hand"),new Emoji("🤛","Left-Facing Fist"),new Emoji("🤜","Right-Facing Fist"),new Emoji("🤝","Handshake"),new Emoji("🤞","Crossed Fingers"),new Emoji("🤟","Love-You Gesture"),new Emoji("🤲","Palms Up Together"),new Emoji("☝️","Index Pointing Up"),new Emoji("✊","Raised Fist"),new Emoji("✋","Raised Hand"),new Emoji("✌️","Victory Hand"),new Emoji("✍️","Writing Hand")],bodyParts=[new Emoji("👀","Eyes"),new Emoji("👁️","Eye"),new Emoji("👁️‍🗨️","Eye in Speech Bubble"),new Emoji("👂","Ear"),new Emoji("👃","Nose"),new Emoji("👄","Mouth"),new Emoji("👅","Tongue"),new Emoji("💪","Flexed Biceps"),new Emoji("🤳","Selfie"),new Emoji("🦴","Bone"),new Emoji("🦵","Leg"),new Emoji("🦶","Foot"),new Emoji("🦷","Tooth"),new Emoji("🦻","Ear with Hearing Aid"),new Emoji("🦾","Mechanical Arm"),new Emoji("🦿","Mechanical Leg"),new Emoji("🧠","Brain"),new Emoji("🫀","Anatomical Heart"),new Emoji("🫁","Lungs")],sex=[new Emoji("‍♀️","Female"),new Emoji("‍♂️","Male")],skinTones=[new Emoji("🏻","Light Skin Tone"),new Emoji("🏼","Medium-Light Skin Tone"),new Emoji("🏽","Medium Skin Tone"),new Emoji("🏾","Medium-Dark Skin Tone"),new Emoji("🏿","Dark Skin Tone")],hairColors=[new Emoji("🦰","Red Hair"),new Emoji("🦱","Curly Hair"),new Emoji("🦳","White Hair"),new Emoji("🦲","Bald")],animals=[new Emoji("🐀","Rat"),new Emoji("🐁","Mouse"),new Emoji("🐂","Ox"),new Emoji("🐃","Water Buffalo"),new Emoji("🐄","Cow"),new Emoji("🐅","Tiger"),new Emoji("🐆","Leopard"),new Emoji("🐇","Rabbit"),new Emoji("🐈","Cat"),new Emoji("🐈‍⬛","Black Cat"),new Emoji("🐉","Dragon"),new Emoji("🐊","Crocodile"),new Emoji("🐋","Whale"),new Emoji("🐌","Snail"),new Emoji("🐍","Snake"),new Emoji("🐎","Horse"),new Emoji("🐏","Ram"),new Emoji("🐐","Goat"),new Emoji("🐑","Ewe"),new Emoji("🐒","Monkey"),new Emoji("🐓","Rooster"),new Emoji("🐔","Chicken"),new Emoji("🐕","Dog"),new Emoji("🐕‍🦺","Service Dog"),new Emoji("🐖","Pig"),new Emoji("🐗","Boar"),new Emoji("🐘","Elephant"),new Emoji("🐙","Octopus"),new Emoji("🐚","Spiral Shell"),new Emoji("🐛","Bug"),new Emoji("🐜","Ant"),new Emoji("🐝","Honeybee"),new Emoji("🐞","Lady Beetle"),new Emoji("🐟","Fish"),new Emoji("🐠","Tropical Fish"),new Emoji("🐡","Blowfish"),new Emoji("🐢","Turtle"),new Emoji("🐣","Hatching Chick"),new Emoji("🐤","Baby Chick"),new Emoji("🐥","Front-Facing Baby Chick"),new Emoji("🐦","Bird"),new Emoji("🐧","Penguin"),new Emoji("🐨","Koala"),new Emoji("🐩","Poodle"),new Emoji("🐪","Camel"),new Emoji("🐫","Two-Hump Camel"),new Emoji("🐬","Dolphin"),new Emoji("🐭","Mouse Face"),new Emoji("🐮","Cow Face"),new Emoji("🐯","Tiger Face"),new Emoji("🐰","Rabbit Face"),new Emoji("🐱","Cat Face"),new Emoji("🐲","Dragon Face"),new Emoji("🐳","Spouting Whale"),new Emoji("🐴","Horse Face"),new Emoji("🐵","Monkey Face"),new Emoji("🐶","Dog Face"),new Emoji("🐷","Pig Face"),new Emoji("🐸","Frog"),new Emoji("🐹","Hamster"),new Emoji("🐺","Wolf"),new Emoji("🐻","Bear"),new Emoji("🐻‍❄️","Polar Bear"),new Emoji("🐼","Panda"),new Emoji("🐽","Pig Nose"),new Emoji("🐾","Paw Prints"),new Emoji("🐿️","Chipmunk"),new Emoji("🕊️","Dove"),new Emoji("🕷️","Spider"),new Emoji("🕸️","Spider Web"),new Emoji("🦁","Lion"),new Emoji("🦂","Scorpion"),new Emoji("🦃","Turkey"),new Emoji("🦄","Unicorn"),new Emoji("🦅","Eagle"),new Emoji("🦆","Duck"),new Emoji("🦇","Bat"),new Emoji("🦈","Shark"),new Emoji("🦉","Owl"),new Emoji("🦊","Fox"),new Emoji("🦋","Butterfly"),new Emoji("🦌","Deer"),new Emoji("🦍","Gorilla"),new Emoji("🦎","Lizard"),new Emoji("🦏","Rhinoceros"),new Emoji("🦒","Giraffe"),new Emoji("🦓","Zebra"),new Emoji("🦔","Hedgehog"),new Emoji("🦕","Sauropod"),new Emoji("🦖","T-Rex"),new Emoji("🦗","Cricket"),new Emoji("🦘","Kangaroo"),new Emoji("🦙","Llama"),new Emoji("🦚","Peacock"),new Emoji("🦛","Hippopotamus"),new Emoji("🦜","Parrot"),new Emoji("🦝","Raccoon"),new Emoji("🦟","Mosquito"),new Emoji("🦠","Microbe"),new Emoji("🦡","Badger"),new Emoji("🦢","Swan"),new Emoji("🦣","Mammoth"),new Emoji("🦤","Dodo"),new Emoji("🦥","Sloth"),new Emoji("🦦","Otter"),new Emoji("🦧","Orangutan"),new Emoji("🦨","Skunk"),new Emoji("🦩","Flamingo"),new Emoji("🦫","Beaver"),new Emoji("🦬","Bison"),new Emoji("🦭","Seal"),new Emoji("🦮","Guide Dog"),new Emoji("🪰","Fly"),new Emoji("🪱","Worm"),new Emoji("🪲","Beetle"),new Emoji("🪳","Cockroach"),new Emoji("🪶","Feather")],plants=[new Emoji("🌱","Seedling"),new Emoji("🌲","Evergreen Tree"),new Emoji("🌳","Deciduous Tree"),new Emoji("🌴","Palm Tree"),new Emoji("🌵","Cactus"),new Emoji("🌷","Tulip"),new Emoji("🌸","Cherry Blossom"),new Emoji("🌹","Rose"),new Emoji("🌺","Hibiscus"),new Emoji("🌻","Sunflower"),new Emoji("🌼","Blossom"),new Emoji("🌾","Sheaf of Rice"),new Emoji("🌿","Herb"),new Emoji("🍀","Four Leaf Clover"),new Emoji("🍁","Maple Leaf"),new Emoji("🍂","Fallen Leaf"),new Emoji("🍃","Leaf Fluttering in Wind"),new Emoji("🏵️","Rosette"),new Emoji("💐","Bouquet"),new Emoji("💮","White Flower"),new Emoji("🥀","Wilted Flower"),new Emoji("🪴","Potted Plant"),new Emoji("☘️","Shamrock")],food=[new Emoji("🌭","Hot Dog"),new Emoji("🌮","Taco"),new Emoji("🌯","Burrito"),new Emoji("🌰","Chestnut"),new Emoji("🌶️","Hot Pepper"),new Emoji("🌽","Ear of Corn"),new Emoji("🍄","Mushroom"),new Emoji("🍅","Tomato"),new Emoji("🍆","Eggplant"),new Emoji("🍇","Grapes"),new Emoji("🍈","Melon"),new Emoji("🍉","Watermelon"),new Emoji("🍊","Tangerine"),new Emoji("🍋","Lemon"),new Emoji("🍌","Banana"),new Emoji("🍍","Pineapple"),new Emoji("🍎","Red Apple"),new Emoji("🍏","Green Apple"),new Emoji("🍐","Pear"),new Emoji("🍑","Peach"),new Emoji("🍒","Cherries"),new Emoji("🍓","Strawberry"),new Emoji("🍔","Hamburger"),new Emoji("🍕","Pizza"),new Emoji("🍖","Meat on Bone"),new Emoji("🍗","Poultry Leg"),new Emoji("🍘","Rice Cracker"),new Emoji("🍙","Rice Ball"),new Emoji("🍚","Cooked Rice"),new Emoji("🍛","Curry Rice"),new Emoji("🍜","Steaming Bowl"),new Emoji("🍝","Spaghetti"),new Emoji("🍞","Bread"),new Emoji("🍟","French Fries"),new Emoji("🍠","Roasted Sweet Potato"),new Emoji("🍡","Dango"),new Emoji("🍢","Oden"),new Emoji("🍣","Sushi"),new Emoji("🍤","Fried Shrimp"),new Emoji("🍥","Fish Cake with Swirl"),new Emoji("🍱","Bento Box"),new Emoji("🍲","Pot of Food"),new Emoji("🍳","Cooking"),new Emoji("🍿","Popcorn"),new Emoji("🥐","Croissant"),new Emoji("🥑","Avocado"),new Emoji("🥒","Cucumber"),new Emoji("🥓","Bacon"),new Emoji("🥔","Potato"),new Emoji("🥕","Carrot"),new Emoji("🥖","Baguette Bread"),new Emoji("🥗","Green Salad"),new Emoji("🥘","Shallow Pan of Food"),new Emoji("🥙","Stuffed Flatbread"),new Emoji("🥚","Egg"),new Emoji("🥜","Peanuts"),new Emoji("🥝","Kiwi Fruit"),new Emoji("🥞","Pancakes"),new Emoji("🥟","Dumpling"),new Emoji("🥠","Fortune Cookie"),new Emoji("🥡","Takeout Box"),new Emoji("🥣","Bowl with Spoon"),new Emoji("🥥","Coconut"),new Emoji("🥦","Broccoli"),new Emoji("🥨","Pretzel"),new Emoji("🥩","Cut of Meat"),new Emoji("🥪","Sandwich"),new Emoji("🥫","Canned Food"),new Emoji("🥬","Leafy Green"),new Emoji("🥭","Mango"),new Emoji("🥮","Moon Cake"),new Emoji("🥯","Bagel"),new Emoji("🦀","Crab"),new Emoji("🦐","Shrimp"),new Emoji("🦑","Squid"),new Emoji("🦞","Lobster"),new Emoji("🦪","Oyster"),new Emoji("🧀","Cheese Wedge"),new Emoji("🧂","Salt"),new Emoji("🧄","Garlic"),new Emoji("🧅","Onion"),new Emoji("🧆","Falafel"),new Emoji("🧇","Waffle"),new Emoji("🧈","Butter"),new Emoji("🫐","Blueberries"),new Emoji("🫑","Bell Pepper"),new Emoji("🫒","Olive"),new Emoji("🫓","Flatbread"),new Emoji("🫔","Tamale"),new Emoji("🫕","Fondue")],sweets=[new Emoji("🍦","Soft Ice Cream"),new Emoji("🍧","Shaved Ice"),new Emoji("🍨","Ice Cream"),new Emoji("🍩","Doughnut"),new Emoji("🍪","Cookie"),new Emoji("🍫","Chocolate Bar"),new Emoji("🍬","Candy"),new Emoji("🍭","Lollipop"),new Emoji("🍮","Custard"),new Emoji("🍯","Honey Pot"),new Emoji("🍰","Shortcake"),new Emoji("🎂","Birthday Cake"),new Emoji("🥧","Pie"),new Emoji("🧁","Cupcake")],drinks=[new Emoji("🍵","Teacup Without Handle"),new Emoji("🍶","Sake"),new Emoji("🍷","Wine Glass"),new Emoji("🍸","Cocktail Glass"),new Emoji("🍹","Tropical Drink"),new Emoji("🍺","Beer Mug"),new Emoji("🍻","Clinking Beer Mugs"),new Emoji("🍼","Baby Bottle"),new Emoji("🍾","Bottle with Popping Cork"),new Emoji("🥂","Clinking Glasses"),new Emoji("🥃","Tumbler Glass"),new Emoji("🥛","Glass of Milk"),new Emoji("🥤","Cup with Straw"),new Emoji("🧃","Beverage Box"),new Emoji("🧉","Mate"),new Emoji("🧊","Ice"),new Emoji("🧋","Bubble Tea"),new Emoji("🫖","Teapot"),new Emoji("☕","Hot Beverage")],utensils=[new Emoji("🍴","Fork and Knife"),new Emoji("🍽️","Fork and Knife with Plate"),new Emoji("🏺","Amphora"),new Emoji("🔪","Kitchen Knife"),new Emoji("🥄","Spoon"),new Emoji("🥢","Chopsticks")],nations=[new Emoji("🇦🇨","Flag: Ascension Island"),new Emoji("🇦🇩","Flag: Andorra"),new Emoji("🇦🇪","Flag: United Arab Emirates"),new Emoji("🇦🇫","Flag: Afghanistan"),new Emoji("🇦🇬","Flag: Antigua & Barbuda"),new Emoji("🇦🇮","Flag: Anguilla"),new Emoji("🇦🇱","Flag: Albania"),new Emoji("🇦🇲","Flag: Armenia"),new Emoji("🇦🇴","Flag: Angola"),new Emoji("🇦🇶","Flag: Antarctica"),new Emoji("🇦🇷","Flag: Argentina"),new Emoji("🇦🇸","Flag: American Samoa"),new Emoji("🇦🇹","Flag: Austria"),new Emoji("🇦🇺","Flag: Australia"),new Emoji("🇦🇼","Flag: Aruba"),new Emoji("🇦🇽","Flag: Åland Islands"),new Emoji("🇦🇿","Flag: Azerbaijan"),new Emoji("🇧🇦","Flag: Bosnia & Herzegovina"),new Emoji("🇧🇧","Flag: Barbados"),new Emoji("🇧🇩","Flag: Bangladesh"),new Emoji("🇧🇪","Flag: Belgium"),new Emoji("🇧🇫","Flag: Burkina Faso"),new Emoji("🇧🇬","Flag: Bulgaria"),new Emoji("🇧🇭","Flag: Bahrain"),new Emoji("🇧🇮","Flag: Burundi"),new Emoji("🇧🇯","Flag: Benin"),new Emoji("🇧🇱","Flag: St. Barthélemy"),new Emoji("🇧🇲","Flag: Bermuda"),new Emoji("🇧🇳","Flag: Brunei"),new Emoji("🇧🇴","Flag: Bolivia"),new Emoji("🇧🇶","Flag: Caribbean Netherlands"),new Emoji("🇧🇷","Flag: Brazil"),new Emoji("🇧🇸","Flag: Bahamas"),new Emoji("🇧🇹","Flag: Bhutan"),new Emoji("🇧🇻","Flag: Bouvet Island"),new Emoji("🇧🇼","Flag: Botswana"),new Emoji("🇧🇾","Flag: Belarus"),new Emoji("🇧🇿","Flag: Belize"),new Emoji("🇨🇦","Flag: Canada"),new Emoji("🇨🇨","Flag: Cocos (Keeling) Islands"),new Emoji("🇨🇩","Flag: Congo - Kinshasa"),new Emoji("🇨🇫","Flag: Central African Republic"),new Emoji("🇨🇬","Flag: Congo - Brazzaville"),new Emoji("🇨🇭","Flag: Switzerland"),new Emoji("🇨🇮","Flag: Côte d’Ivoire"),new Emoji("🇨🇰","Flag: Cook Islands"),new Emoji("🇨🇱","Flag: Chile"),new Emoji("🇨🇲","Flag: Cameroon"),new Emoji("🇨🇳","Flag: China"),new Emoji("🇨🇴","Flag: Colombia"),new Emoji("🇨🇵","Flag: Clipperton Island"),new Emoji("🇨🇷","Flag: Costa Rica"),new Emoji("🇨🇺","Flag: Cuba"),new Emoji("🇨🇻","Flag: Cape Verde"),new Emoji("🇨🇼","Flag: Curaçao"),new Emoji("🇨🇽","Flag: Christmas Island"),new Emoji("🇨🇾","Flag: Cyprus"),new Emoji("🇨🇿","Flag: Czechia"),new Emoji("🇩🇪","Flag: Germany"),new Emoji("🇩🇬","Flag: Diego Garcia"),new Emoji("🇩🇯","Flag: Djibouti"),new Emoji("🇩🇰","Flag: Denmark"),new Emoji("🇩🇲","Flag: Dominica"),new Emoji("🇩🇴","Flag: Dominican Republic"),new Emoji("🇩🇿","Flag: Algeria"),new Emoji("🇪🇦","Flag: Ceuta & Melilla"),new Emoji("🇪🇨","Flag: Ecuador"),new Emoji("🇪🇪","Flag: Estonia"),new Emoji("🇪🇬","Flag: Egypt"),new Emoji("🇪🇭","Flag: Western Sahara"),new Emoji("🇪🇷","Flag: Eritrea"),new Emoji("🇪🇸","Flag: Spain"),new Emoji("🇪🇹","Flag: Ethiopia"),new Emoji("🇪🇺","Flag: European Union"),new Emoji("🇫🇮","Flag: Finland"),new Emoji("🇫🇯","Flag: Fiji"),new Emoji("🇫🇰","Flag: Falkland Islands"),new Emoji("🇫🇲","Flag: Micronesia"),new Emoji("🇫🇴","Flag: Faroe Islands"),new Emoji("🇫🇷","Flag: France"),new Emoji("🇬🇦","Flag: Gabon"),new Emoji("🇬🇧","Flag: United Kingdom"),new Emoji("🇬🇩","Flag: Grenada"),new Emoji("🇬🇪","Flag: Georgia"),new Emoji("🇬🇫","Flag: French Guiana"),new Emoji("🇬🇬","Flag: Guernsey"),new Emoji("🇬🇭","Flag: Ghana"),new Emoji("🇬🇮","Flag: Gibraltar"),new Emoji("🇬🇱","Flag: Greenland"),new Emoji("🇬🇲","Flag: Gambia"),new Emoji("🇬🇳","Flag: Guinea"),new Emoji("🇬🇵","Flag: Guadeloupe"),new Emoji("🇬🇶","Flag: Equatorial Guinea"),new Emoji("🇬🇷","Flag: Greece"),new Emoji("🇬🇸","Flag: South Georgia & South Sandwich Islands"),new Emoji("🇬🇹","Flag: Guatemala"),new Emoji("🇬🇺","Flag: Guam"),new Emoji("🇬🇼","Flag: Guinea-Bissau"),new Emoji("🇬🇾","Flag: Guyana"),new Emoji("🇭🇰","Flag: Hong Kong SAR China"),new Emoji("🇭🇲","Flag: Heard & McDonald Islands"),new Emoji("🇭🇳","Flag: Honduras"),new Emoji("🇭🇷","Flag: Croatia"),new Emoji("🇭🇹","Flag: Haiti"),new Emoji("🇭🇺","Flag: Hungary"),new Emoji("🇮🇨","Flag: Canary Islands"),new Emoji("🇮🇩","Flag: Indonesia"),new Emoji("🇮🇪","Flag: Ireland"),new Emoji("🇮🇱","Flag: Israel"),new Emoji("🇮🇲","Flag: Isle of Man"),new Emoji("🇮🇳","Flag: India"),new Emoji("🇮🇴","Flag: British Indian Ocean Territory"),new Emoji("🇮🇶","Flag: Iraq"),new Emoji("🇮🇷","Flag: Iran"),new Emoji("🇮🇸","Flag: Iceland"),new Emoji("🇮🇹","Flag: Italy"),new Emoji("🇯🇪","Flag: Jersey"),new Emoji("🇯🇲","Flag: Jamaica"),new Emoji("🇯🇴","Flag: Jordan"),new Emoji("🇯🇵","Flag: Japan"),new Emoji("🇰🇪","Flag: Kenya"),new Emoji("🇰🇬","Flag: Kyrgyzstan"),new Emoji("🇰🇭","Flag: Cambodia"),new Emoji("🇰🇮","Flag: Kiribati"),new Emoji("🇰🇲","Flag: Comoros"),new Emoji("🇰🇳","Flag: St. Kitts & Nevis"),new Emoji("🇰🇵","Flag: North Korea"),new Emoji("🇰🇷","Flag: South Korea"),new Emoji("🇰🇼","Flag: Kuwait"),new Emoji("🇰🇾","Flag: Cayman Islands"),new Emoji("🇰🇿","Flag: Kazakhstan"),new Emoji("🇱🇦","Flag: Laos"),new Emoji("🇱🇧","Flag: Lebanon"),new Emoji("🇱🇨","Flag: St. Lucia"),new Emoji("🇱🇮","Flag: Liechtenstein"),new Emoji("🇱🇰","Flag: Sri Lanka"),new Emoji("🇱🇷","Flag: Liberia"),new Emoji("🇱🇸","Flag: Lesotho"),new Emoji("🇱🇹","Flag: Lithuania"),new Emoji("🇱🇺","Flag: Luxembourg"),new Emoji("🇱🇻","Flag: Latvia"),new Emoji("🇱🇾","Flag: Libya"),new Emoji("🇲🇦","Flag: Morocco"),new Emoji("🇲🇨","Flag: Monaco"),new Emoji("🇲🇩","Flag: Moldova"),new Emoji("🇲🇪","Flag: Montenegro"),new Emoji("🇲🇫","Flag: St. Martin"),new Emoji("🇲🇬","Flag: Madagascar"),new Emoji("🇲🇭","Flag: Marshall Islands"),new Emoji("🇲🇰","Flag: North Macedonia"),new Emoji("🇲🇱","Flag: Mali"),new Emoji("🇲🇲","Flag: Myanmar (Burma)"),new Emoji("🇲🇳","Flag: Mongolia"),new Emoji("🇲🇴","Flag: Macao Sar China"),new Emoji("🇲🇵","Flag: Northern Mariana Islands"),new Emoji("🇲🇶","Flag: Martinique"),new Emoji("🇲🇷","Flag: Mauritania"),new Emoji("🇲🇸","Flag: Montserrat"),new Emoji("🇲🇹","Flag: Malta"),new Emoji("🇲🇺","Flag: Mauritius"),new Emoji("🇲🇻","Flag: Maldives"),new Emoji("🇲🇼","Flag: Malawi"),new Emoji("🇲🇽","Flag: Mexico"),new Emoji("🇲🇾","Flag: Malaysia"),new Emoji("🇲🇿","Flag: Mozambique"),new Emoji("🇳🇦","Flag: Namibia"),new Emoji("🇳🇨","Flag: New Caledonia"),new Emoji("🇳🇪","Flag: Niger"),new Emoji("🇳🇫","Flag: Norfolk Island"),new Emoji("🇳🇬","Flag: Nigeria"),new Emoji("🇳🇮","Flag: Nicaragua"),new Emoji("🇳🇱","Flag: Netherlands"),new Emoji("🇳🇴","Flag: Norway"),new Emoji("🇳🇵","Flag: Nepal"),new Emoji("🇳🇷","Flag: Nauru"),new Emoji("🇳🇺","Flag: Niue"),new Emoji("🇳🇿","Flag: New Zealand"),new Emoji("🇴🇲","Flag: Oman"),new Emoji("🇵🇦","Flag: Panama"),new Emoji("🇵🇪","Flag: Peru"),new Emoji("🇵🇫","Flag: French Polynesia"),new Emoji("🇵🇬","Flag: Papua New Guinea"),new Emoji("🇵🇭","Flag: Philippines"),new Emoji("🇵🇰","Flag: Pakistan"),new Emoji("🇵🇱","Flag: Poland"),new Emoji("🇵🇲","Flag: St. Pierre & Miquelon"),new Emoji("🇵🇳","Flag: Pitcairn Islands"),new Emoji("🇵🇷","Flag: Puerto Rico"),new Emoji("🇵🇸","Flag: Palestinian Territories"),new Emoji("🇵🇹","Flag: Portugal"),new Emoji("🇵🇼","Flag: Palau"),new Emoji("🇵🇾","Flag: Paraguay"),new Emoji("🇶🇦","Flag: Qatar"),new Emoji("🇷🇪","Flag: Réunion"),new Emoji("🇷🇴","Flag: Romania"),new Emoji("🇷🇸","Flag: Serbia"),new Emoji("🇷🇺","Flag: Russia"),new Emoji("🇷🇼","Flag: Rwanda"),new Emoji("🇸🇦","Flag: Saudi Arabia"),new Emoji("🇸🇧","Flag: Solomon Islands"),new Emoji("🇸🇨","Flag: Seychelles"),new Emoji("🇸🇩","Flag: Sudan"),new Emoji("🇸🇪","Flag: Sweden"),new Emoji("🇸🇬","Flag: Singapore"),new Emoji("🇸🇭","Flag: St. Helena"),new Emoji("🇸🇮","Flag: Slovenia"),new Emoji("🇸🇯","Flag: Svalbard & Jan Mayen"),new Emoji("🇸🇰","Flag: Slovakia"),new Emoji("🇸🇱","Flag: Sierra Leone"),new Emoji("🇸🇲","Flag: San Marino"),new Emoji("🇸🇳","Flag: Senegal"),new Emoji("🇸🇴","Flag: Somalia"),new Emoji("🇸🇷","Flag: Suriname"),new Emoji("🇸🇸","Flag: South Sudan"),new Emoji("🇸🇹","Flag: São Tomé & Príncipe"),new Emoji("🇸🇻","Flag: El Salvador"),new Emoji("🇸🇽","Flag: Sint Maarten"),new Emoji("🇸🇾","Flag: Syria"),new Emoji("🇸🇿","Flag: Eswatini"),new Emoji("🇹🇦","Flag: Tristan Da Cunha"),new Emoji("🇹🇨","Flag: Turks & Caicos Islands"),new Emoji("🇹🇩","Flag: Chad"),new Emoji("🇹🇫","Flag: French Southern Territories"),new Emoji("🇹🇬","Flag: Togo"),new Emoji("🇹🇭","Flag: Thailand"),new Emoji("🇹🇯","Flag: Tajikistan"),new Emoji("🇹🇰","Flag: Tokelau"),new Emoji("🇹🇱","Flag: Timor-Leste"),new Emoji("🇹🇲","Flag: Turkmenistan"),new Emoji("🇹🇳","Flag: Tunisia"),new Emoji("🇹🇴","Flag: Tonga"),new Emoji("🇹🇷","Flag: Turkey"),new Emoji("🇹🇹","Flag: Trinidad & Tobago"),new Emoji("🇹🇻","Flag: Tuvalu"),new Emoji("🇹🇼","Flag: Taiwan"),new Emoji("🇹🇿","Flag: Tanzania"),new Emoji("🇺🇦","Flag: Ukraine"),new Emoji("🇺🇬","Flag: Uganda"),new Emoji("🇺🇲","Flag: U.S. Outlying Islands"),new Emoji("🇺🇳","Flag: United Nations"),new Emoji("🇺🇸","Flag: United States"),new Emoji("🇺🇾","Flag: Uruguay"),new Emoji("🇺🇿","Flag: Uzbekistan"),new Emoji("🇻🇦","Flag: Vatican City"),new Emoji("🇻🇨","Flag: St. Vincent & Grenadines"),new Emoji("🇻🇪","Flag: Venezuela"),new Emoji("🇻🇬","Flag: British Virgin Islands"),new Emoji("🇻🇮","Flag: U.S. Virgin Islands"),new Emoji("🇻🇳","Flag: Vietnam"),new Emoji("🇻🇺","Flag: Vanuatu"),new Emoji("🇼🇫","Flag: Wallis & Futuna"),new Emoji("🇼🇸","Flag: Samoa"),new Emoji("🇽🇰","Flag: Kosovo"),new Emoji("🇾🇪","Flag: Yemen"),new Emoji("🇾🇹","Flag: Mayotte"),new Emoji("🇿🇦","Flag: South Africa"),new Emoji("🇿🇲","Flag: Zambia"),new Emoji("🇿🇼","Flag: Zimbabwe")],flags=[new Emoji("🎌","Crossed Flags"),new Emoji("🏁","Chequered Flag"),new Emoji("🏳️","White Flag"),new Emoji("🏳️‍🌈","Rainbow Flag"),new Emoji("🏳️‍⚧️","Transgender Flag"),new Emoji("🏴","Black Flag"),new Emoji("🏴‍☠️","Pirate Flag"),new Emoji("🏴󠁧󠁢󠁥󠁮󠁧󠁿","Flag: England"),new Emoji("🏴󠁧󠁢󠁳󠁣󠁴󠁿","Flag: Scotland"),new Emoji("🏴󠁧󠁢󠁷󠁬󠁳󠁿","Flag: Wales"),new Emoji("🚩","Triangular Flag")],motorcycle=new Emoji("🏍️","Motorcycle"),racingCar=new Emoji("🏎️","Racing Car"),seat=new Emoji("💺","Seat"),rocket=new Emoji("🚀","Rocket"),helicopter=new Emoji("🚁","Helicopter"),locomotive=new Emoji("🚂","Locomotive"),railwayCar=new Emoji("🚃","Railway Car"),highspeedTrain=new Emoji("🚄","High-Speed Train"),bulletTrain=new Emoji("🚅","Bullet Train"),train=new Emoji("🚆","Train"),metro=new Emoji("🚇","Metro"),lightRail=new Emoji("🚈","Light Rail"),station=new Emoji("🚉","Station"),tram=new Emoji("🚊","Tram"),tramCar=new Emoji("🚋","Tram Car"),bus=new Emoji("🚌","Bus"),oncomingBus=new Emoji("🚍","Oncoming Bus"),trolleyBus=new Emoji("🚎","Trolleybus"),busStop=new Emoji("🚏","Bus Stop"),miniBus=new Emoji("🚐","Minibus"),ambulance=new Emoji("🚑","Ambulance"),fireEngine=new Emoji("🚒","Fire Engine"),taxi=new Emoji("🚕","Taxi"),oncomingTaxi=new Emoji("🚖","Oncoming Taxi"),automobile=new Emoji("🚗","Automobile"),oncomingAutomobile=new Emoji("🚘","Oncoming Automobile"),sportUtilityVehicle=new Emoji("🚙","Sport Utility Vehicle"),deliveryTruck=new Emoji("🚚","Delivery Truck"),articulatedLorry=new Emoji("🚛","Articulated Lorry"),tractor=new Emoji("🚜","Tractor"),monorail=new Emoji("🚝","Monorail"),mountainRailway=new Emoji("🚞","Mountain Railway"),suspensionRailway=new Emoji("🚟","Suspension Railway"),mountainCableway=new Emoji("🚠","Mountain Cableway"),aerialTramway=new Emoji("🚡","Aerial Tramway"),ship=new Emoji("🚢","Ship"),speedBoat=new Emoji("🚤","Speedboat"),horizontalTrafficLight=new Emoji("🚥","Horizontal Traffic Light"),verticalTrafficLight=new Emoji("🚦","Vertical Traffic Light"),construction=new Emoji("🚧","Construction"),bicycle=new Emoji("🚲","Bicycle"),stopSign=new Emoji("🛑","Stop Sign"),oilDrum=new Emoji("🛢️","Oil Drum"),motorway=new Emoji("🛣️","Motorway"),railwayTrack=new Emoji("🛤️","Railway Track"),motorBoat=new Emoji("🛥️","Motor Boat"),smallAirplane=new Emoji("🛩️","Small Airplane"),airplaneDeparture=new Emoji("🛫","Airplane Departure"),airplaneArrival=new Emoji("🛬","Airplane Arrival"),satellite=new Emoji("🛰️","Satellite"),passengerShip=new Emoji("🛳️","Passenger Ship"),kickScooter=new Emoji("🛴","Kick Scooter"),motorScooter=new Emoji("🛵","Motor Scooter"),canoe=new Emoji("🛶","Canoe"),flyingSaucer=new Emoji("🛸","Flying Saucer"),skateboard=new Emoji("🛹","Skateboard"),autoRickshaw=new Emoji("🛺","Auto Rickshaw"),pickupTruck=new Emoji("🛻","Pickup Truck"),rollerSkate=new Emoji("🛼","Roller Skate"),motorizedWheelchair=new Emoji("🦼","Motorized Wheelchair"),manualWheelchair=new Emoji("🦽","Manual Wheelchair"),parachute=new Emoji("🪂","Parachute"),anchor=new Emoji("⚓","Anchor"),ferry=new Emoji("⛴️","Ferry"),sailboat=new Emoji("⛵","Sailboat"),fuelPump=new Emoji("⛽","Fuel Pump"),airplane=new Emoji("✈️","Airplane"),vehicles=[motorcycle,racingCar,seat,rocket,helicopter,locomotive,railwayCar,highspeedTrain,bulletTrain,train,metro,lightRail,station,tram,tramCar,bus,oncomingBus,trolleyBus,busStop,miniBus,ambulance,fireEngine,taxi,oncomingTaxi,automobile,oncomingAutomobile,sportUtilityVehicle,deliveryTruck,articulatedLorry,tractor,monorail,mountainRailway,suspensionRailway,mountainCableway,aerialTramway,ship,speedBoat,horizontalTrafficLight,verticalTrafficLight,construction,bicycle,stopSign,oilDrum,motorway,railwayTrack,motorBoat,smallAirplane,airplaneDeparture,airplaneArrival,satellite,passengerShip,kickScooter,motorScooter,canoe,flyingSaucer,skateboard,autoRickshaw,pickupTruck,rollerSkate,motorizedWheelchair,manualWheelchair,parachute,anchor,ferry,sailboat,fuelPump,airplane],bloodTypes=[new Emoji("🅰","A Button (Blood Type)"),new Emoji("🅱","B Button (Blood Type)"),new Emoji("🅾","O Button (Blood Type)"),new Emoji("🆎","AB Button (Blood Type)")],regions=[new Emoji("🇦","Regional Indicator Symbol Letter A"),new Emoji("🇧","Regional Indicator Symbol Letter B"),new Emoji("🇨","Regional Indicator Symbol Letter C"),new Emoji("🇩","Regional Indicator Symbol Letter D"),new Emoji("🇪","Regional Indicator Symbol Letter E"),new Emoji("🇫","Regional Indicator Symbol Letter F"),new Emoji("🇬","Regional Indicator Symbol Letter G"),new Emoji("🇭","Regional Indicator Symbol Letter H"),new Emoji("🇮","Regional Indicator Symbol Letter I"),new Emoji("🇯","Regional Indicator Symbol Letter J"),new Emoji("🇰","Regional Indicator Symbol Letter K"),new Emoji("🇱","Regional Indicator Symbol Letter L"),new Emoji("🇲","Regional Indicator Symbol Letter M"),new Emoji("🇳","Regional Indicator Symbol Letter N"),new Emoji("🇴","Regional Indicator Symbol Letter O"),new Emoji("🇵","Regional Indicator Symbol Letter P"),new Emoji("🇶","Regional Indicator Symbol Letter Q"),new Emoji("🇷","Regional Indicator Symbol Letter R"),new Emoji("🇸","Regional Indicator Symbol Letter S"),new Emoji("🇹","Regional Indicator Symbol Letter T"),new Emoji("🇺","Regional Indicator Symbol Letter U"),new Emoji("🇻","Regional Indicator Symbol Letter V"),new Emoji("🇼","Regional Indicator Symbol Letter W"),new Emoji("🇽","Regional Indicator Symbol Letter X"),new Emoji("🇾","Regional Indicator Symbol Letter Y"),new Emoji("🇿","Regional Indicator Symbol Letter Z")],japanese=[new Emoji("🔰","Japanese Symbol for Beginner"),new Emoji("🈁","Japanese “Here” Button"),new Emoji("🈂️","Japanese “Service Charge” Button"),new Emoji("🈚","Japanese “Free of Charge” Button"),new Emoji("🈯","Japanese “Reserved” Button"),new Emoji("🈲","Japanese “Prohibited” Button"),new Emoji("🈳","Japanese “Vacancy” Button"),new Emoji("🈴","Japanese “Passing Grade” Button"),new Emoji("🈵","Japanese “No Vacancy” Button"),new Emoji("🈶","Japanese “Not Free of Charge” Button"),new Emoji("🈷️","Japanese “Monthly Amount” Button"),new Emoji("🈸","Japanese “Application” Button"),new Emoji("🈹","Japanese “Discount” Button"),new Emoji("🈺","Japanese “Open for Business” Button"),new Emoji("🉐","Japanese “Bargain” Button"),new Emoji("🉑","Japanese “Acceptable” Button"),new Emoji("㊗️","Japanese “Congratulations” Button"),new Emoji("㊙️","Japanese “Secret” Button")],time=[new Emoji("🕐","One O’Clock"),new Emoji("🕑","Two O’Clock"),new Emoji("🕒","Three O’Clock"),new Emoji("🕓","Four O’Clock"),new Emoji("🕔","Five O’Clock"),new Emoji("🕕","Six O’Clock"),new Emoji("🕖","Seven O’Clock"),new Emoji("🕗","Eight O’Clock"),new Emoji("🕘","Nine O’Clock"),new Emoji("🕙","Ten O’Clock"),new Emoji("🕚","Eleven O’Clock"),new Emoji("🕛","Twelve O’Clock"),new Emoji("🕜","One-Thirty"),new Emoji("🕝","Two-Thirty"),new Emoji("🕞","Three-Thirty"),new Emoji("🕟","Four-Thirty"),new Emoji("🕠","Five-Thirty"),new Emoji("🕡","Six-Thirty"),new Emoji("🕢","Seven-Thirty"),new Emoji("🕣","Eight-Thirty"),new Emoji("🕤","Nine-Thirty"),new Emoji("🕥","Ten-Thirty"),new Emoji("🕦","Eleven-Thirty"),new Emoji("🕧","Twelve-Thirty")],clocks=[new Emoji("🕰️","Mantelpiece Clock"),new Emoji("⌚","Watch"),new Emoji("⏰","Alarm Clock"),new Emoji("⏱️","Stopwatch"),new Emoji("⏲️","Timer Clock"),new Emoji("⌛","Hourglass Done"),new Emoji("⏳","Hourglass Not Done")],arrows=[new Emoji("🔃️","Clockwise Vertical Arrows"),new Emoji("🔄️","Counterclockwise Arrows Button"),new Emoji("↔️","Left-Right Arrow"),new Emoji("↕️","Up-Down Arrow"),new Emoji("↖️","Up-Left Arrow"),new Emoji("↗️","Up-Right Arrow"),new Emoji("↘️","Down-Right Arrow"),new Emoji("↙️","Down-Left Arrow"),new Emoji("↩️","Right Arrow Curving Left"),new Emoji("↪️","Left Arrow Curving Right"),new Emoji("➡️","Right Arrow"),new Emoji("⤴️","Right Arrow Curving Up"),new Emoji("⤵️","Right Arrow Curving Down"),new Emoji("⬅️","Left Arrow"),new Emoji("⬆️","Up Arrow"),new Emoji("⬇️","Down Arrow")],shapes=[new Emoji("🔴","Red Circle"),new Emoji("🔵","Blue Circle"),new Emoji("🔶","Large Orange Diamond"),new Emoji("🔷","Large Blue Diamond"),new Emoji("🔸","Small Orange Diamond"),new Emoji("🔹","Small Blue Diamond"),new Emoji("🔺","Red Triangle Pointed Up"),new Emoji("🔻","Red Triangle Pointed Down"),new Emoji("🟠","Orange Circle"),new Emoji("🟡","Yellow Circle"),new Emoji("🟢","Green Circle"),new Emoji("🟣","Purple Circle"),new Emoji("🟤","Brown Circle"),new Emoji("⭕","Hollow Red Circle"),new Emoji("⚪","White Circle"),new Emoji("⚫","Black Circle"),new Emoji("🟥","Red Square"),new Emoji("🟦","Blue Square"),new Emoji("🟧","Orange Square"),new Emoji("🟨","Yellow Square"),new Emoji("🟩","Green Square"),new Emoji("🟪","Purple Square"),new Emoji("🟫","Brown Square"),new Emoji("🔲","Black Square Button"),new Emoji("🔳","White Square Button"),new Emoji("▪️","Black Small Square"),new Emoji("▫️","White Small Square"),new Emoji("◽","White Medium-Small Square"),new Emoji("◾","Black Medium-Small Square"),new Emoji("◻️","White Medium Square"),new Emoji("◼️","Black Medium Square"),new Emoji("⬛","Black Large Square"),new Emoji("⬜","White Large Square"),new Emoji("⭐","Star"),new Emoji("💠","Diamond with a Dot")],shuffleTracksButton=new Emoji("🔀","Shuffle Tracks Button"),repeatButton=new Emoji("🔁","Repeat Button"),repeatSingleButton=new Emoji("🔂","Repeat Single Button"),upwardsButton=new Emoji("🔼","Upwards Button"),downwardsButton=new Emoji("🔽","Downwards Button"),playButton=new Emoji("▶️","Play Button"),reverseButton=new Emoji("◀️","Reverse Button"),ejectButton=new Emoji("⏏️","Eject Button"),fastForwardButton=new Emoji("⏩","Fast-Forward Button"),fastReverseButton=new Emoji("⏪","Fast Reverse Button"),fastUpButton=new Emoji("⏫","Fast Up Button"),fastDownButton=new Emoji("⏬","Fast Down Button"),nextTrackButton=new Emoji("⏭️","Next Track Button"),lastTrackButton=new Emoji("⏮️","Last Track Button"),playOrPauseButton=new Emoji("⏯️","Play or Pause Button"),pauseButton=new Emoji("⏸️","Pause Button"),stopButton=new Emoji("⏹️","Stop Button"),recordButton=new Emoji("⏺️","Record Button"),mediaPlayer=[shuffleTracksButton,repeatButton,repeatSingleButton,upwardsButton,downwardsButton,pauseButton,reverseButton,ejectButton,fastForwardButton,fastReverseButton,fastUpButton,fastDownButton,nextTrackButton,lastTrackButton,playOrPauseButton,pauseButton,stopButton,recordButton],zodiac=[new Emoji("♈","Aries"),new Emoji("♉","Taurus"),new Emoji("♊","Gemini"),new Emoji("♋","Cancer"),new Emoji("♌","Leo"),new Emoji("♍","Virgo"),new Emoji("♎","Libra"),new Emoji("♏","Scorpio"),new Emoji("♐","Sagittarius"),new Emoji("♑","Capricorn"),new Emoji("♒","Aquarius"),new Emoji("♓","Pisces"),new Emoji("⛎","Ophiuchus")],numbers=[new Emoji("0️","Digit Zero"),new Emoji("1️","Digit One"),new Emoji("2️","Digit Two"),new Emoji("3️","Digit Three"),new Emoji("4️","Digit Four"),new Emoji("5️","Digit Five"),new Emoji("6️","Digit Six"),new Emoji("7️","Digit Seven"),new Emoji("8️","Digit Eight"),new Emoji("9️","Digit Nine"),new Emoji("*️","Asterisk"),new Emoji("#️","Number Sign"),new Emoji("0️⃣","Keycap Digit Zero"),new Emoji("1️⃣","Keycap Digit One"),new Emoji("2️⃣","Keycap Digit Two"),new Emoji("3️⃣","Keycap Digit Three"),new Emoji("4️⃣","Keycap Digit Four"),new Emoji("5️⃣","Keycap Digit Five"),new Emoji("6️⃣","Keycap Digit Six"),new Emoji("7️⃣","Keycap Digit Seven"),new Emoji("8️⃣","Keycap Digit Eight"),new Emoji("9️⃣","Keycap Digit Nine"),new Emoji("*️⃣","Keycap Asterisk"),new Emoji("#️⃣","Keycap Number Sign"),new Emoji("🔟","Keycap: 10")],tags=[new Emoji("󠀠","Tag Space"),new Emoji("󠀡","Tag Exclamation Mark"),new Emoji("󠀢","Tag Quotation Mark"),new Emoji("󠀣","Tag Number Sign"),new Emoji("󠀤","Tag Dollar Sign"),new Emoji("󠀥","Tag Percent Sign"),new Emoji("󠀦","Tag Ampersand"),new Emoji("󠀧","Tag Apostrophe"),new Emoji("󠀨","Tag Left Parenthesis"),new Emoji("󠀩","Tag Right Parenthesis"),new Emoji("󠀪","Tag Asterisk"),new Emoji("󠀫","Tag Plus Sign"),new Emoji("󠀬","Tag Comma"),new Emoji("󠀭","Tag Hyphen-Minus"),new Emoji("󠀮","Tag Full Stop"),new Emoji("󠀯","Tag Solidus"),new Emoji("󠀰","Tag Digit Zero"),new Emoji("󠀱","Tag Digit One"),new Emoji("󠀲","Tag Digit Two"),new Emoji("󠀳","Tag Digit Three"),new Emoji("󠀴","Tag Digit Four"),new Emoji("󠀵","Tag Digit Five"),new Emoji("󠀶","Tag Digit Six"),new Emoji("󠀷","Tag Digit Seven"),new Emoji("󠀸","Tag Digit Eight"),new Emoji("󠀹","Tag Digit Nine"),new Emoji("󠀺","Tag Colon"),new Emoji("󠀻","Tag Semicolon"),new Emoji("󠀼","Tag Less-Than Sign"),new Emoji("󠀽","Tag Equals Sign"),new Emoji("󠀾","Tag Greater-Than Sign"),new Emoji("󠀿","Tag Question Mark"),new Emoji("󠁀","Tag Commercial at"),new Emoji("󠁁","Tag Latin Capital Letter a"),new Emoji("󠁂","Tag Latin Capital Letter B"),new Emoji("󠁃","Tag Latin Capital Letter C"),new Emoji("󠁄","Tag Latin Capital Letter D"),new Emoji("󠁅","Tag Latin Capital Letter E"),new Emoji("󠁆","Tag Latin Capital Letter F"),new Emoji("󠁇","Tag Latin Capital Letter G"),new Emoji("󠁈","Tag Latin Capital Letter H"),new Emoji("󠁉","Tag Latin Capital Letter I"),new Emoji("󠁊","Tag Latin Capital Letter J"),new Emoji("󠁋","Tag Latin Capital Letter K"),new Emoji("󠁌","Tag Latin Capital Letter L"),new Emoji("󠁍","Tag Latin Capital Letter M"),new Emoji("󠁎","Tag Latin Capital Letter N"),new Emoji("󠁏","Tag Latin Capital Letter O"),new Emoji("󠁐","Tag Latin Capital Letter P"),new Emoji("󠁑","Tag Latin Capital Letter Q"),new Emoji("󠁒","Tag Latin Capital Letter R"),new Emoji("󠁓","Tag Latin Capital Letter S"),new Emoji("󠁔","Tag Latin Capital Letter T"),new Emoji("󠁕","Tag Latin Capital Letter U"),new Emoji("󠁖","Tag Latin Capital Letter V"),new Emoji("󠁗","Tag Latin Capital Letter W"),new Emoji("󠁘","Tag Latin Capital Letter X"),new Emoji("󠁙","Tag Latin Capital Letter Y"),new Emoji("󠁚","Tag Latin Capital Letter Z"),new Emoji("󠁛","Tag Left Square Bracket"),new Emoji("󠁜","Tag Reverse Solidus"),new Emoji("󠁝","Tag Right Square Bracket"),new Emoji("󠁞","Tag Circumflex Accent"),new Emoji("󠁟","Tag Low Line"),new Emoji("󠁠","Tag Grave Accent"),new Emoji("󠁡","Tag Latin Small Letter a"),new Emoji("󠁢","Tag Latin Small Letter B"),new Emoji("󠁣","Tag Latin Small Letter C"),new Emoji("󠁤","Tag Latin Small Letter D"),new Emoji("󠁥","Tag Latin Small Letter E"),new Emoji("󠁦","Tag Latin Small Letter F"),new Emoji("󠁧","Tag Latin Small Letter G"),new Emoji("󠁨","Tag Latin Small Letter H"),new Emoji("󠁩","Tag Latin Small Letter I"),new Emoji("󠁪","Tag Latin Small Letter J"),new Emoji("󠁫","Tag Latin Small Letter K"),new Emoji("󠁬","Tag Latin Small Letter L"),new Emoji("󠁭","Tag Latin Small Letter M"),new Emoji("󠁮","Tag Latin Small Letter N"),new Emoji("󠁯","Tag Latin Small Letter O"),new Emoji("󠁰","Tag Latin Small Letter P"),new Emoji("󠁱","Tag Latin Small Letter Q"),new Emoji("󠁲","Tag Latin Small Letter R"),new Emoji("󠁳","Tag Latin Small Letter S"),new Emoji("󠁴","Tag Latin Small Letter T"),new Emoji("󠁵","Tag Latin Small Letter U"),new Emoji("󠁶","Tag Latin Small Letter V"),new Emoji("󠁷","Tag Latin Small Letter W"),new Emoji("󠁸","Tag Latin Small Letter X"),new Emoji("󠁹","Tag Latin Small Letter Y"),new Emoji("󠁺","Tag Latin Small Letter Z"),new Emoji("󠁻","Tag Left Curly Bracket"),new Emoji("󠁼","Tag Vertical Line"),new Emoji("󠁽","Tag Right Curly Bracket"),new Emoji("󠁾","Tag Tilde"),new Emoji("󠁿","Cancel Tag")],math=[new Emoji("✖️","Multiply"),new Emoji("➕","Plus"),new Emoji("➖","Minus"),new Emoji("➗","Divide")],games=[new Emoji("♠️","Spade Suit"),new Emoji("♣️","Club Suit"),{value:"♥️",desc:"Heart Suit",color:"red"},{value:"♦️",desc:"Diamond Suit",color:"red"},new Emoji("🀄","Mahjong Red Dragon"),new Emoji("🃏","Joker"),new Emoji("🎯","Direct Hit"),new Emoji("🎰","Slot Machine"),new Emoji("🎱","Pool 8 Ball"),new Emoji("🎲","Game Die"),new Emoji("🎳","Bowling"),new Emoji("🎴","Flower Playing Cards"),new Emoji("🧩","Puzzle Piece"),new Emoji("♟️","Chess Pawn"),new Emoji("🪀","Yo-Yo"),new Emoji("🪁","Kite"),new Emoji("🪃","Boomerang"),new Emoji("🪆","Nesting Dolls")],sportsEquipment=[new Emoji("🎽","Running Shirt"),new Emoji("🎾","Tennis"),new Emoji("🎿","Skis"),new Emoji("🏀","Basketball"),new Emoji("🏅","Sports Medal"),new Emoji("🏆","Trophy"),new Emoji("🏈","American Football"),new Emoji("🏉","Rugby Football"),new Emoji("🏏","Cricket Game"),new Emoji("🏐","Volleyball"),new Emoji("🏑","Field Hockey"),new Emoji("🏒","Ice Hockey"),new Emoji("🏓","Ping Pong"),new Emoji("🏸","Badminton"),new Emoji("🛷","Sled"),new Emoji("🥅","Goal Net"),new Emoji("🥇","1st Place Medal"),new Emoji("🥈","2nd Place Medal"),new Emoji("🥉","3rd Place Medal"),new Emoji("🥊","Boxing Glove"),new Emoji("🥌","Curling Stone"),new Emoji("🥍","Lacrosse"),new Emoji("🥎","Softball"),new Emoji("🥏","Flying Disc"),new Emoji("⚽","Soccer Ball"),new Emoji("⚾","Baseball"),new Emoji("⛸️","Ice Skate")],clothing=[new Emoji("🎩","Top Hat"),new Emoji("🤿","Diving Mask"),new Emoji("👒","Woman’s Hat"),new Emoji("👓","Glasses"),new Emoji("🕶️","Sunglasses"),new Emoji("👔","Necktie"),new Emoji("👕","T-Shirt"),new Emoji("👖","Jeans"),new Emoji("👗","Dress"),new Emoji("👘","Kimono"),new Emoji("👙","Bikini"),new Emoji("👚","Woman’s Clothes"),new Emoji("👛","Purse"),new Emoji("👜","Handbag"),new Emoji("👝","Clutch Bag"),new Emoji("👞","Man’s Shoe"),new Emoji("👟","Running Shoe"),new Emoji("👠","High-Heeled Shoe"),new Emoji("👡","Woman’s Sandal"),new Emoji("👢","Woman’s Boot"),new Emoji("🥋","Martial Arts Uniform"),new Emoji("🥻","Sari"),new Emoji("🥼","Lab Coat"),new Emoji("🥽","Goggles"),new Emoji("🥾","Hiking Boot"),new Emoji("🥿","Flat Shoe"),new Emoji("🦯","White Cane"),new Emoji("🦺","Safety Vest"),new Emoji("🧢","Billed Cap"),new Emoji("🧣","Scarf"),new Emoji("🧤","Gloves"),new Emoji("🧥","Coat"),new Emoji("🧦","Socks"),new Emoji("🧿","Nazar Amulet"),new Emoji("🩰","Ballet Shoes"),new Emoji("🩱","One-Piece Swimsuit"),new Emoji("🩲","Briefs"),new Emoji("🩳","Shorts"),new Emoji("🩴","Thong Sandal")],town=[new Emoji("🏗️","Building Construction"),new Emoji("🏘️","Houses"),new Emoji("🏙️","Cityscape"),new Emoji("🏚️","Derelict House"),new Emoji("🏛️","Classical Building"),new Emoji("🏜️","Desert"),new Emoji("🏝️","Desert Island"),new Emoji("🏞️","National Park"),new Emoji("🏟️","Stadium"),new Emoji("🏠","House"),new Emoji("🏡","House with Garden"),new Emoji("🏢","Office Building"),new Emoji("🏣","Japanese Post Office"),new Emoji("🏤","Post Office"),new Emoji("🏥","Hospital"),new Emoji("🏦","Bank"),new Emoji("🏧","ATM Sign"),new Emoji("🏨","Hotel"),new Emoji("🏩","Love Hotel"),new Emoji("🏪","Convenience Store"),new Emoji("🏫","School"),new Emoji("🏬","Department Store"),new Emoji("🏭","Factory"),new Emoji("🌉","Bridge at Night"),new Emoji("⛲","Fountain"),new Emoji("🛍️","Shopping Bags"),new Emoji("🧾","Receipt"),new Emoji("🛒","Shopping Cart"),new Emoji("💈","Barber Pole"),new Emoji("💒","Wedding"),new Emoji("🛖","Hut"),new Emoji("🛗","Elevator"),new Emoji("🗳️","Ballot Box with Ballot")],buttons=[new Emoji("🆑","CL Button"),new Emoji("🆒","Cool Button"),new Emoji("🆓","Free Button"),new Emoji("🆔","ID Button"),new Emoji("🆕","New Button"),new Emoji("🆖","NG Button"),new Emoji("🆗","OK Button"),new Emoji("🆘","SOS Button"),new Emoji("🆙","Up! Button"),new Emoji("🆚","Vs Button"),new Emoji("🔘","Radio Button"),new Emoji("🔙","Back Arrow"),new Emoji("🔚","End Arrow"),new Emoji("🔛","On! Arrow"),new Emoji("🔜","Soon Arrow"),new Emoji("🔝","Top Arrow"),new Emoji("☑️","Check Box with Check"),new Emoji("🔠","Input Latin Uppercase"),new Emoji("🔡","Input Latin Lowercase"),new Emoji("🔢","Input Numbers"),new Emoji("🔣","Input Symbols"),new Emoji("🔤","Input Latin Letters")],music=[new Emoji("🎼","Musical Score"),new Emoji("🎶","Musical Notes"),new Emoji("🎵","Musical Note"),new Emoji("🎷","Saxophone"),new Emoji("🎸","Guitar"),new Emoji("🎹","Musical Keyboard"),new Emoji("🎺","Trumpet"),new Emoji("🎻","Violin"),new Emoji("🥁","Drum"),new Emoji("🪕","Banjo"),new Emoji("🪗","Accordion"),new Emoji("🪘","Long Drum")],weather=[new Emoji("🌄","Sunrise Over Mountains"),new Emoji("🌅","Sunrise"),new Emoji("🌆","Cityscape at Dusk"),new Emoji("🌇","Sunset"),new Emoji("🌃","Night with Stars"),new Emoji("🌂","Closed Umbrella"),new Emoji("☂️","Umbrella"),new Emoji("☔️","Umbrella with Rain Drops"),new Emoji("☃️","Snowman"),new Emoji("⛄","Snowman Without Snow"),new Emoji("☀️","Sun"),new Emoji("☁️","Cloud"),new Emoji("🌤️","Sun Behind Small Cloud"),new Emoji("⛅","Sun Behind Cloud"),new Emoji("🌥️","Sun Behind Large Cloud"),new Emoji("🌦️","Sun Behind Rain Cloud"),new Emoji("🌧️","Cloud with Rain"),new Emoji("🌨️","Cloud with Snow"),new Emoji("🌩️","Cloud with Lightning"),new Emoji("⛈️","Cloud with Lightning and Rain"),new Emoji("❄️","Snowflake"),new Emoji("🌀","Cyclone"),new Emoji("🌪️","Tornado"),new Emoji("🌬️","Wind Face"),new Emoji("🌊","Water Wave"),new Emoji("🌫️","Fog"),new Emoji("🌁","Foggy"),new Emoji("🌈","Rainbow"),new Emoji("🌡️","Thermometer")],astro=[new Emoji("🌌","Milky Way"),new Emoji("🌍","Globe Showing Europe-Africa"),new Emoji("🌎","Globe Showing Americas"),new Emoji("🌏","Globe Showing Asia-Australia"),new Emoji("🌐","Globe with Meridians"),new Emoji("🌑","New Moon"),new Emoji("🌒","Waxing Crescent Moon"),new Emoji("🌓","First Quarter Moon"),new Emoji("🌔","Waxing Gibbous Moon"),new Emoji("🌕","Full Moon"),new Emoji("🌖","Waning Gibbous Moon"),new Emoji("🌗","Last Quarter Moon"),new Emoji("🌘","Waning Crescent Moon"),new Emoji("🌙","Crescent Moon"),new Emoji("🌚","New Moon Face"),new Emoji("🌛","First Quarter Moon Face"),new Emoji("🌜","Last Quarter Moon Face"),new Emoji("🌝","Full Moon Face"),new Emoji("🌞","Sun with Face"),new Emoji("🌟","Glowing Star"),new Emoji("🌠","Shooting Star"),new Emoji("☄️","Comet"),new Emoji("🪐","Ringed Planet")],finance=[new Emoji("💰","Money Bag"),new Emoji("💱","Currency Exchange"),new Emoji("💲","Heavy Dollar Sign"),new Emoji("💳","Credit Card"),new Emoji("💴","Yen Banknote"),new Emoji("💵","Dollar Banknote"),new Emoji("💶","Euro Banknote"),new Emoji("💷","Pound Banknote"),new Emoji("💸","Money with Wings"),new Emoji("💹","Chart Increasing with Yen"),new Emoji("🪙","Coin")],writing=[new Emoji("🖊️","Pen"),new Emoji("🖋️","Fountain Pen"),new Emoji("🖌️","Paintbrush"),new Emoji("🖍️","Crayon"),new Emoji("✏️","Pencil"),new Emoji("✒️","Black Nib")],droplet=new Emoji("💧","Droplet"),dropOfBlood=new Emoji("🩸","Drop of Blood"),adhesiveBandage=new Emoji("🩹","Adhesive Bandage"),stehoscope=new Emoji("🩺","Stethoscope"),syringe=new Emoji("💉","Syringe"),pill=new Emoji("💊","Pill"),micrscope=new Emoji("🔬","Microscope"),testTube=new Emoji("🧪","Test Tube"),petriDish=new Emoji("🧫","Petri Dish"),dna=new Emoji("🧬","DNA"),abacus=new Emoji("🧮","Abacus"),magnet=new Emoji("🧲","Magnet"),telescope=new Emoji("🔭","Telescope"),medicalSymbol=new Emoji("⚕️","Medical Symbol"),balanceScale=new Emoji("⚖️","Balance Scale"),alembic=new Emoji("⚗️","Alembic"),gear=new Emoji("⚙️","Gear"),atomSymbol=new Emoji("⚛️","Atom Symbol"),magnifyingGlassTiltedLeft=new Emoji("🔍","Magnifying Glass Tilted Left"),magnifyingGlassTiltedRight=new Emoji("🔎","Magnifying Glass Tilted Right"),science=[droplet,dropOfBlood,adhesiveBandage,stehoscope,syringe,pill,micrscope,testTube,petriDish,dna,abacus,magnet,telescope,medicalSymbol,balanceScale,alembic,gear,atomSymbol,magnifyingGlassTiltedLeft,magnifyingGlassTiltedRight],joystick=new Emoji("🕹️","Joystick"),videoGame=new Emoji("🎮","Video Game"),lightBulb=new Emoji("💡","Light Bulb"),laptop=new Emoji("💻","Laptop"),briefcase=new Emoji("💼","Briefcase"),computerDisk=new Emoji("💽","Computer Disk"),floppyDisk=new Emoji("💾","Floppy Disk"),opticalDisk=new Emoji("💿","Optical Disk"),dvd=new Emoji("📀","DVD"),desktopComputer=new Emoji("🖥️","Desktop Computer"),keyboard=new Emoji("⌨️","Keyboard"),printer=new Emoji("🖨️","Printer"),computerMouse=new Emoji("🖱️","Computer Mouse"),trackball=new Emoji("🖲️","Trackball"),telephone=new Emoji("☎️","Telephone"),telephoneReceiver=new Emoji("📞","Telephone Receiver"),pager=new Emoji("📟","Pager"),faxMachine=new Emoji("📠","Fax Machine"),satelliteAntenna=new Emoji("📡","Satellite Antenna"),loudspeaker=new Emoji("📢","Loudspeaker"),megaphone=new Emoji("📣","Megaphone"),television=new Emoji("📺","Television"),radio=new Emoji("📻","Radio"),videocassette=new Emoji("📼","Videocassette"),filProjector=new Emoji("📽️","Film Projector"),studioMicrophone=new Emoji("🎙️","Studio Microphone"),levelSlider=new Emoji("🎚️","Level Slider"),controlKnobs=new Emoji("🎛️","Control Knobs"),microphone=new Emoji("🎤","Microphone"),movieCamera=new Emoji("🎥","Movie Camera"),headphone=new Emoji("🎧","Headphone"),camera=new Emoji("📷","Camera"),cameraWithFlash=new Emoji("📸","Camera with Flash"),videoCamera=new Emoji("📹","Video Camera"),mobilePhone=new Emoji("📱","Mobile Phone"),mobilePhoneOff=new Emoji("📴","Mobile Phone Off"),mobilePhoneWithArrow=new Emoji("📲","Mobile Phone with Arrow"),lockedWithPen=new Emoji("🔏","Locked with Pen"),lockedWithKey=new Emoji("🔐","Locked with Key"),locked=new Emoji("🔒","Locked"),unlocked=new Emoji("🔓","Unlocked"),bell=new Emoji("🔔","Bell"),bellWithSlash=new Emoji("🔕","Bell with Slash"),bookmark=new Emoji("🔖","Bookmark"),link=new Emoji("🔗","Link"),vibrationMode=new Emoji("📳","Vibration Mode"),antennaBars=new Emoji("📶","Antenna Bars"),dimButton=new Emoji("🔅","Dim Button"),brightButton=new Emoji("🔆","Bright Button"),mutedSpeaker=new Emoji("🔇","Muted Speaker"),speakerLowVolume=new Emoji("🔈","Speaker Low Volume"),speakerMediumVolume=new Emoji("🔉","Speaker Medium Volume"),speakerHighVolume=new Emoji("🔊","Speaker High Volume"),battery=new Emoji("🔋","Battery"),electricPlug=new Emoji("🔌","Electric Plug"),tech=[joystick,videoGame,lightBulb,laptop,briefcase,computerDisk,floppyDisk,opticalDisk,dvd,desktopComputer,keyboard,printer,computerMouse,trackball,telephone,telephoneReceiver,pager,faxMachine,satelliteAntenna,loudspeaker,megaphone,television,radio,videocassette,filProjector,studioMicrophone,levelSlider,controlKnobs,microphone,movieCamera,headphone,camera,cameraWithFlash,videoCamera,mobilePhone,mobilePhoneOff,mobilePhoneWithArrow,lockedWithPen,lockedWithKey,locked,unlocked,bell,bellWithSlash,bookmark,link,vibrationMode,antennaBars,dimButton,brightButton,mutedSpeaker,speakerLowVolume,speakerMediumVolume,speakerHighVolume,battery,electricPlug],mail=[new Emoji("📤","Outbox Tray"),new Emoji("📥","Inbox Tray"),new Emoji("📦","Package"),new Emoji("📧","E-Mail"),new Emoji("📨","Incoming Envelope"),new Emoji("📩","Envelope with Arrow"),new Emoji("📪","Closed Mailbox with Lowered Flag"),new Emoji("📫","Closed Mailbox with Raised Flag"),new Emoji("📬","Open Mailbox with Raised Flag"),new Emoji("📭","Open Mailbox with Lowered Flag"),new Emoji("📮","Postbox"),new Emoji("📯","Postal Horn")],celebration=[new Emoji("🪅","Piñata"),new Emoji("🎀","Ribbon"),new Emoji("🎁","Wrapped Gift"),new Emoji("🎃","Jack-O-Lantern"),new Emoji("🎄","Christmas Tree"),new Emoji("🧨","Firecracker"),new Emoji("🎆","Fireworks"),new Emoji("🎇","Sparkler"),new Emoji("✨","Sparkles"),new Emoji("❇️","Sparkle"),new Emoji("🎈","Balloon"),new Emoji("🎉","Party Popper"),new Emoji("🎊","Confetti Ball"),new Emoji("🎋","Tanabata Tree"),new Emoji("🎍","Pine Decoration"),new Emoji("🎎","Japanese Dolls"),new Emoji("🎏","Carp Streamer"),new Emoji("🎐","Wind Chime"),new Emoji("🎑","Moon Viewing Ceremony"),new Emoji("🎒","Backpack"),new Emoji("🎓","Graduation Cap"),new Emoji("🧧","Red Envelope"),new Emoji("🏮","Red Paper Lantern"),new Emoji("🎖️","Military Medal")],tools=[new Emoji("🎣","Fishing Pole"),new Emoji("🔦","Flashlight"),new Emoji("🔧","Wrench"),new Emoji("🔨","Hammer"),new Emoji("🔩","Nut and Bolt"),new Emoji("🛠️","Hammer and Wrench"),new Emoji("🧭","Compass"),new Emoji("🧯","Fire Extinguisher"),new Emoji("🧰","Toolbox"),new Emoji("🧱","Brick"),new Emoji("🪓","Axe"),new Emoji("⚒️","Hammer and Pick"),new Emoji("⛏️","Pick"),new Emoji("⛑️","Rescue Worker’s Helmet"),new Emoji("⛓️","Chains"),new Emoji("🗜️","Clamp"),new Emoji("🪚","Carpentry Saw"),new Emoji("🪛","Screwdriver"),new Emoji("🪜","Ladder"),new Emoji("🪝","Hook")],office=[new Emoji("📁","File Folder"),new Emoji("📂","Open File Folder"),new Emoji("📃","Page with Curl"),new Emoji("📄","Page Facing Up"),new Emoji("📅","Calendar"),new Emoji("📆","Tear-Off Calendar"),new Emoji("📇","Card Index"),new Emoji("🗂️","Card Index Dividers"),new Emoji("🗃️","Card File Box"),new Emoji("🗄️","File Cabinet"),new Emoji("🗑️","Wastebasket"),new Emoji("🗒️","Spiral Notepad"),new Emoji("🗓️","Spiral Calendar"),new Emoji("📈","Chart Increasing"),new Emoji("📉","Chart Decreasing"),new Emoji("📊","Bar Chart"),new Emoji("📋","Clipboard"),new Emoji("📌","Pushpin"),new Emoji("📍","Round Pushpin"),new Emoji("📎","Paperclip"),new Emoji("🖇️","Linked Paperclips"),new Emoji("📏","Straight Ruler"),new Emoji("📐","Triangular Ruler"),new Emoji("📑","Bookmark Tabs"),new Emoji("📒","Ledger"),new Emoji("📓","Notebook"),new Emoji("📔","Notebook with Decorative Cover"),new Emoji("📕","Closed Book"),new Emoji("📖","Open Book"),new Emoji("📗","Green Book"),new Emoji("📘","Blue Book"),new Emoji("📙","Orange Book"),new Emoji("📚","Books"),new Emoji("📛","Name Badge"),new Emoji("📜","Scroll"),new Emoji("📝","Memo"),new Emoji("✂️","Scissors"),new Emoji("✉️","Envelope")],signs=[new Emoji("🎦","Cinema"),new Emoji("📵","No Mobile Phones"),new Emoji("🔞","No One Under Eighteen"),new Emoji("🚫","Prohibited"),new Emoji("🚬","Cigarette"),new Emoji("🚭","No Smoking"),new Emoji("🚮","Litter in Bin Sign"),new Emoji("🚯","No Littering"),new Emoji("🚰","Potable Water"),new Emoji("🚱","Non-Potable Water"),new Emoji("🚳","No Bicycles"),new Emoji("🚷","No Pedestrians"),new Emoji("🚸","Children Crossing"),new Emoji("🚹","Men’s Room"),new Emoji("🚺","Women’s Room"),new Emoji("🚻","Restroom"),new Emoji("🚼","Baby Symbol"),new Emoji("🚾","Water Closet"),new Emoji("🛂","Passport Control"),new Emoji("🛃","Customs"),new Emoji("🛄","Baggage Claim"),new Emoji("🛅","Left Luggage"),new Emoji("🅿️","Parking Button"),new Emoji("♿","Wheelchair Symbol"),new Emoji("☢️","Radioactive"),new Emoji("☣️","Biohazard"),new Emoji("⚠️","Warning"),new Emoji("⚡","High Voltage"),new Emoji("⛔","No Entry"),new Emoji("♻️","Recycling Symbol"),new Emoji("♀️","Female Sign"),new Emoji("♂️","Male Sign"),new Emoji("⚧️","Transgender Symbol")],religion=[new Emoji("🔯","Dotted Six-Pointed Star"),new Emoji("✡️","Star of David"),new Emoji("🕉️","Om"),new Emoji("🕋","Kaaba"),new Emoji("🕌","Mosque"),new Emoji("🕍","Synagogue"),new Emoji("🕎","Menorah"),new Emoji("🛐","Place of Worship"),new Emoji("🛕","Hindu Temple"),new Emoji("☦️","Orthodox Cross"),new Emoji("✝️","Latin Cross"),new Emoji("☪️","Star and Crescent"),new Emoji("☮️","Peace Symbol"),new Emoji("☯️","Yin Yang"),new Emoji("☸️","Wheel of Dharma"),new Emoji("♾️","Infinity"),new Emoji("🪔","Diya Lamp"),new Emoji("⛩️","Shinto Shrine"),new Emoji("⛪","Church"),new Emoji("✴️","Eight-Pointed Star"),new Emoji("📿","Prayer Beads")],household=[new Emoji("💄","Lipstick"),new Emoji("💍","Ring"),new Emoji("💎","Gem Stone"),new Emoji("📰","Newspaper"),new Emoji("🔑","Key"),new Emoji("🔥","Fire"),new Emoji("🪨","Rock"),new Emoji("🪵","Wood"),new Emoji("🔫","Pistol"),new Emoji("🕯️","Candle"),new Emoji("🖼️","Framed Picture"),new Emoji("🗝️","Old Key"),new Emoji("🗞️","Rolled-Up Newspaper"),new Emoji("🗺️","World Map"),new Emoji("🚪","Door"),new Emoji("🚽","Toilet"),new Emoji("🚿","Shower"),new Emoji("🛁","Bathtub"),new Emoji("🛋️","Couch and Lamp"),new Emoji("🛏️","Bed"),new Emoji("🧴","Lotion Bottle"),new Emoji("🧵","Thread"),new Emoji("🧶","Yarn"),new Emoji("🧷","Safety Pin"),new Emoji("🧸","Teddy Bear"),new Emoji("🧹","Broom"),new Emoji("🧺","Basket"),new Emoji("🧻","Roll of Paper"),new Emoji("🧼","Soap"),new Emoji("🧽","Sponge"),new Emoji("🪑","Chair"),new Emoji("🪒","Razor"),new Emoji("🪞","Mirror"),new Emoji("🪟","Window"),new Emoji("🪠","Plunger"),new Emoji("🪡","Sewing Needle"),new Emoji("🪢","Knot"),new Emoji("🪣","Bucket"),new Emoji("🪤","Mouse Trap"),new Emoji("🪥","Toothbrush"),new Emoji("🪦","Headstone"),new Emoji("🪧","Placard"),new Emoji("🎗️","Reminder Ribbon")],activities=[new Emoji("🎞️","Film Frames"),new Emoji("🎟️","Admission Tickets"),new Emoji("🎠","Carousel Horse"),new Emoji("🎡","Ferris Wheel"),new Emoji("🎢","Roller Coaster"),new Emoji("🎨","Artist Palette"),new Emoji("🎪","Circus Tent"),new Emoji("🎫","Ticket"),new Emoji("🎬","Clapper Board"),new Emoji("🎭","Performing Arts")],travel=[new Emoji("🏷️","Label"),new Emoji("🌋","Volcano"),new Emoji("🏔️","Snow-Capped Mountain"),new Emoji("⛰️","Mountain"),new Emoji("🏕️","Camping"),new Emoji("🏖️","Beach with Umbrella"),new Emoji("⛱️","Umbrella on Ground"),new Emoji("🏯","Japanese Castle"),new Emoji("👣","Footprints"),new Emoji("🗻","Mount Fuji"),new Emoji("🗼","Tokyo Tower"),new Emoji("🗽","Statue of Liberty"),new Emoji("🗾","Map of Japan"),new Emoji("🗿","Moai"),new Emoji("🛎️","Bellhop Bell"),new Emoji("🧳","Luggage"),new Emoji("⛳","Flag in Hole"),new Emoji("⛺","Tent"),new Emoji("♨️","Hot Springs")],medieval=[new Emoji("🏰","Castle"),new Emoji("🏹","Bow and Arrow"),new Emoji("👑","Crown"),new Emoji("🔱","Trident Emblem"),new Emoji("🗡️","Dagger"),new Emoji("🛡️","Shield"),new Emoji("🔮","Crystal Ball"),new Emoji("🪄","Magic Wand"),new Emoji("⚔️","Crossed Swords"),new Emoji("⚜️","Fleur-de-lis"),new Emoji("🪖","Military Helmet")],doubleExclamationMark=new Emoji("‼️","Double Exclamation Mark"),interrobang=new Emoji("⁉️","Exclamation Question Mark"),information=new Emoji("ℹ️","Information"),circledM=new Emoji("Ⓜ️","Circled M"),checkMarkButton=new Emoji("✅","Check Mark Button"),checkMark=new Emoji("✔️","Check Mark"),eightSpokedAsterisk=new Emoji("✳️","Eight-Spoked Asterisk"),crossMark=new Emoji("❌","Cross Mark"),crossMarkButton=new Emoji("❎","Cross Mark Button"),questionMark=new Emoji("❓","Question Mark"),whiteQuestionMark=new Emoji("❔","White Question Mark"),whiteExclamationMark=new Emoji("❕","White Exclamation Mark"),exclamationMark=new Emoji("❗","Exclamation Mark"),curlyLoop=new Emoji("➰","Curly Loop"),doubleCurlyLoop=new Emoji("➿","Double Curly Loop"),wavyDash=new Emoji("〰️","Wavy Dash"),partAlternationMark=new Emoji("〽️","Part Alternation Mark"),tradeMark=new Emoji("™️","Trade Mark"),copyright=new Emoji("©️","Copyright"),registered=new Emoji("®️","Registered"),marks=[doubleExclamationMark,interrobang,information,circledM,checkMarkButton,checkMark,eightSpokedAsterisk,crossMark,crossMarkButton,questionMark,whiteQuestionMark,whiteExclamationMark,exclamationMark,curlyLoop,doubleCurlyLoop,wavyDash,partAlternationMark,tradeMark,copyright,registered],textStyle=new Emoji("︎","Variation Selector-15: text style"),emojiStyle=new Emoji("️","Variation Selector-16: emoji style"),zeroWidthJoiner=new Emoji("‍","Zero Width Joiner"),combiningClosingKeycap=new Emoji("⃣","Combining Enclosing Keycap"),combiners=[textStyle,emojiStyle,zeroWidthJoiner,combiningClosingKeycap],allIcons={faces:faces,love:love,cartoon:cartoon,hands:hands,bodyParts:bodyParts,sex:sex,people:people,gestures:gestures,activity:activity,roles:roles,fantasy:fantasy,sports:sports,personResting:personResting,otherPeople:otherPeople,skinTones:skinTones,hairColors:hairColors,animals:animals,plants:plants,food:food,sweets:sweets,drinks:drinks,utensils:utensils,nations:nations,flags:flags,vehicles:vehicles,bloodTypes:bloodTypes,regions:regions,japanese:japanese,time:time,clocks:clocks,arrows:arrows,shapes:shapes,mediaPlayer:mediaPlayer,zodiac:zodiac,chess:chess,numbers:numbers,tags:tags,math:math,games:games,sportsEquipment:sportsEquipment,clothing:clothing,town:town,buttons:buttons,music:music,weather:weather,astro:astro,finance:finance,writing:writing,science:science,tech:tech,mail:mail,celebration:celebration,tools:tools,office:office,signs:signs,religion:religion,household:household,activities:activities,travel:travel,medieval:medieval,marks:marks,combiners:combiners},headerStyle=style({textDecoration:"none",color:"black",textTransform:"capitalize"}),buttonStyle=style({fontSize:"200%",width:"2em",fontFamily:systemFamily}),cancelEvt=new Event("emojiCanceled");class EmojiForm extends FormDialog{constructor(){super("emoji","Emoji"),this.header.append(H2("Recent"),this.recent=P("(None)"));const e=[],n=[];let i=null,o=0;function t(e,n){let i=e.value,o=i.indexOf(emojiStyle.value);return-1===o&&(o=i.indexOf(textStyle.value)),o>=0&&(i=i.substring(0,o)),{value:i+n.value,desc:e.desc+"/"+n.desc}}const a=(e,m,s)=>{e=e.alts||e;for(let r of e){const e=s?UL():Span(),w=Button(title(r.desc),buttonStyle,onClick(e=>{i=i&&e.ctrlKey?t(i,r):r,this.preview.innerHTML=`${i.value} - ${i.desc}`,this.confirmButton.unlock(),l&&(l.toggleOpen(),w.innerHTML=r.value+(l.isOpen()?"-":"+"))}),r.value);let l=null;s?(w.id="emoji-with-alt-"+o++,e.appendChild(LI(w,Label(htmlFor(w.id),r.desc)))):e.appendChild(w),r.alts&&(l=Div(),n.push(l),a(r.alts,l,!0),l.hide(),e.appendChild(l),w.style.width="3em",w.innerHTML+="+"),r.width&&(w.style.width=r.width),r.color&&(w.style.color=r.color),m.appendChild(e)}};for(let e of Object.keys(allIcons))if("combiners"!==e){const n=H1(),i=P(),o=A(href("javascript:undefined"),title(e),headerStyle,onClick(()=>{i.toggleOpen(),o.innerHTML=e+(i.isOpen()?" -":" +")}),e+" -");a(allIcons[e],i),n.appendChild(o),this.content.appendChild(n),this.content.appendChild(i)}this.footer.append(this.confirmButton=Button(className("confirm"),systemFont,"OK",onClick(()=>{-1===e.indexOf(i)&&(e.push(i),this.recent.innerHTML="",a(e,this.recent)),this.hide(),this.dispatchEvent(new EmojiSelectedEvent(i))})),Button(className("cancel"),systemFont,"Cancel",onClick(()=>{this.confirmButton.lock(),this.hide(),this.dispatchEvent(cancelEvt)})),this.preview=Span(style({gridArea:"4/1/5/4"}))),this.confirmButton.lock(),this.isOpen=this.element.isOpen.bind(this.element),this.selectAsync=()=>new Promise((e,i)=>{let o=null,t=null;const a=()=>{this.removeEventListener("emojiSelected",o),this.removeEventListener("emojiCanceled",t)};o=n=>{a();try{e(n.emoji)}catch(e){i(e)}},t=()=>{a(),e(null)},this.addEventListener("emojiSelected",o),this.addEventListener("emojiCanceled",t),(()=>{for(let e of n)e.hide()})(),this.show()})}}class EmojiSelectedEvent extends Event{constructor(e){super("emojiSelected"),this.emoji=e}}function instructions(){return[Aside(style({border:"dashed 2px darkred",backgroundColor:"wheat",borderRadius:"5px",padding:"0.5em"}),Strong("Note: "),"Calla is built on top of ",A(href("https://jitsi.org"),target("_blank"),rel("noopener"),"Jitsi Meet"),". Jitsi does not support iPhones and iPads."),UL(LI(Strong("Be careful in picking your room name"),", if you don't want randos to join. Traffic is low right now, but you never know."),LI("Try to ",Strong("pick a unique user name"),'. A lot of people use "Test" and then there are a bunch of people with the same name running around.'),LI(Strong("Open the Options view")," to set your avatar, or to change your microphone settings."),LI(Strong("Click on the map")," to move your avatar to wherever you want. Movement is instantaneous, with a smooth animation over the transition. Your avatar will stop at walls."),LI("Or, ",Strong("use the arrow keys")," on your keyboard to move."),LI(Strong("Click on yourself")," to open a list of Emoji. Select an Emoji to float it out into the map."),LI(Strong("Hit the E key")," to re-emote with your last selected Emoji."),LI("You can ",Strong("roll your mouse wheel")," or ",Strong("pinch your touchscreen")," to zoom in and out of the map view. This is useful for groups of people standing close to each other to see the detail in their Avatar."),LI("You can ",Strong(" click the Pause button(⏸️)")," in the upper-right corner to show the default Jitsi Meet interface, in case you need to change any settings there (the game view blocks clicks on the Jitsi Meet interface)."))]}class InstructionsForm extends FormDialog{constructor(){super("instructions","Instructions"),this.content.append(...instructions()),this.footer.append(this.confirmButton=Button(systemFont,style({gridArea:"4/2"}),"Close",onClick(()=>this.hide())))}async showAsync(){return this.show(),await this.confirmButton.once("click"),!1}}const loginEvt=new Event("login"),defaultRooms=new Map([["calla","Calla"],["island","Island"],["alxcc","Alexandria Code & Coffee"],["vurv","Vurv"]]),selfs=new Map;class LoginForm extends FormDialog{constructor(){super("login");const e=Object.seal({ready:!1,connecting:!1,connected:!1,validate:()=>{const e=this.roomName.length>0&&this.userName.length>0;this.connectButton.setLocked(!this.ready||this.connecting||this.connected||!e),this.connectButton.innerHTML=this.connected?"Connected":this.connecting?"Connecting...":this.ready?"Connect":"Loading..."}});selfs.set(this,e),this.roomLabel=this.element.querySelector("label[for='roomSelector']"),this.roomSelect=SelectBox("No rooms available",e=>e,e=>defaultRooms.get(e),this.element.querySelector("#roomSelector")),this.roomSelect.addEventListener("input",()=>{e.validate()}),this.roomInput=this.element.querySelector("#roomName"),this.createRoomButton=this.element.querySelector("#createNewRoom"),this.userNameInput=this.element.querySelector("#userName"),this.connectButton=this.element.querySelector("#connect"),this.roomInput.addEventListener("input",e.validate),this.userNameInput.addEventListener("input",e.validate),this.createRoomButton.addEventListener("click",()=>{this.roomSelectMode=!this.roomSelectMode}),this.connectButton.addEventListener("click",()=>{this.connecting=!0,this.dispatchEvent(loginEvt)}),this.roomSelect.emptySelectionEnabled=!1,this.roomSelect.values=defaultRooms.keys(),this.roomSelectMode=!0,this.roomSelect.selectedIndex=0,e.validate()}get roomSelectMode(){return"none"!==this.roomSelect.style.display}set roomSelectMode(e){const n=selfs.get(this);this.roomSelect.setOpen(e),this.roomInput.setOpen(!e),this.createRoomButton.innerHTML=e?"New":"Cancel",e?(this.roomLabel.htmlFor=this.roomSelect.id,this.roomSelect.selectedValue=this.roomInput.value.toLocaleLowerCase()):this.roomSelect.selectedIndex>=0&&(this.roomLabel.htmlFor=this.roomInput.id,this.roomInput.value=this.roomSelect.selectedValue),n.validate()}get roomName(){const e=this.roomSelectMode?this.roomSelect.selectedValue:this.roomInput.value;return e&&e.toLocaleLowerCase()||""}set roomName(e){null!=e&&0!==e.length||(e=defaultRooms.keys().next()),this.roomInput.value=e,this.roomSelect.selectedValue=e,this.roomSelectMode=this.roomSelect.contains(e),selfs.get(this).validate()}set userName(e){this.userNameInput.value=e,selfs.get(this).validate()}get userName(){return this.userNameInput.value}get connectButtonText(){return this.connectButton.innerText||this.connectButton.textContent}set connectButtonText(e){this.connectButton.innerHTML=e}get ready(){return selfs.get(this).ready}set ready(e){const n=selfs.get(this);n.ready=e,n.validate()}get connecting(){return selfs.get(this).connecting}set connecting(e){const n=selfs.get(this);n.connecting=e,n.validate()}get connected(){return selfs.get(this).connected}set connected(e){selfs.get(this).connected=e,this.connecting=!1}show(){this.ready=!0,super.show()}}const gamepadStates=new Map;class EventedGamepad extends EventTarget{constructor(e){if(super(),!(e instanceof Gamepad))throw new Error("Value must be a Gamepad");this.id=e.id,this.displayId=e.displayId,this.connected=e.connected,this.hand=e.hand,this.pose=e.pose;const n={btnDownEvts:[],btnUpEvts:[],btnState:[],axisMaxed:[],axisMaxEvts:[],sticks:[]};this.buttons=[],this.axes=[],this.hapticActuators=[],this.axisThresholdMax=.9,this.axisThresholdMin=.1,this._isStick=n=>n%2==0&&n<e.axes.length-1;for(let i=0;i<e.buttons.length;++i)n.btnDownEvts[i]=Object.assign(new Event("gamepadbuttondown"),{button:i}),n.btnUpEvts[i]=Object.assign(new Event("gamepadbuttonup"),{button:i}),n.btnState[i]=!1,this.buttons[i]=e.buttons[i];for(let i=0;i<e.axes.length;++i)n.axisMaxEvts[i]=Object.assign(new Event("gamepadaxismaxed"),{axis:i}),n.axisMaxed[i]=!1,this._isStick(i)&&(n.sticks[i/2]={x:0,y:0}),this.axes[i]=e.axes[i];if(void 0!==e.hapticActuators)for(let n=0;n<e.hapticActuators.length;++n)this.hapticActuators[n]=e.hapticActuators[n];Object.seal(this),gamepadStates.set(this,n)}dispose(){gamepadStates.delete(this)}_update(e){if(!(e instanceof Gamepad))throw new Error("Value must be a Gamepad");this.connected=e.connected,this.hand=e.hand,this.pose=e.pose;const n=gamepadStates.get(this);for(let i=0;i<e.buttons.length;++i){const o=n.btnState[i],t=e.buttons[i].pressed;t!==o&&(n.btnState[i]=t,this.dispatchEvent((state?n.btnDownEvts:n.btnUpEvts)[i])),this.buttons[i]=e.buttons[i]}for(let i=0;i<e.axes.length;++i){const o=n.axisMaxed[i],t=e.axes[i]>=this.axisThresholdMax,a=e.axes[i]<=this.axisThresholdMin;t&&!o&&this.dispatchEvent(n.axisMaxEvts[i]),this.axes[i]=t?1:a?0:pads.axes[i]}for(let e=0;e<this.axes.length-1;e+=2){const i=n.sticks[e/2];i.x=this.axes[e],i.y=this.axes[e+1]}if(void 0!==e.hapticActuators)for(let n=0;n<e.hapticActuators.length;++n)this.hapticActuators[n]=e.hapticActuators[n]}}const gamepadConnectedEvt=Object.assign(new Event("gamepadconnected"),{gamepad:null}),gamepadDisconnectedEvt=Object.assign(new Event("gamepaddisconnected"),{gamepad:null}),gamepads=new Map,anyButtonDownEvt=Object.assign(new Event("gamepadbuttondown"),{button:-1}),anyButtonUpEvt=Object.assign(new Event("gamepadbuttonup"),{button:-1}),anyAxisMaxedEvt=Object.assign(new Event("gamepadaxismaxed"),{axis:-1});class GamepadStateManager extends EventTarget{constructor(){super();const e=e=>{anyButtonDownEvt.button=e.button,this.dispatchEvent(anyButtonDownEvt)},n=e=>{anyButtonUpEvt.button=e.button,this.dispatchEvent(anyButtonUpEvt)},i=e=>{anyAxisMaxedEvt.axis=e.axis,this.dispatchEvent(anyAxisMaxedEvt)};window.addEventListener("gamepadconnected",o=>{const t=o.gamepad,a=new EventedGamepad(t);a.addEventListener("gamepadbuttondown",e),a.addEventListener("gamepadbuttonup",n),a.addEventListener("gamepadaxismaxed",i),gamepads.set(t.id,a),gamepadConnectedEvt.gamepad=a,this.dispatchEvent(gamepadConnectedEvt)}),window.addEventListener("gamepaddisconnected",o=>{const t=o.gamepad.id,a=gamepads.get(t);gamepads.delete(t),a.removeEventListener("gamepadbuttondown",e),a.removeEventListener("gamepadbuttonup",n),a.removeEventListener("gamepadaxismaxed",i),gamepadDisconnectedEvt.gamepad=a,this.dispatchEvent(gamepadDisconnectedEvt),a.dispose()}),Object.freeze(this)}get gamepadIDs(){return[...gamepads.keys()]}get gamepads(){return[...gamepads.values()]}get(e){return gamepads.get(e)}}const GamepadManager=new GamepadStateManager;function update(){requestAnimationFrame(update);const e=navigator.getGamepads();for(let n of e)if(null!==n&&gamepads.has(n.id)){gamepads.get(n.id).update(n)}}requestAnimationFrame(update);const inputBindingChangedEvt=new Event("inputBindingChanged");class InputBinding extends EventTarget{constructor(){super();const e=new Map([["keyButtonUp","ArrowUp"],["keyButtonDown","ArrowDown"],["keyButtonLeft","ArrowLeft"],["keyButtonRight","ArrowRight"],["keyButtonEmote","e"],["keyButtonToggleAudio","a"],["gpButtonUp",12],["gpButtonDown",13],["gpButtonLeft",14],["gpButtonRight",15],["gpButtonEmote",0],["gpButtonToggleAudio",1]]);for(let n of e.keys())Object.defineProperty(this,n,{get:()=>e.get(n),set:i=>{e.has(n)&&i!==e.get(n)&&(e.set(n,i),this.dispatchEvent(inputBindingChangedEvt))}});this.clone=()=>{const n={};for(let i of e.entries())n[i[0]]=i[1];return n},Object.freeze(this)}}const keyWidthStyle=style({width:"7em"}),numberWidthStyle=style({width:"3em"}),avatarUrlChangedEvt=new Event("avatarURLChanged"),gamepadChangedEvt=new Event("gamepadChanged"),selectAvatarEvt=new Event("selectAvatar"),fontSizeChangedEvt=new Event("fontSizeChanged"),inputBindingChangedEvt$1=new Event("inputBindingChanged"),audioPropsChangedEvt=new Event("audioPropertiesChanged"),toggleDrawHearingEvt=new Event("toggleDrawHearing"),toggleVideoEvt=new Event("toggleVideo"),audioInputChangedEvt=new Event("audioInputChanged"),audioOutputChangedEvt=new Event("audioOutputChanged"),videoInputChangedEvt=new Event("videoInputChanged"),selfs$1=new Map;class OptionsForm extends FormDialog{constructor(){super("options","Options");const e=e=>()=>this.dispatchEvent(e),n={inputBinding:new InputBinding};selfs$1.set(this,n);const i=onInput(e(audioPropsChangedEvt)),o=(e,i)=>{const o=LabeledInput(e,"text",i,keyWidthStyle,onKeyUp(i=>{"Tab"!==i.key&&"Shift"!==i.key&&(o.value=n.inputBinding[e]=i.key,this.dispatchEvent(inputBindingChangedEvt$1))}));return o.value=n.inputBinding[e],o},t=(e,i)=>{const o=LabeledInput(e,"text",i,numberWidthStyle);return GamepadManager.addEventListener("gamepadbuttonup",i=>{document.activeElement===o&&(o.value=n.inputBinding[e]=i.button,this.dispatchEvent(inputBindingChangedEvt$1))}),o.value=n.inputBinding[e],o},a=[OptionPanel("avatar","Avatar",this.avatarURLInput=LabeledInput("avatarURL","text","Avatar URL: ",placeHolder("https://example.com/me.png"),onInput(e(avatarUrlChangedEvt)))," or ",this.avatarEmojiInput=Div(Label(htmlFor("selectAvatarEmoji"),"Avatar Emoji: "),this.avatarEmojiPreview=Span(bust.value),Button(id("selectAvatarEmoji"),"Select",onClick(e(selectAvatarEvt))))),OptionPanel("interface","Interface",this.fontSizeInput=LabeledInput("fontSize","number","Font size: ",value(10),min(5),max(32),style({width:"3em"}),onInput(e(fontSizeChangedEvt)))),OptionPanel("keyboard","Keyboard",this.keyButtonUp=o("keyButtonUp","Up: "),this.keyButtonDown=o("keyButtonDown","Down: "),this.keyButtonLeft=o("keyButtonLeft","Left: "),this.keyButtonRight=o("keyButtonRight","Right: "),this.keyButtonEmote=o("keyButtonEmote","Emote: "),this.keyButtonToggleAudio=o("keyButtonToggleAudio","Toggle audio: ")),OptionPanel("gamepad","Gamepad",this.gpSelect=LabeledSelectBox("gamepads","Use gamepad: ","No gamepad",e=>e.id,e=>e.id,onInput(e(gamepadChangedEvt))),this.gpButtonUp=t("gpButtonUp","Up: "),this.gpButtonDown=t("gpButtonDown","Down: "),this.gpButtonLeft=t("gpButtonLeft","Left: "),this.gpButtonRight=t("gpButtonRight","Right: "),this.gpButtonEmote=t("gpButtonEmote","Emote: "),this.gpButtonToggleAudio=t("gpButtonToggleAudio","Toggle audio: ")),OptionPanel("audio","Audio",P(this.audioInputSelect=LabeledSelectBox("audioInputDevices","Input: ","No audio input",e=>e.deviceId,e=>e.label,onInput(e(audioInputChangedEvt)))),P(this.audioOutputSelect=LabeledSelectBox("audioOutputDevices","Output: ","No audio output",e=>e.deviceId,e=>e.label,onInput(e(audioOutputChangedEvt)))),P(this.drawHearingCheck=LabeledInput("drawHearing","checkbox","Draw hearing range: ",onInput(()=>{this.drawHearing=!this.drawHearing,this.dispatchEvent(toggleDrawHearingEvt)})),this.audioMinInput=LabeledInput("minAudio","number","Min: ",value(1),min(0),max(100),numberWidthStyle,i),this.audioMaxInput=LabeledInput("maxAudio","number","Min: ",value(10),min(0),max(100),numberWidthStyle,i),this.audioRolloffInput=LabeledInput("rollof","number","Rollof: ",value(1),min(.1),max(10),step(.1),numberWidthStyle,i))),OptionPanel("video","Video",P(this.enableVideo=Button(accessKey("v"),"Enable video",onClick(e(toggleVideoEvt)))),P(this.videoInputSelect=LabeledSelectBox("videoInputDevices","Device: ","No video input",e=>e.deviceId,e=>e.label,onInput(e(videoInputChangedEvt)))))],m=[];for(let e=0;e<a.length;++e)m[e]="1fr",a[e].element.style.gridColumnStart=e+1;Object.assign(this.header.style,{display:"grid",gridTemplateColumns:m.join(" ")}),this.header.append(...a.map(e=>e.button)),this.content.append(...a.map(e=>e.element)),this.footer.append(this.confirmButton=Button(className("confirm"),systemFont,"Close",onClick(()=>this.hide())));const s=e=>()=>{for(let n=0;n<a.length;++n)a[n].visible=n===e};for(let e=0;e<a.length;++e)a[e].visible=0===e,a[e].addEventListener("select",s(e));n.inputBinding.addEventListener("inputBindingChanged",()=>{for(let e of Object.getOwnPropertyNames(n.inputBinding))void 0!==value[e]&&null!=this[e]&&(this[e].value=value[e])}),this.gamepads=[],this.audioInputDevices=[],this.audioOutputDevices=[],this.videoInputDevices=[],this._videoEnabled=!1,this._drawHearing=!1,this._avatarEmoji=null,Object.seal(this)}get avatarEmoji(){return this._avatarEmoji}set avatarEmoji(e){this._avatarEmoji=e,clear(this.avatarEmojiPreview),this.avatarEmojiPreview.append(Span(title(e&&e.desc||"(None)"),e&&e.value||"N/A"))}get avatarURL(){return this.avatarURLInput.value}set avatarURL(e){this.avatarURLInput.value=e}async showAsync(){this.show(),await this.confirmButton.once("click")}get inputBinding(){return selfs$1.get(this).inputBinding.clone()}set inputBinding(e){const n=selfs$1.get(this);for(let i of Object.getOwnPropertyNames(e))void 0!==n.inputBinding[i]&&void 0!==e[i]&&null!=this[i]&&(n.inputBinding[i]=this[i].value=e[i])}get gamepads(){return this.gpSelect.values}set gamepads(e){this.gpSelect.values=e}get audioInputDevices(){return this.audioInputSelect.values}set audioInputDevices(e){this.audioInputSelect.values=e}get currentAudioInputDevice(){return this.audioInputSelect.selectedValue}set currentAudioInputDevice(e){this.audioInputSelect.selectedValue=e}get audioOutputDevices(){return this.audioOutputSelect.values}set audioOutputDevices(e){this.audioOutputSelect.values=e}get currentAudioOutputDevice(){return this.audioOutputSelect.selectedValue}set currentAudioOutputDevice(e){this.audioOutputSelect.selectedValue=e}get videoInputDevices(){return this.videoInputSelect.values}set videoInputDevices(e){this.videoInputSelect.values=e}get currentVideoInputDevice(){return this.videoInputSelect.selectedValue}set currentVideoInputDevice(e){this.videoInputSelect.selectedValue=e}get videoEnabled(){return this._videoEnabled}set videoEnabled(e){this._videoEnabled=e,this.enableVideo.innerHTML=e?"Disable video":"Enable video"}get gamepads(){return this.gpSelect.getValues()}set gamepads(e){const n=0===e.length;this.gpSelect.values=e,this.gpButtonUp.setLocked(n),this.gpButtonDown.setLocked(n),this.gpButtonLeft.setLocked(n),this.gpButtonRight.setLocked(n),this.gpButtonEmote.setLocked(n),this.gpButtonToggleAudio.setLocked(n)}get gamepadIndex(){return this.gpSelect.selectedIndex}set gamepadIndex(e){this.gpSelect.selectedIndex=e}get drawHearing(){return this._drawHearing}set drawHearing(e){this._drawHearing=e,this.drawHearingCheck.checked=e}get audioDistanceMin(){const e=parseFloat(this.audioMinInput.value);return isGoodNumber(e)?e:1}set audioDistanceMin(e){isGoodNumber(e)&&e>0&&(this.audioMinInput.value=e,this.audioDistanceMin>this.audioDistanceMax&&(this.audioDistanceMax=this.audioDistanceMin))}get audioDistanceMax(){const e=parseFloat(this.audioMaxInput.value);return isGoodNumber(e)?e:10}set audioDistanceMax(e){isGoodNumber(e)&&e>0&&(this.audioMaxInput.value=e,this.audioDistanceMin>this.audioDistanceMax&&(this.audioDistanceMin=this.audioDistanceMax))}get audioRolloff(){const e=parseFloat(this.audioRolloffInput.value);return isGoodNumber(e)?e:1}set audioRolloff(e){isGoodNumber(e)&&e>0&&(this.audioRolloffInput.value=e)}get fontSize(){const e=parseFloat(this.fontSizeInput.value);return isGoodNumber(e)?e:16}set fontSize(e){isGoodNumber(e)&&e>0&&(this.fontSizeInput.value=e)}}function Run(e){return Span(style({margin:"auto"}),e)}const toggleAudioEvt=new Event("toggleAudio"),emoteEvt=new Event("emote"),selectEmojiEvt=new Event("selectEmoji"),zoomChangedEvt=new Event("zoomChanged"),toggleOptionsEvt=new Event("toggleOptions"),tweetEvt=new Event("tweet"),leaveEvt=new Event("leave"),toggleUIEvt=new Event("toggleUI"),toggleInstructionsEvt=new Event("toggleInstructions"),subelStyle=style({display:"inline-flex",margin:"0 0.5em 0 0"});class ToolBar extends EventTarget{constructor(){super();const e=e=>()=>this.dispatchEvent(e);this.element=Div(id("toolbar"),style({position:"fixed",top:0,right:0,backgroundColor:"#bbb",display:"flex",flexDirection:"row",flexWrap:"wrap"}),this.toolbar=Div(style({display:"flex",width:"100vw",padding:"4px",flexDirection:"row",flexWrap:"wrap",boxSizing:"border-box"}),systemFont,this.muteAudioButton=Button(onClick(e(toggleAudioEvt)),subelStyle,systemFont,speakerHighVolume.value),this.emojiControl=Span(subelStyle,this.emoteButton=Button(title("Emote"),onClick(e(emoteEvt)),systemFont,"Emote ",KBD("(E)"),"(@)"),Button(title("Select Emoji"),systemFont,onClick(e(selectEmojiEvt)),downwardsButton.value)),Span(subelStyle,Label(htmlFor("zoom"),style({margin:"auto"}),"Zoom"),this.zoomSpinner=Input(type("number"),id("zoom"),title("Change map zoom"),value(2),min(.1),max(8),step(.1),style({width:"4em"}),systemFont,onInput(e(zoomChangedEvt)))),this.optionsButton=Button(title("Show/hide options"),onClick(e(toggleOptionsEvt)),subelStyle,systemFont,gear.value),this.instructionsButton=Button(title("Show/hide instructions"),onClick(e(toggleInstructionsEvt)),subelStyle,systemFont,questionMark.value),Button(title("Share your current room to twitter"),onClick(e(tweetEvt)),subelStyle,systemFont,Run("Share room"),Img(src("https://cdn2.iconfinder.com/data/icons/minimalism/512/twitter.png"),alt("icon"),role("presentation"),style({height:"1.5em"}))),Button(title("Leave the room"),onClick(e(leaveEvt)),subelStyle,systemFont,style({marginLeft:"1em"}),Run("Leave"))),this.hideButton=Button(title("Show/hide Jitsi Meet interface"),style({position:"absolute",right:0,margin:"4px"}),systemFont,onClick(()=>this.visible=!this.visible),Run(pauseButton.value))),this._audioEnabled=!0,Object.seal(this)}get offsetHeight(){return this.toolbar.offsetHeight}get zoom(){return this.zoomSpinner.value}set zoom(e){this.zoomSpinner.value=Math.round(100*e)/100}get visible(){return"none"!==this.toolbar.style.display}set visible(e){this.toolbar.setOpenWithLabel(e,this.hideButton,pauseButton.value,playButton.value),this.dispatchEvent(toggleUIEvt)}hide(){this.visible=!1}show(){this.visible=!0}get audioEnabled(){return this._audioEnabled}set audioEnabled(e){this._audioEnabled=e,this.muteAudioButton.updateLabel(e,speakerHighVolume.value,mutedSpeaker.value)}appendChild(e){return this.toolbar.appendChild(e)}insertBefore(e,n){return this.toolbar.insertBefore(e,n)}append(...e){this.toolbar.append(...e)}setEmojiButton(e,n){this.emoteButton.innerHTML=`Emote (<kbd>${e.toUpperCase()}</kbd>) (${n.value})`}}const EMOJI_LIFE=2;class Emote{constructor(e,n,i){this.emoji=e,this.x=n,this.y=i,this.dx=Math.random()-.5,this.dy=.5*-Math.random()-.5,this.life=1,this.width=-1}isDead(){return this.life<=0}update(e){this.life-=e/2,this.dx*=.99,this.dy*=.99,this.x+=this.dx*e,this.y+=this.dy*e}drawShadow(e,n,i){e.save(),e.shadowColor="rgba(0, 0, 0, 0.5)",e.shadowOffsetX=3*i,e.shadowOffsetY=3*i,e.shadowBlur=3*i,this.drawEmote(e,n),e.restore()}drawEmote(e,n){if(e.fillStyle=`rgba(0, 0, 0, ${this.life})`,e.font=n.tileHeight/2+"px sans-serif",-1===this.width){const n=e.measureText(this.emoji.value);this.width=n.width}e.fillText(this.emoji.value,this.x*n.tileWidth-this.width/2,this.y*n.tileHeight)}}class TileSet{constructor(e){this.url=e,this.tileWidth=0,this.tileHeight=0,this.tilesPerRow=0,this.image=new Image,this.collision={}}async load(){const e=await fetch(this.url),n=await e.xml(),i=new Promise((e,n)=>{this.image.addEventListener("load",n=>{this.tilesPerRow=Math.floor(this.image.width/this.tileWidth),e()}),this.image.addEventListener("error",n)}),o=n.querySelector("image").getAttribute("source"),t=new URL(o,this.url),a=n.querySelectorAll("tile");for(let e of a){const n=1*e.getAttribute("id"),i=e.querySelector("properties > property[name='Collision']").getAttribute("value");this.collision[n]="true"===i}this.name=n.getAttribute("name"),this.tileWidth=1*n.getAttribute("tilewidth"),this.tileHeight=1*n.getAttribute("tileheight"),this.tileCount=1*n.getAttribute("tilecount"),this.image.src=t.href,await i}isClear(e){return!this.collision[e-1]}draw(e,n,i,o){if(n>0){const t=n-1,a=this.tileWidth*(t%this.tilesPerRow),m=this.tileHeight*Math.floor(t/this.tilesPerRow),s=i*this.tileWidth,r=o*this.tileHeight;e.drawImage(this.image,a,m,this.tileWidth,this.tileHeight,s,r,this.tileWidth,this.tileHeight)}}}class TileMap{constructor(e){this.url=new URL(`/data/tilemaps/${e}.tmx`,document.location),this.tileset=null,this.tileWidth=0,this.tileHeight=0,this.layers=0,this.width=0,this.height=0,this.offsetX=0,this.offsetY=0,this.tiles=null,this.collision=null}async load(){const e=await fetch(this.url.href),n=await e.xml(),i=1*n.getAttribute("width"),o=1*n.getAttribute("height"),t=1*n.getAttribute("tilewidth"),a=1*n.getAttribute("tileheight"),m=n.querySelector("tileset").getAttribute("source"),s=n.querySelectorAll("layer > data");this.layers=s.length,this.width=i,this.height=o,this.offsetX=-Math.floor(i/2),this.offsetY=-Math.floor(o/2),this.tileWidth=t,this.tileHeight=a,this.tiles=[];for(let e of s){const n=e.innerHTML.replace(" ","").replace("\t","").replace("\n","").replace("\r","").split(","),o=[];let t=[];for(let e of n)t.push(e),t.length===i&&(o.push(t),t=[]);t.length>0&&o.push(t),this.tiles.push(o)}this.tileset=new TileSet(new URL(m,this.url)),await this.tileset.load(),this.tileWidth=this.tileset.tileWidth,this.tileHeight=this.tileset.tileHeight}draw(e){e.save(),e.translate(this.offsetX*this.tileWidth,this.offsetY*this.tileHeight);for(let n=0;n<this.layers;++n){const i=this.tiles[n];for(let n=0;n<this.height;++n){const o=i[n];for(let i=0;i<this.width;++i){const t=o[i];this.tileset.draw(e,t,i,n)}}}e.restore()}isClear(e,n,i){return e-=this.offsetX,n-=this.offsetY,e<0||this.width<=e||n<0||this.height<=n||this.tileset.isClear(this.tiles[0][n][e])||isSurfer(i.value)}getClearTile(e,n,i,o,t){const a=e+i,m=n+o,s=e<a?1:-1,r=n<m?1:-1;let w=((i=Math.abs(a-e))>(o=Math.abs(m-n))?i:-o)/2;for(;e!==a||n!==m;){const a=w;if(a>-i){if(!this.isClear(e+s,n,t))break;w-=o,e+=s}if(a<o){if(!this.isClear(e,n+r,t))break;w+=i,n+=r}}return{x:e,y:n}}}const POSITION_REQUEST_DEBOUNCE_TIME=1e3,STACKED_USER_OFFSET_X=5,STACKED_USER_OFFSET_Y=5,MOVE_TRANSITION_TIME=.5,eventNames=["userMoved","userPositionNeeded"];class User extends EventTarget{constructor(e,n,i){super(),this.id=e,this.x=0,this.y=0,this.avatarEmoji=i?randomPerson():bust,this.displayName=n||e,this.audioMuted=!1,this.videoMuted=!0,this.sx=0,this.sy=0,this.tx=0,this.ty=0,this.dx=0,this.dy=0,this.dist=0,this.t=0,this.distXToMe=0,this.distYToMe=0,this.isMe=i,this.isActive=!1,this.avatarImage=null,this.avatarURL=null,this.stackUserCount=1,this.stackIndex=0,this.stackAvatarHeight=0,this.stackAvatarWidth=0,this.stackOffsetX=0,this.stackOffsetY=0,this.isInitialized=i,this.lastPositionRequestTime=Date.now()-1e3,this.moveEvent=new UserMoveEvent(this.id),this.visible=!0}init(e){this.sx=this.tx=this.x=e.x,this.sy=this.ty=this.y=e.y,this.displayName=e.displayName,this.avatarURL=e.avatarURL,!this.avatarURL&&this.avatarImage&&(this.avatarImage=null),this.avatarEmoji=e._avatarEmoji,this.isInitialized=!0}get avatarEmoji(){return this._avatarEmoji}set avatarEmoji(e){this._avatarEmoji=e,this.avatarEmojiMetrics=null,e&&this.setAvatarURL("")}addEventListener(e,n,i){if(-1===eventNames.indexOf(e))throw new Error("Unrecognized event type: "+e);super.addEventListener(e,n,i)}setAvatarURL(e){if(null!=e)if(0===e.length)this.avatarURL=null,this.avatarImage=null;else{this.avatarURL=e;const n=new Image;n.addEventListener("load",e=>{this.avatarImage=Canvas(width(n.width),height(n.height));const i=this.avatarImage.getContext("2d");i.clearRect(0,0,n.width,n.height),i.imageSmoothingEnabled=!1,i.drawImage(n,0,0)}),n.src=e}}setDisplayName(e){this.displayName=e||this.id}moveTo(e,n){this.isMe?e===this.tx&&n===this.ty||(this.moveEvent.set(e,n),this.dispatchEvent(this.moveEvent)):this.isInitialized||(this.isInitialized=!0,this.x=e,this.y=n),this.sx=this.x,this.sy=this.y,this.tx=e,this.ty=n,this.tx===this.sx&&this.ty===this.sy||(this.dx=this.tx-this.sx,this.dy=this.ty-this.sy,this.dist=Math.sqrt(this.dx*this.dx+this.dy*this.dy),this.t=0)}update(e,n,i){if(this.isInitialized){if(this.dist>0)if(this.t+=e,this.t>=.5)this.x=this.sx=this.tx,this.y=this.sy=this.ty,this.t=this.dx=this.dy=this.dist=0;else{const e=this.t/.5,n=Math.sin(Math.PI*e/2);this.x=this.sx+n*this.dx,this.y=this.sy+n*this.dy}this.stackUserCount=0,this.stackIndex=0;for(let e of i)e.isInitialized&&e.tx===this.tx&&e.ty===this.ty&&(e.id===this.id&&(this.stackIndex=this.stackUserCount),++this.stackUserCount);this.stackAvatarWidth=n.tileWidth-5*(this.stackUserCount-1);const o=this.stackAvatarHeight;this.stackAvatarHeight=n.tileHeight-5*(this.stackUserCount-1),this.stackAvatarHeight!=o&&(this.avatarEmojiMetrics=null),this.stackOffsetX=5*this.stackIndex,this.stackOffsetY=5*this.stackIndex}else{const e=Date.now();e-this.lastPositionRequestTime>=1e3&&(this.lastPositionRequestTime=e,this.dispatchEvent(new UserPositionNeededEvent(this.id)))}}drawShadow(e,n,i){const o=this.x*n.tileWidth,t=this.y*n.tileHeight,a=e.getTransform().transformPoint({x:o,y:t});this.visible=-n.tileWidth<=a.x&&a.x<e.canvas.width&&-n.tileHeight<=a.y&&a.y<e.canvas.height,this.visible&&(e.save(),e.shadowColor="rgba(0, 0, 0, 0.5)",e.shadowOffsetX=3*i,e.shadowOffsetY=3*i,e.shadowBlur=3*i,this.innerDraw(e,n),e.restore())}drawAvatar(e,n){if(this.visible){if(e.save(),this.innerDraw(e,n),this.isActive&&!this.audioMuted){const n=this.stackAvatarHeight/2;e.font=n+"px sans-serif";const i=e.measureText(speakerMediumVolume.value);e.fillText(speakerMediumVolume.value,this.stackAvatarWidth-i.width,0)}e.restore()}}innerDraw(e,n){if(e.translate(this.x*n.tileWidth+this.stackOffsetX,this.y*n.tileHeight+this.stackOffsetY),e.fillStyle="black",e.textBaseline="top",this.avatarImage?e.drawImage(this.avatarImage,0,0,this.stackAvatarWidth,this.stackAvatarHeight):this.avatarEmoji&&(e.font=.9*this.stackAvatarHeight+"px sans-serif",this.avatarEmojiMetrics||(this.avatarEmojiMetrics=e.measureText(this.avatarEmoji.value)),e.fillText(this.avatarEmoji.value,(this.avatarEmojiMetrics.width-this.stackAvatarWidth)/2+this.avatarEmojiMetrics.actualBoundingBoxLeft,this.avatarEmojiMetrics.actualBoundingBoxAscent)),this.audioMuted||!this.videoMuted){const n=this.stackAvatarHeight/2;if(e.font=n+"px sans-serif",this.audioMuted){const n=e.measureText(mutedSpeaker.value);e.fillText(mutedSpeaker.value,this.stackAvatarWidth-n.width,0)}if(!this.videoMuted){const i=e.measureText(videoCamera.value);e.fillText(videoCamera.value,this.stackAvatarWidth-i.width,n)}}}drawName(e,n,i,o){this.visible&&(e.save(),e.translate(this.x*n.tileWidth+this.stackOffsetX,this.y*n.tileHeight+this.stackOffsetY),e.shadowColor="black",e.shadowOffsetX=3*i,e.shadowOffsetY=3*i,e.shadowBlur=3*i,e.fillStyle="white",e.textBaseline="bottom",e.font=o*devicePixelRatio+"pt sans-serif",e.fillText(this.displayName,0,0),e.restore())}drawHearingTile(e,n,i,o,t){e.save(),e.translate((this.tx+i)*n.tileWidth,(this.ty+o)*n.tileHeight),e.strokeStyle=`rgba(0, 255, 0, ${(1-t)/2})`,e.strokeRect(0,0,n.tileWidth,n.tileHeight),e.restore()}drawHearingRange(e,n,i,o,t){if(this.isInitialized){const a=Math.min(t,Math.ceil(e.canvas.width/(2*n.tileWidth*i))),m=Math.min(t,Math.ceil(e.canvas.height/(2*n.tileHeight*i)));for(let i=0;i<m;++i)for(let m=0;m<a;++m){const a=project(Math.sqrt(m*m+i*i),o,t);a<=1&&(this.drawHearingTile(e,n,m,i,a),0!=i&&this.drawHearingTile(e,n,m,-i,a),0!=m&&this.drawHearingTile(e,n,-m,i,a),0!=m&&0!=i&&this.drawHearingTile(e,n,-m,-i,a))}}}}class UserMoveEvent extends Event{constructor(e){super("userMoved"),this.id=e,this.x=0,this.y=0}set(e,n){this.x=e,this.y=n}}class UserPositionNeededEvent extends Event{constructor(e){super("userPositionNeeded"),this.id=e}}const CAMERA_LERP=.01,CAMERA_ZOOM_MAX=8,CAMERA_ZOOM_MIN=.1,CAMERA_ZOOM_SHAPE=1/4,CAMERA_ZOOM_SPEED=.005,MAX_DRAG_DISTANCE=5,MOVE_REPEAT=.125,isFirefox="undefined"!=typeof InstallTrigger,gameStartedEvt=new Event("gameStarted"),gameEndedEvt=new Event("gameEnded"),zoomChangedEvt$1=new Event("zoomChanged"),emojiNeededEvt=new Event("emojiNeeded"),toggleAudioEvt$1=new Event("toggleAudio"),toggleVideoEvt$1=new Event("toggleVideo"),emoteEvt$1=Object.assign(new Event("emote"),{id:null,emoji:null}),userJoinedEvt=Object.assign(new Event("userJoined",{user:null}));class Game extends EventTarget{constructor(){function e(e){return{id:e.pointerId,buttons:e.buttons,dragDistance:0,x:e.offsetX*devicePixelRatio,y:e.offsetY*devicePixelRatio}}super(),this.element=Canvas(id("frontBuffer"),fillPageStyle,style({touchAction:"none"})),this.gFront=this.element.getContext("2d"),this.me=null,this.map=null,this.keys={},this.userLookup={},this.userList=[],this._loop=this.loop.bind(this),this.lastTime=0,this.lastMove=Number.MAX_VALUE,this.gridOffsetX=0,this.gridOffsetY=0,this.cameraX=this.offsetCameraX=this.targetOffsetCameraX=0,this.cameraY=this.offsetCameraY=this.targetOffsetCameraY=0,this.cameraZ=this.targetCameraZ=1.5,this.currentRoomName=null,this.fontSize=10,this.drawHearing=!1,this.audioDistanceMin=2,this.audioDistanceMax=10,this.rolloff=5,this.pointers=[],this.lastPinchDistance=0,this.canClick=!1,this.currentEmoji=null,this.emotes=[],this.inputBinding={keyButtonUp:"ArrowUp",keyButtonDown:"ArrowDown",keyButtonLeft:"ArrowLeft",keyButtonRight:"ArrowRight",keyButtonEmote:"e",keyButtonToggleAudio:"a",gpButtonUp:12,gpButtonDown:13,gpButtonLeft:14,gpButtonRight:15,gpButtonEmote:0,gpButtonToggleAudio:1},this.gamepadIndex=-1,addEventListener("keydown",e=>{this.keys[e.key]=e,e.ctrlKey||e.altKey||e.shiftKey||e.metaKey||e.key!==this.inputBinding.keyButtonToggleAudio||!this.me||this.toggleMyAudio()}),addEventListener("keyup",e=>{this.keys[e.key]&&delete this.keys[e.key]}),this.element.addEventListener("wheel",e=>{if(!(e.shiftKey||e.altKey||e.ctrlKey||e.metaKey)){const n=e.deltaY*(isFirefox?1:.02);this.zoom(n)}},{passive:!0});const n=e=>this.pointers.findIndex(n=>n.id===e.id),i=e=>{const i=n(e);if(i>-1){const n=this.pointers[i];return this.pointers[i]=e,n}return this.pointers.push(e),null},o=()=>{let e=0;for(let n of this.pointers)1===n.buttons&&++e;return e};this.element.addEventListener("pointerdown",n=>{const t=o(),a=e(n),m=(i(a),o());this.canClick=0===t&&1===m});const t=()=>{if(2!==o())return null;const e=this.pointers.filter(e=>1===e.buttons),n=e[0],i=e[1],t=i.x-n.x,a=i.y-n.y;return Math.sqrt(t*t+a*a)};this.element.addEventListener("pointermove",n=>{const a=t(),m=e(n),s=i(m),r=o(),w=t();if(1===r&&s&&1===m.buttons&&s.buttons===m.buttons){const e=m.x-s.x,n=m.y-s.y,i=Math.sqrt(e*e+n*n);m.dragDistance=s.dragDistance+i,m.dragDistance>5&&(this.targetOffsetCameraX=this.offsetCameraX+=e,this.targetOffsetCameraY=this.offsetCameraY+=n,this.canClick=!1)}if(null!==a&&null!==w){const e=a-w;this.zoom(e/5),this.canClick=!1}}),this.element.addEventListener("pointerup",n=>{const o=e(n);i(o);if(this.me&&o.dragDistance<2){const e=this.getTileAt(o),n=e.x-this.me.tx,i=e.y-this.me.ty;0===n&&0===i?this.emote(this.me.id,this.currentEmoji):this.canClick&&this.moveMeBy(n,i)}}),this.element.addEventListener("pointercancel",i=>{const o=e(i),t=n(o);return t>=0&&this.pointers.removeAt(t),o})}hide(){this.element.hide()}show(){this.element.show()}setOpen(e){this.element.setOpen(e)}updateAudioActivity(e){const n=this.userLookup[e.id];n&&(n.isActive=e.isActive)}emote(e,n){const i=this.userLookup[e];i&&(i.isMe&&((n=n||this.currentEmoji)?(emoteEvt$1.emoji=this.currentEmoji=n,this.dispatchEvent(emoteEvt$1)):this.dispatchEvent(emojiNeededEvt)),n&&this.emotes.push(new Emote(n,i.tx+.5,i.ty)))}getTileAt(e){const n=e.x-this.gridOffsetX-this.offsetCameraX,i=e.y-this.gridOffsetY-this.offsetCameraY,o=n/this.cameraZ,t=i/this.cameraZ,a=o-this.cameraX,m=t-this.cameraY,s=this.map.tileWidth,r=this.map.tileHeight;return{x:Math.floor(a/s),y:Math.floor(m/r)}}moveMeBy(e,n){const i=this.map.getClearTile(this.me.tx,this.me.ty,e,n,this.me.avatarEmoji);this.me.moveTo(i.x,i.y),this.targetOffsetCameraX=0,this.targetOffsetCameraY=0}zoom(e){const n=Math.abs(e);if(0<n&&n<=50){const n=project(this.targetCameraZ,.1,8),i=clamp(Math.pow(n,1/4)-.005*e,0,1),o=Math.pow(i,4);this.targetCameraZ=unproject(o,.1,8),this.dispatchEvent(zoomChangedEvt$1)}}addUser(e){this.userLookup[e.id]&&this.removeUser(e);const n=new User(e.id,e.displayName,!1);this.userLookup[e.id]=n,this.userList.unshift(n),userJoinedEvt.user=n,this.dispatchEvent(userJoinedEvt)}changeUserName(e){const n=this.userLookup[e.id];n&&n.setDisplayName(e.displayName)}toggleMyAudio(){this.dispatchEvent(toggleAudioEvt$1)}toggleMyVideo(){this.dispatchEvent(toggleVideoEvt$1)}muteUserAudio(e){let n=this.me;e.id&&(n=this.userLookup[e.id]),n?n.audioMuted=e.muted:(console.log("no user"),setTimeout(this.muteUserAudio.bind(this,e),1e3))}muteUserVideo(e){let n=this.me;e.id&&(n=this.userLookup[e.id]),n?n.videoMuted=e.muted:(console.log("no user"),setTimeout(this.muteUserVideo.bind(this,e),1e3))}removeUser(e){const n=this.userLookup[e.id];if(n){delete this.userLookup[e.id];const i=this.userList.indexOf(n);i>=0&&this.userList.removeAt(i)}}setAvatarURL(e){if(e){const n=this.userLookup[e.id];n&&n.setAvatarURL(e.avatarURL)}}setAvatarEmoji(e){if(e){const n=this.userLookup[e.id];n&&(n.avatarEmoji=e)}}async start(e){this.currentRoomName=e.roomName.toLowerCase(),this.me=new User(e.id,e.displayName,!0),this.userList.push(this.me),this.userLookup[this.me.id]=this.me,this.setAvatarURL(e),this.map=new TileMap(this.currentRoomName);let n=!1;for(let e=0;e<2;++e)try{await this.map.load(),n=!0}catch(e){console.warn(e),this.map=new TileMap("default")}n||console.error("Couldn't load any maps!"),this.startLoop(),this.dispatchEvent(zoomChangedEvt$1),this.dispatchEvent(gameStartedEvt)}startLoop(){this.element.show(),this.element.resize(),this.element.focus(),requestAnimationFrame(e=>{this.lastTime=e,requestAnimationFrame(this._loop)})}resize(e){void 0!==e&&(this.element.style.top=e+"px",this.element.style.height=`calc(100% - ${e}px)`),this.element.resize()}loop(e){if(null!==this.currentRoomName){requestAnimationFrame(this._loop);const n=e-this.lastTime;this.lastTime=e,this.update(n/1e3),this.render()}}end(){this.currentRoomName=null,this.map=null,this.userLookup={},this.userList.clear(),this.me=null,this.dispatchEvent(gameEndedEvt)}update(e){if(this.gridOffsetX=Math.floor(.5*this.element.width/this.map.tileWidth)*this.map.tileWidth,this.gridOffsetY=Math.floor(.5*this.element.height/this.map.tileHeight)*this.map.tileHeight,this.lastMove+=e,this.lastMove>=.125){let e=0,n=0;for(let i of Object.values(this.keys))if(!(i.altKey||i.shiftKey||i.ctrlKey||i.metaKey))switch(i.key){case this.inputBinding.keyButtonUp:n--;break;case this.inputBinding.keyButtonDown:n++;break;case this.inputBinding.keyButtonLeft:e--;break;case this.inputBinding.keyButtonRight:e++;break;case this.inputBinding.keyButtonEmote:this.emote(this.me.id,this.currentEmoji)}const i=GamepadManager.gamepads[this.gamepadIndex];i&&(i.buttons[this.inputBinding.gpButtonEmote].pressed&&this.emote(this.me.id,this.currentEmoji),!lastPad.buttons[this.inputBinding.gpButtonToggleAudio].pressed&&i.buttons[this.inputBinding.gpButtonToggleAudio].pressed&&this.toggleMyAudio(),i.buttons[this.inputBinding.gpButtonUp].pressed?--n:i.buttons[this.inputBinding.gpButtonDown].pressed&&++n,i.buttons[this.inputBinding.gpButtonLeft].pressed?--e:i.buttons[this.inputBinding.gpButtonRight].pressed&&++e,e+=Math.round(i.axes[0]),n+=Math.round(i.axes[1]),this.targetOffsetCameraX+=-50*Math.round(2*i.axes[2]),this.targetOffsetCameraY+=-50*Math.round(2*i.axes[3]),this.zoom(2*(i.buttons[6].value-i.buttons[7].value))),e=clamp(e,-1,1),n=clamp(n,-1,1),0===e&&0===n||this.moveMeBy(e,n),this.lastMove=0}for(let n of this.emotes)n.update(e);this.emotes=this.emotes.filter(e=>!e.isDead());for(let n of this.userList)n.update(e,this.map,this.userList)}render(){const e=-this.me.x*this.map.tileWidth,n=-this.me.y*this.map.tileHeight;this.cameraZ=lerp(this.cameraZ,this.targetCameraZ,.1),this.cameraX=lerp(this.cameraX,e,.01*this.cameraZ),this.cameraY=lerp(this.cameraY,n,.01*this.cameraZ),this.offsetCameraX=lerp(this.offsetCameraX,this.targetOffsetCameraX,.01),this.offsetCameraY=lerp(this.offsetCameraY,this.targetOffsetCameraY,.01),this.gFront.resetTransform(),this.gFront.imageSmoothingEnabled=!1,this.gFront.clearRect(0,0,this.element.width,this.element.height),this.gFront.save(),this.gFront.translate(this.gridOffsetX+this.offsetCameraX,this.gridOffsetY+this.offsetCameraY),this.gFront.scale(this.cameraZ,this.cameraZ),this.gFront.translate(this.cameraX,this.cameraY),this.map.draw(this.gFront);for(let e of this.userList)e.drawShadow(this.gFront,this.map,this.cameraZ);for(let e of this.emotes)e.drawShadow(this.gFront,this.map,this.cameraZ);for(let e of this.userList)e.drawAvatar(this.gFront,this.map);this.drawCursor();for(let e of this.userList)e.drawName(this.gFront,this.map,this.cameraZ,this.fontSize);this.drawHearing&&this.me.drawHearingRange(this.gFront,this.map,this.cameraZ,this.audioDistanceMin,this.audioDistanceMax);for(let e of this.emotes)e.drawEmote(this.gFront,this.map);this.gFront.restore()}drawCursor(){if(1===this.pointers.length){const e=this.pointers[0],n=this.getTileAt(e);this.gFront.strokeStyle="red",this.gFront.strokeRect(n.x*this.map.tileWidth,n.y*this.map.tileHeight,this.map.tileWidth,this.map.tileHeight)}}}const selfs$2=new Map,KEY="CallaSettings",DEFAULT_SETTINGS={drawHearing:!1,audioDistanceMin:1,audioDistanceMax:10,audioRolloff:1,fontSize:12,zoom:1.5,roomName:"calla",userName:"",avatarEmoji:null,gamepadIndex:0,inputBinding:{keyButtonUp:"ArrowUp",keyButtonDown:"ArrowDown",keyButtonLeft:"ArrowLeft",keyButtonRight:"ArrowRight",keyButtonEmote:"e",keyButtonToggleAudio:"a",gpButtonUp:12,gpButtonDown:13,gpButtonLeft:14,gpButtonRight:15,gpButtonEmote:0,gpButtonToggleAudio:1}};function commit(e){const n=selfs$2.get(e);localStorage.setItem(KEY,JSON.stringify(n))}function load(){const e=localStorage.getItem(KEY);if(e)return Object.assign({},DEFAULT_SETTINGS,JSON.parse(e))}class Settings{constructor(){const e=Object.seal(load()||DEFAULT_SETTINGS);selfs$2.set(this,e),window.location.hash.length>0&&(e.roomName=window.location.hash.substring(1)),Object.seal(this)}get drawHearing(){return selfs$2.get(this).drawHearing}set drawHearing(e){e!==this.drawHearing&&(selfs$2.get(this).drawHearing=e,commit(this))}get audioDistanceMin(){return selfs$2.get(this).audioDistanceMin}set audioDistanceMin(e){e!==this.audioDistanceMin&&(selfs$2.get(this).audioDistanceMin=e,commit(this))}get audioDistanceMax(){return selfs$2.get(this).audioDistanceMax}set audioDistanceMax(e){e!==this.audioDistanceMax&&(selfs$2.get(this).audioDistanceMax=e,commit(this))}get audioRolloff(){return selfs$2.get(this).audioRolloff}set audioRolloff(e){e!==this.audioRolloff&&(selfs$2.get(this).audioRolloff=e,commit(this))}get fontSize(){return selfs$2.get(this).fontSize}set fontSize(e){e!==this.fontSize&&(selfs$2.get(this).fontSize=e,commit(this))}get zoom(){return selfs$2.get(this).zoom}set zoom(e){e!==this.zoom&&(selfs$2.get(this).zoom=e,commit(this))}get userName(){return selfs$2.get(this).userName}set userName(e){e!==this.userName&&(selfs$2.get(this).userName=e,commit(this))}get avatarEmoji(){return selfs$2.get(this).avatarEmoji}set avatarEmoji(e){e!==this.avatarEmoji&&(selfs$2.get(this).avatarEmoji=e,commit(this))}get roomName(){return selfs$2.get(this).roomName}set roomName(e){e!==this.roomName&&(selfs$2.get(this).roomName=e,commit(this))}get gamepadIndex(){return selfs$2.get(this).gamepadIndex}set gamepadIndex(e){e!==this.gamepadIndex&&(selfs$2.get(this).gamepadIndex=e,commit(this))}get inputBinding(){return selfs$2.get(this).inputBinding}set inputBinding(e){e!==this.inputBinding&&(selfs$2.get(this).inputBinding=e,commit(this))}}class BaseAudioClient extends EventTarget{constructor(){super()}setLocalPosition(e){throw new Error("Not implemented in base class")}setUserPosition(e){throw new Error("Not implemented in base class")}setAudioProperties(e){throw new Error("Not implemented in base class")}removeUser(e){throw new Error("Not implemented in base class")}}const APP_FINGERPRINT$1=window.APP_FINGERPRINT="Calla",eventNames$1=["userMoved","emote","userInitRequest","userInitResponse","audioMuteStatusChanged","videoMuteStatusChanged","localAudioMuteStatusChanged","localVideoMuteStatusChanged","remoteAudioMuteStatusChanged","remoteVideoMuteStatusChanged","videoConferenceJoined","videoConferenceLeft","participantJoined","participantLeft","avatarChanged","displayNameChange","audioActivity","setAvatarEmoji","deviceListChanged","participantRoleChanged"];class BaseJitsiClient extends EventTarget{constructor(){super(),this.element=Div(id("jitsi"),style({position:"absolute",left:0,top:0,width:"100%",height:"100%",margin:0,padding:0,overflow:"hidden"})),this.localUser=null,this.otherUsers=new Map,this.audioClient=null,this.preInitEvtQ=[]}hide(){this.element.hide()}show(){this.element.show()}resize(e){void 0!==e&&(this.element.style.top=e+"px",this.element.style.height=`calc(100% - ${e}px)`)}async initializeAsync(e,n,i){throw new Error("Not implemented in base class.")}dispatchEvent(e){if(null!==this.localUser)null!==e.id&&void 0!==e.id&&"local"!==e.id||(e.id=this.localUser),super.dispatchEvent(e),"videoConferenceLeft"===e.type&&(this.localUser=null);else if("videoConferenceJoined"===e.type){for(e of(this.localUser=e.id,this.dispatchEvent(e),this.preInitEvtQ))this.dispatchEvent(e);this.preInitEvtQ.clear()}else this.preInitEvtQ.push(e)}async joinAsync(e,n,i){this.dispose();const o=this.once("videoConferenceJoined");await this.initializeAsync(e,n,i),this.addEventListener("participantJoined",e=>{this.otherUsers.set(e.id,e.displayName)}),this.addEventListener("participantLeft",e=>{this.otherUsers.has(e.id)&&this.otherUsers.delete(e.id)}),this.addEventListener("displayNameChange",e=>{e.id!==this.localUser&&this.otherUsers.set(e.id,e.displayname)});const t=e=>n=>{const i=n.id===this.localUser||null===n.id||void 0===n.id,o=Object.assign(new Event((i?"local":"remote")+e+"MuteStatusChanged"),{id:i?this.localUser:n.id,muted:n.muted});this.dispatchEvent(o)};this.addEventListener("audioMuteStatusChanged",t("Audio")),this.addEventListener("videoMuteStatusChanged",t("Video")),this.addEventListener("localAudioMuteStatusChanged",e=>{this.audioMuteStatusChanged(e.muted)}),this.addEventListener("localVideoMuteStatusChanged",e=>{this.videoMuteStatusChanged(e.muted)}),window.addEventListener("unload",()=>{this.dispose()});const a=await o;return this.setDisplayName(i),a}dispose(){}setDisplayName(e){throw new Error("Not implemented in base class")}async leaveAsync(){throw new Error("Not implemented in base class")}async getAudioOutputDevicesAsync(){throw new Error("Not implemented in base class")}async getCurrentAudioOutputDeviceAsync(){throw new Error("Not implemented in base class")}setAudioOutputDevice(e){throw new Error("Not implemented in base class")}async getAudioInputDevicesAsync(){throw new Error("Not implemented in base class")}async getCurrentAudioInputDeviceAsync(){throw new Error("Not implemented in base class")}async setAudioInputDeviceAsync(e){throw new Error("Not implemented in base class")}async getVideoInputDevicesAsync(){throw new Error("Not implemented in base class")}async getCurrentVideoInputDeviceAsync(){throw new Error("Not implemented in base class")}async setVideoInputDeviceAsync(e){throw new Error("Not implemented in base class")}async toggleAudioAsync(){throw new Error("Not implemented in base class")}async toggleVideoAsync(){throw new Error("Not implemented in base class")}setAvatarURL(e){throw new Error("Not implemented in base class")}async isAudioMutedAsync(){throw new Error("Not implemented in base class")}async isVideoMutedAsync(){throw new Error("Not implemented in base class")}txGameData(e,n){throw new Error("Not implemented in base class")}rxGameData(e){throw new Error("Not implemented in base class")}sendMessageTo(e,n,i){this.txGameData(e,{hax:APP_FINGERPRINT$1,command:n,value:i})}receiveMessageFrom(e,n,i){const o=new JitsiClientEvent(n,e,i);this.dispatchEvent(o)}setAudioProperties(e,n,i,o,t){const a={origin:e,transitionTime:n,minDistance:i,maxDistance:o,rolloff:t};this.audioClient.setAudioProperties(a)}setLocalPosition(e){this.audioClient.setLocalPosition(e);for(let n of this.otherUsers.keys())this.sendMessageTo(n,"userMoved",e)}setUserPosition(e){this.audioClient.setUserPosition(e)}removeUser(e){this.audioClient.removeUser(e)}async setAudioMutedAsync(e){let n=await this.isAudioMutedAsync();return e!==n&&(n=await this.toggleAudioAsync()),n}async setVideoMutedAsync(e){let n=await this.isVideoMutedAsync();return e!==n&&(n=await this.toggleVideoAsync()),n}addEventListener(e,n,i){if(-1===eventNames$1.indexOf(e))throw new Error("Unsupported event type: "+e);super.addEventListener(e,n,i)}userInitRequest(e){this.sendMessageTo(e,"userInitRequest")}async userInitRequestAsync(e){return await this.until("userInitResponse",()=>this.userInitRequest(e),n=>n.id===e,1e3)}userInitResponse(e,n){this.sendMessageTo(e,"userInitResponse",n)}setAvatarEmoji(e){for(let n of this.otherUsers.keys())this.sendMessageTo(n,"setAvatarEmoji",e)}emote(e){for(let n of this.otherUsers.keys())this.sendMessageTo(n,"emote",e)}audioMuteStatusChanged(e){const n={muted:e};for(let e of this.otherUsers.keys())this.sendMessageTo(e,"audioMuteStatusChanged",n)}videoMuteStatusChanged(e){const n={muted:e};for(let e of this.otherUsers.keys())this.sendMessageTo(e,"videoMuteStatusChanged",n)}}class JitsiClientEvent extends Event{constructor(e,n,i){super(e),this.id=n,Event.clone(this,i)}}function init(e,n){const i=new Settings,o=new Game,t=new LoginForm,a=new ToolBar,m=new OptionsForm,s=new EmojiForm,r=new InstructionsForm,w={settings:i,client:n,game:o,login:t,toolbar:a,options:m,emoji:s,instructions:r};for(let e of Object.values(w))e.element&&document.body.append(e.element);function l(){n.hide(),o.hide(),a.hide(),m.hide(),s.hide(),r.hide(),t.show()}async function u(e){if(!s.isOpen()){a.optionsButton.lock(),a.instructionsButton.lock(),m.hide(),r.hide();const n=await s.selectAsync();n&&e(n),a.optionsButton.unlock(),a.instructionsButton.unlock()}}async function g(){await u(e=>{o.emote(n.localUser,e),a.setEmojiButton(i.inputBinding.keyButtonEmote,e)})}function d(){n.setAudioProperties(window.location.origin,.125,i.audioDistanceMin=o.audioDistanceMin=m.audioDistanceMin,i.audioDistanceMax=o.audioDistanceMax=m.audioDistanceMax,i.audioRolloff=m.audioRolloff)}function h(){m.gamepads=GamepadManager.gamepads}return h(),m.drawHearing=o.drawHearing=i.drawHearing,m.audioDistanceMin=o.audioDistanceMin=i.audioDistanceMin,m.audioDistanceMax=o.audioDistanceMax=i.audioDistanceMax,m.audioRolloff=i.audioRolloff,m.fontSize=o.fontSize=i.fontSize,m.gamepadIndex=o.gamepadIndex=i.gamepadIndex,m.inputBinding=o.inputBinding=i.inputBinding,a.zoom=o.cameraZ=o.targetCameraZ=i.zoom,t.userName=i.userName,t.roomName=i.roomName,l(),window.addEventListeners({resize:()=>{o.resize(a.offsetHeight),n.resize(a.offsetHeight)},gamepadconnected:h,gamepaddisconnected:h}),a.addEventListeners({toggleAudio:()=>{n.toggleAudioAsync()},selectEmoji:g,emote:()=>{o.emote(n.localUser,o.currentEmoji)},zoomChanged:()=>{i.zoom=o.targetCameraZ=a.zoom},toggleOptions:()=>{s.isOpen()||(r.hide(),m.toggleOpen())},toggleInstructions:()=>{s.isOpen()||(m.hide(),r.toggleOpen())},tweet:()=>{const e=encodeURIComponent("Join my #TeleParty "+document.location.href),n=new URL("https://twitter.com/intent/tweet?text="+e);open(n)},leave:()=>{o.end()},toggleUI:()=>{o.setOpen(a.visible),o.resize(a.offsetHeight),n.resize(a.offsetHeight)}}),t.addEventListener("login",()=>{n.joinAsync(e,i.roomName=t.roomName,i.userName=t.userName)}),m.addEventListeners({selectAvatar:async()=>{u(e=>{i.avatarEmoji=m.avatarEmoji=o.me.avatarEmoji=e,n.setAvatarEmoji(e)})},avatarURLChanged:()=>{n.setAvatarURL(m.avatarURL)},audioPropertiesChanged:d,toggleVideo:()=>{n.toggleVideoAsync()},toggleDrawHearing:()=>{i.drawHearing=o.drawHearing=m.drawHearing},fontSizeChanged:()=>{i.fontSize=o.fontSize=m.fontSize},audioInputChanged:()=>{n.setAudioInputDeviceAsync(m.currentAudioInputDevice)},audioOutputChanged:()=>{n.setAudioOutputDevice(m.currentAudioOutputDevice)},videoInputChanged:()=>{n.setVideoInputDeviceAsync(m.currentVideoInputDevice)},gamepadChanged:()=>{i.gamepadIndex=o.gamepadIndex=m.gamepadIndex},inputBindingChanged:()=>{i.inputBinding=o.inputBinding=m.inputBinding}}),o.addEventListeners({emote:e=>{n.emote(e.emoji)},userJoined:e=>{e.user.addEventListener("userPositionNeeded",e=>{n.userInitRequest(e.id)})},toggleAudio:()=>{n.toggleAudioAsync()},toggleVideo:()=>{n.toggleVideoAsync()},gameStarted:()=>{t.hide(),a.show(),n.show(),d(),n.setLocalPosition(o.me),o.me.addEventListener("userMoved",e=>{n.setLocalPosition(e)}),null!==i.avatarEmoji&&(o.me.avatarEmoji=i.avatarEmoji),i.avatarEmoji=m.avatarEmoji=o.me.avatarEmoji},gameEnded:()=>{o.hide(),n.hide(),t.connected=!1,l()},emojiNeeded:g,zoomChanged:()=>{i.zoom=a.zoom=o.targetCameraZ}}),n.addEventListeners({videoConferenceJoined:async e=>{t.connected=!0,window.location.hash=t.roomName,o.start(e),m.audioInputDevices=await n.getAudioInputDevicesAsync(),m.audioOutputDevices=await n.getAudioOutputDevicesAsync(),m.videoInputDevices=await n.getVideoInputDevicesAsync(),m.currentAudioInputDevice=await n.getCurrentAudioInputDeviceAsync(),m.currentAudioOutputDevice=await n.getCurrentAudioOutputDeviceAsync(),m.currentVideoInputDevice=await n.getCurrentVideoInputDeviceAsync();const i=await n.isAudioMutedAsync();o.muteUserAudio({id:n.localUser,muted:i}),a.audioEnabled=!i;const s=await n.isVideoMutedAsync();o.muteUserVideo({id:n.localUser,muted:s}),m.videoEnabled=!s},videoConferenceLeft:e=>{e.roomName.toLowerCase()===o.currentRoomName&&o.end()},participantJoined:e=>{o.addUser(e)},participantLeft:e=>{o.removeUser(e),n.removeUser(e)},avatarChanged:e=>{o.setAvatarURL(e),e.id===n.localUser&&(m.avatarURL=e.avatarURL)},displayNameChange:e=>{o.changeUserName(e)},audioMuteStatusChanged:e=>{o.muteUserAudio(e)},localAudioMuteStatusChanged:async e=>{a.audioEnabled=!e.muted,e.muted||(m.currentAudioInputDevice=await n.getCurrentAudioInputDeviceAsync())},videoMuteStatusChanged:e=>{o.muteUserVideo(e)},localVideoMuteStatusChanged:async e=>{m.videoEnabled=!e.muted,e.muted?m.currentVideoInputDevice=null:m.currentVideoInputDevice=await n.getCurrentVideoInputDeviceAsync()},userInitRequest:e=>{o.me&&o.me.id?n.userInitResponse(e.id,o.me):console.log("Local user not initialized")},userInitResponse:e=>{const i=o.userLookup[e.id];i&&(i.init(e),n.setUserPosition(e))},userMoved:e=>{const i=o.userLookup[e.id];i&&(i.moveTo(e.x,e.y),n.setUserPosition(e))},emote:e=>{o.emote(e.id,e)},setAvatarEmoji:e=>{o.setAvatarEmoji(e)},audioActivity:e=>{o.updateAudioActivity(e)}}),t.ready=!0,w}class ExternalJitsiAudioClient extends BaseAudioClient{constructor(e,n,i){super(),this.host=e,this.apiOrigin=n,this.apiWindow=i,window.addEventListener("message",e=>{this.rxJitsiHax(e)})}txJitsiHax(e,n){if(this.apiWindow){const i={hax:APP_FINGERPRINT,command:e,value:n};try{this.apiWindow.postMessage(JSON.stringify(i),this.apiOrigin)}catch(e){console.error(e)}}}rxJitsiHax(e){const n=e.origin.match(/^https?:\/\/localhost\b/);if(e.origin==="https://"+this.host||n)try{const n=JSON.parse(e.data);if(n.hax===APP_FINGERPRINT){const e=new AudioClientEvent(n);this.dispatchEvent(e)}}catch(e){console.error(e)}}setLocalPosition(e){this.txJitsiHax("setLocalPosition",e)}setUserPosition(e){this.txJitsiHax("setUserPosition",e)}setAudioProperties(e){this.txJitsiHax("setAudioProperties",e)}removeUser(e){this.txJitsiHax("removeUser",e)}}class AudioClientEvent extends Event{constructor(e){super(e.command),Event.clone(this,e.value)}}class ExternalJitsiClient extends BaseJitsiClient{constructor(){super(),this.api=null,Object.seal(this)}dispose(){null!==this.api&&(this.api.dispose(),this.api=null)}async initializeAsync(e,n,i){return await import(`https://${e}/libs/external_api.min.js`),new Promise(i=>{this.api=new JitsiMeetExternalAPI(e,{parentNode:this.element,roomName:n,onload:()=>{const n=this.api.getIFrame();this.audioClient=new ExternalJitsiAudioClient(e,new URL(n.src).origin,n.contentWindow),this.audioClient.addEventListener("audioActivity",e=>{const n=Event.clone(new Event("audioActivity"),e);this.dispatchEvent(n)}),i()},noSSL:!1,width:"100%",height:"100%",configOverwrite:{startVideoMuted:0,startWithVideoMuted:!0},interfaceConfigOverwrite:{DISABLE_VIDEO_BACKGROUND:!0,SHOW_JITSI_WATERMARK:!1,SHOW_WATERMARK_FOR_GUESTS:!1,SHOW_POWERED_BY:!0,AUTHENTICATION_ENABLE:!1,MOBILE_APP_PROMO:!1}});const o=(e,n)=>{n=n||(()=>!0),this.api.addEventListener(e,i=>{if(n(i)){const n=Event.clone(new Event(e),i);"displayNameChange"===e&&("local"===n.id&&(n.id=null),void 0!==n.displayname&&(n.displayName=n.displayname)),this.dispatchEvent(n)}})};o("videoConferenceJoined"),o("videoConferenceLeft"),o("participantJoined",e=>"local"!==e.id),o("participantLeft"),o("avatarChanged",e=>void 0!==e.avatarURL),o("displayNameChange"),o("audioMuteStatusChanged"),o("videoMuteStatusChanged"),o("participantRoleChanged"),this.api.addEventListener("endpointTextMessageReceived",e=>{this.rxGameData(e)})})}setDisplayName(e){this.api.executeCommand("displayName",e)}async leaveAsync(){const e=this.once("videoConferenceLeft",5e3);this.api.executeCommand("hangup"),await e}async getAudioOutputDevicesAsync(){const e=await this.api.getAvailableDevices();return e&&e.audioOutput||[]}async getCurrentAudioOutputDeviceAsync(){const e=await this.api.getCurrentDevices();return e&&e.audioOutput||null}setAudioOutputDevice(e){this.api.setAudioOutputDevice(e.label,e.id)}async getAudioInputDevicesAsync(){const e=await this.api.getAvailableDevices();return e&&e.audioInput||[]}async getCurrentAudioInputDeviceAsync(){const e=await this.api.getCurrentDevices();return e&&e.audioInput||null}async setAudioInputDeviceAsync(e){if(await this.isAudioMutedAsync()){const e=this.once("localAudioMuteStatusChanged",5e3);await this.setAudioMutedAsync(!1),await e}this.api.setAudioInputDevice(e.label,e.id)}async getVideoInputDevicesAsync(){const e=await this.api.getAvailableDevices();return e&&e.videoInput||[]}async getCurrentVideoInputDeviceAsync(){const e=await this.api.getCurrentDevices();return e&&e.videoInput||null}async setVideoInputDeviceAsync(e){if(await this.isVideoMutedAsync()){const e=this.once("localVideoMuteStatusChanged",5e3);await this.setVideoMutedAsync(!1),await e}this.api.setVideoInputDevice(e.label,e.id)}async toggleAudioAsync(){const e=this.once("localAudioMuteStatusChanged",5e3);return this.api.executeCommand("toggleAudio"),await e}async toggleVideoAsync(){const e=this.once("localVideoMuteStatusChanged",5e3);return this.api.executeCommand("toggleVideo"),await e}setAvatarURL(e){this.api.executeCommand("avatarUrl",e)}async isAudioMutedAsync(){return await this.api.isAudioMuted()}async isVideoMutedAsync(){return await this.api.isVideoMuted()}txGameData(e,n){this.api.executeCommand("sendEndpointTextMessage",e,JSON.stringify(n))}rxGameData(e){const n=JSON.parse(e.data.eventData.text);n.hax===APP_FINGERPRINT&&this.receiveMessageFrom(e.data.senderInfo.id,n.command,n.value)}}const{toolbar:toolbar,login:login}=init(JITSI_HOST,new ExternalJitsiClient);function adLink(e,n,i){return A(href(e),target("_blank"),rel("noopener"),ariaLabel(n.replace("GitHub","Git Hub")),title(n),Span(className("icon icon-"+i),role("presentation")))}toolbar.append(adLink("https://github.com/capnmidnight/Calla","Follow Calla on GitHub","github"),adLink("https://twitter.com/Sean_McBeth","Follow Sean on Twitter","twitter")),login.content.append(H2("Made by"),P(adLink("https://www.seanmcbeth.com","Sean T. McBeth","shrink"),"Sean T. McBeth"),P(adLink("https://twitter.com/Sean_McBeth","Follow Sean on Twitter","twitter"),"Follow @Sean_McBeth on Twitter"));
