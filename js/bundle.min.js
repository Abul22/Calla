class HtmlAttr{constructor(e,t,i){t=t.map(e=>e.toLocaleUpperCase()),this.apply=n=>{0===t.length||t.indexOf(n.tagName)>-1?"style"===e?Object.assign(n[e],i):("boolean"==typeof i||i instanceof Boolean)&&"muted"!==e?i?n.setAttribute(e,""):n.removeAttribute(e):n[e]=i:console.warn(`Element ${n.tagName} does not support Attribute ${e}`)},Object.freeze(this)}}function alt(e){return new HtmlAttr("alt",["applet","area","img","input"],e)}function ariaLabel(e){return new HtmlAttr("ariaLabel",[],e)}function autoPlay(e){return new HtmlAttr("autoplay",["audio","video"],e)}function className(e){return new HtmlAttr("className",[],e)}function htmlFor(e){return new HtmlAttr("htmlFor",["label","output"],e)}function href(e){return new HtmlAttr("href",["a","area","base","link"],e)}function id(e){return new HtmlAttr("id",[],e)}function max(e){return new HtmlAttr("max",["input","meter","progress"],e)}function min(e){return new HtmlAttr("min",["input","meter"],e)}function muted(e){return new HtmlAttr("muted",["audio","video"],e)}function placeHolder(e){return new HtmlAttr("placeholder",["input","textarea"],e)}function rel(e){return new HtmlAttr("rel",["a","area","link"],e)}function role(e){return new HtmlAttr("role",[],e)}function src(e){return new HtmlAttr("src",["audio","embed","iframe","img","input","script","source","track","video"],e)}function srcObject(e){return new HtmlAttr("srcObject",["audio","video"],e)}function style(e){return new HtmlAttr("style",[],e)}function step(e){return new HtmlAttr("step",["input"],e)}function title(e){return new HtmlAttr("title",[],e)}function target(e){return new HtmlAttr("target",["a","area","base","form"],e)}function type(e){return new HtmlAttr("type",["button","input","command","embed","object","script","source","style","menu"],e)}function value(e){return new HtmlAttr("value",["button","data","input","li","meter","option","progress","param"],e)}const monospaceFamily="'Droid Sans Mono', 'Consolas', 'Lucida Console', 'Courier New', 'Courier', monospace",monospaceFont=style({fontFamily:monospaceFamily});function row(e,t){return void 0===t&&(t=1),style({gridRowStart:e,gridRowEnd:e+t})}function grid(e,t,i,n){return void 0===i&&(i=1),void 0===n&&(n=1),style({gridRowStart:t,gridRowEnd:t+n,gridColumnStart:e,gridColumnEnd:e+i})}function t(e,t,i){return typeof e===t||e instanceof i}function isFunction(e){return t(e,"function",Function)}function isString(e){return t(e,"string",String)}function isNumber(e){return t(e,"number",Number)}function isBoolean(e){return t(e,"boolean",Boolean)}function isGoodNumber(e){return isNumber(e)&&!Number.isNaN(e)}function clamp(e,t,i){return Math.min(i,Math.max(t,e))}function project(e,t,i){return(e-t)/(i-t)}function unproject(e,t,i){return e*(i-t)+t}function lerp(e,t,i){return(1-i)*e+i*t}Element.prototype.isOpen=function(){return"none"!==this.style.display},Element.prototype.setOpen=function(e,t=""){this.style.display=e?t:"none"},Element.prototype.setOpenWithLabel=function(e,t,i,n,s,a=""){this.setOpen(e,a),t.updateLabel(this.isOpen(),i,n,s)},Element.prototype.updateLabel=function(e,t,i,n){n=n||"",this.accessKey&&(n+=` <kbd>(ALT+${this.accessKey.toUpperCase()})</kbd>`),this.innerHTML=(e?t:i)+n},Element.prototype.toggleOpen=function(e=""){this.setOpen(!this.isOpen(),e)},Element.prototype.toggleOpenWithLabel=function(e,t,i,n,s=""){this.setOpenWithLabel(!this.isOpen(),e,t,i,n,s)},Element.prototype.show=function(e=""){this.setOpen(!0,e)},Element.prototype.hide=function(){this.setOpen(!1)},Element.prototype.setLocked=function(e){e?this.lock():this.unlock()},Element.prototype.lock=function(){this.disabled="disabled"},Element.prototype.unlock=function(){this.disabled=""},Element.prototype.blinkBorder=function(e,t){e=2*(e||3),t=t||"rgb(255, 127, 127)";let i=!1;const n=setInterval(()=>{i=!i,this.style.backgroundColor=i?t:"",0===--e&&clearInterval(n)},125)},HTMLCanvasElement.prototype.resize=function(){this.width=this.clientWidth*devicePixelRatio,this.height=this.clientHeight*devicePixelRatio};const oldAddEventListener=HTMLInputElement.prototype.addEventListener;function add(e,t){return i=>{e(i),t(i)}}HTMLInputElement.prototype.addEventListener=function(e,t,i){"enter"===e?oldAddEventListener.call(this,"keypress",(function(e){"Enter"===e.key&&t(e)}),i):oldAddEventListener.call(this,e,t,i)},Response.prototype.xml=async function(){const e=await this.text();return(new DOMParser).parseFromString(e,"text/xml").documentElement},Response.prototype.html=async function(){const e=await this.text();return(new DOMParser).parseFromString(e,"text/html").documentElement},Array.prototype.random=function(e){const t=e?1:0,i=Math.floor(Math.random()*(this.length+t))-t;return i<0?e:this[i]},HTMLSelectElement.prototype.setSelectedValue=function(e){if(this.value="",null!=e){e=e.toString();for(let t of this.options)if(t.value===e)return void(this.value=e)}},Storage.prototype.getInt=function(e,t){const i=parseFloat(this.getItem(e));return Number.isInteger(i)?i:t},Event.clone=function(e,...t){for(let i of t)for(let t in i)"isTrusted"===t||Event.prototype.hasOwnProperty(t)||(e[t]=i[t]);return e},EventTarget.prototype.once=function(e,t,i){return void 0===i&&isGoodNumber(t)&&(i=t,t=void 0),new Promise((n,s)=>{const a=isString(e);if(a){const t=n,i=()=>{this.removeEventListener(e,t)};n=add(i,n),s=add(i,s)}const o=isString(t);if(o){const e=s,i=()=>{this.removeEventListener(t,e)};n=add(i,n),s=add(i,s)}if(isNumber(i)){const t=setTimeout(s,i,`'${e}' has timed out.`),a=()=>clearTimeout(t);n=add(a,n),s=add(a,s)}a&&this.addEventListener(e,n),o&&this.addEventListener(t,()=>{s("Rejection event found")})})},EventTarget.prototype.when=function(e,t,i){if(!isString(e))throw new Error("Filtering tests function is required. Otherwise, use `once`.");if(!isFunction(t))throw new Error("Filtering tests function is required. Otherwise, use `once`.");return new Promise((t,n)=>{const s=()=>{this.removeEventListener(e,t)};if(t=add(s,t),n=add(s,n),isNumber(i)){const s=setTimeout(n,i,`'${e}' has timed out.`),a=()=>clearTimeout(s);t=add(a,t),n=add(a,n)}this.addEventListener(e,t)})},EventTarget.prototype.until=function(e,t,i,n,s){return new Promise((a,o)=>{let r=null,l=null;const c=()=>{null!==r&&clearTimeout(r),null!==l&&clearTimeout(l),this.removeEventListener(e,u)};function u(e){i(e)&&(c(),a(e))}if(this.addEventListener(e,u),void 0!==n){void 0!==s&&(l=setTimeout(()=>{c(),o(`'${e}' has timed out.`)},s)),r=setTimeout((function e(){t(),r=setTimeout(e,n)}),0)}})},EventTarget.prototype.addEventListeners=function(e){for(let t in e){let i=e[t],n=void 0;i instanceof Array&&(n=i[1],i=i[0]),this.addEventListener(t,i,n)}},Array.prototype.clear=function(){this.splice(0)},Array.prototype.removeAt=function(e){this.splice(e,1)},Array.prototype.scan=function(...e){for(let t of e){const e=this.filter(t);if(e.length>0)return e[0]}return null},String.prototype.firstLetterToUpper=function(){return this[0].toLocaleUpperCase()+this.substring(1)};class HtmlEvt{constructor(e,t,i){if(!isFunction(t))throw new Error("A function instance is required for this parameter");this.add=n=>{n.addEventListener(e,t,i)},this.remove=i=>{i.removeEventListener(e,t)},Object.freeze(this)}}function onClick(e){return new HtmlEvt("click",e)}function onInput(e){return new HtmlEvt("input",e)}function onKeyUp(e){return new HtmlEvt("keyup",e)}function tag(e,...t){const i=document.createElement(e);for(let e=0;e<t.length;++e)isFunction(t[e])&&(t[e]=t[e](!0));for(let e of t)null!=e&&(isString(e)||isNumber(e)||isBoolean(e)||e instanceof Date?i.appendChild(document.createTextNode(e)):e instanceof Element?i.appendChild(e):e instanceof HtmlCustomTag?i.appendChild(e.element):e instanceof HtmlAttr?e.apply(i):e instanceof HtmlEvt?e.add(i):console.trace(`Skipping ${e}: unsupported value type.`));return i}class HtmlCustomTag extends EventTarget{constructor(e,...t){super(),1===t.length&&t[0]instanceof Element?this.element=t[0]:this.element=tag(e,...t)}get id(){return this.element.id}}class LabeledInputTag extends HtmlCustomTag{constructor(e,t,i,...n){super("div"),this.label=Label(htmlFor(e),i),this.input=Input(type(t),...n),this.element.append(this.label,this.input),Object.seal(this)}addEventListener(e,t,i){this.input.addEventListener(e,t,i)}removeEventListener(e,t){this.input.removeEventListener(e,t)}async once(e,t,i){return await this.input.once(e,t,i)}get value(){return this.input.value}set value(e){this.input.value=e}get checked(){return this.input.checked}set checked(e){this.input.checked=e}setLocked(e){this.input.setLocked(e)}}class LabeledSelectBoxTag extends HtmlCustomTag{constructor(e,t,i,n,s,...a){super("div"),this.label=Label(htmlFor(e),t),this.select=new SelectBox(i,n,s,id(e),...a),this.element.append(this.label,this.select.element),Object.seal(this)}get emptySelectionEnabled(){return this.select.emptySelectionEnabled}set emptySelectionEnabled(e){this.select.emptySelectionEnabled=e}get values(){return this.select.values}set values(e){this.select.values=e}get options(){return this.select.options}get selectedIndex(){return this.select.selectedIndex}set selectedIndex(e){this.select.selectedIndex=e}get selectedValue(){return this.select.selectedValue}set selectedValue(e){this.select.selectedValue=e}indexOf(e){return this.select.indexOf(e)}contains(e){return this.select.contains(e)}addEventListener(e,t,i){this.select.addEventListener(e,t,i)}removeEventListener(e,t){this.select.removeEventListener(e,t)}}const selectEvt=new Event("select");class OptionPanelTag extends HtmlCustomTag{constructor(e,t,...i){super("div",id(e),style({padding:"1em"}),P(...i)),this.button=Button(id(e+"Btn"),onClick(()=>this.dispatchEvent(selectEvt)),t)}get visible(){return null!==this.element.style.display}set visible(e){this.element.setOpen(e),style({backgroundColor:e?"#ddd":"transparent",borderTop:e?"":"none",borderRight:e?"":"none",borderBottom:e?"none":"",borderLeft:e?"":"none"}).apply(this.button)}}const _values=new Map;class SelectBoxTag extends HtmlCustomTag{constructor(e,t,i,...n){if(super("select",...n),!isFunction(t))throw new Error("makeID parameter must be a Function");if(!isFunction(i))throw new Error("makeLabel parameter must be a Function");_values.set(this,[]),this.noSelectionText=e,this.makeID=e=>null!==e&&t(e)||null,this.makeLabel=e=>null!==e&&i(e)||"None",this.emptySelectionEnabled=!0,Object.seal(this)}get emptySelectionEnabled(){return this._emptySelectionEnabled}set emptySelectionEnabled(e){this._emptySelectionEnabled=e,this._render()}get values(){return _values.get(this)}set values(e){const t=this.selectedValue,i=_values.get(this);i.splice(0,i.length,...e),this._render(),this.selectedValue=t}_render(){if(clear(this.element),0===this.values.length)this.element.append(Option(this.noSelectionText)),this.element.lock();else{this.emptySelectionEnabled&&this.element.append(Option(this.noSelectionText));for(let e of this.values)this.element.append(Option(value(this.makeID(e)),this.makeLabel(e)));this.element.unlock()}}get options(){return this.element.options}get selectedIndex(){let e=this.element.selectedIndex;return this.emptySelectionEnabled&&--e,e}set selectedIndex(e){this.emptySelectionEnabled&&++e,this.element.selectedIndex=e}get selectedValue(){return 0<=this.selectedIndex&&this.selectedIndex<this.values.length?this.values[this.selectedIndex]:null}indexOf(e){return _values.get(this).findIndex(t=>null!==e&&this.makeID(e)===this.makeID(t))}set selectedValue(e){this.selectedIndex=this.indexOf(e)}contains(e){return this.indexOf(e)>=0}addEventListener(e,t,i){this.element.addEventListener(e,t,i)}removeEventListener(e,t){this.element.removeEventListener(e,t)}setOpen(e){this.element.setOpen(e)}get style(){return this.element.style}focus(){this.element.focus()}blur(){this.element.blur()}}function clear(e){for(;e.lastChild;)e.lastChild.remove()}function A(...e){return tag("a",...e)}function HtmlButton(...e){return tag("button",...e)}function Button(...e){return HtmlButton(...e,type("button"))}function Canvas(...e){return tag("canvas",...e)}function Div(...e){return tag("div",...e)}function H1(...e){return tag("h1",...e)}function H2(...e){return tag("h2",...e)}function Img(...e){return tag("img",...e)}function Input(...e){return tag("input",...e)}function Label(...e){return tag("label",...e)}function LI(...e){return tag("li",...e)}function Option(...e){return tag("option",...e)}function P(...e){return tag("p",...e)}function Span(...e){return tag("span",...e)}function UL(...e){return tag("ul",...e)}function LabeledInput(e,t,i,...n){return new LabeledInputTag(e,t,i,...n)}function SelectBox(e,t,i,...n){return new SelectBoxTag(e,t,i,...n)}function LabeledSelectBox(e,t,i,n,s,...a){return new LabeledSelectBoxTag(e,t,i,n,s,...a)}function OptionPanel(e,t,...i){return new OptionPanelTag(e,t,...i)}class Emoji{constructor(e,t){this.value=e,this.desc=t}contains(e){return this.value.indexOf(e.value)>=0}}function e(e,t){return new Emoji(e,t)}class EmojiGroup extends Emoji{constructor(...e){const t=e.splice(0,1)[0];super(t.value,t.desc),this.alts=e,this.width=null}random(){return this.alts.random()}contains(e){return super.contains(e)||this.alts.reduce((t,i)=>t||i.contains(e),!1)}}function g(...e){return new EmojiGroup(...e)}const textStyle=e("︎","Variation Selector-15: text style"),emojiStyle=e("️","Variation Selector-16: emoji style"),zeroWidthJoiner=e("‍","Zero Width Joiner"),female=e("♀️","Female"),male=e("♂️","Male"),skinL=e("🏻","Light Skin Tone"),skinML=e("🏼","Medium-Light Skin Tone"),skinM=e("🏽","Medium Skin Tone"),skinMD=e("🏾","Medium-Dark Skin Tone"),skinD=e("🏿","Dark Skin Tone"),hairRed=e("🦰","Red Hair"),hairCurly=e("🦱","Curly Hair"),hairWhite=e("🦳","White Hair"),hairBald=e("🦲","Bald");function combo(t,i){return t instanceof Array?t.map(e=>combo(e,i)):t instanceof EmojiGroup?g(combo(e(t.value,t.desc),i),...combo(t.alts,i)):i instanceof Array?i.map(e=>combo(t,e)):e(t.value+i.value,t.desc+": "+i.desc)}function join(t,i){return t instanceof Array?t.map(e=>join(e,i)):t instanceof EmojiGroup?g(join(e(t.value,t.desc),i),...join(t.alts,i)):i instanceof Array?i.map(e=>join(t,e)):e(t.value+zeroWidthJoiner.value+i.value,t.desc+": "+i.desc)}function isSurfer(e){return surfers.contains(e)||rowers.contains(e)||swimmers.contains(e)}function skin(t,i,...n){const s=e(t,i),a=combo(s,skinL),o=combo(s,skinML),r=combo(s,skinM),l=combo(s,skinMD),c=combo(s,skinD);return Object.assign(g(s,s,a,o,r,l,c,...n),{default:s,light:a,mediumLight:o,medium:r,mediumDark:l,dark:c})}function sex(e){const t=join(e,male),i=join(e,female);return Object.assign(g(e,e,t,i),{default:e,man:t,woman:i})}function skinAndSex(e,t){return sex(skin(e,t))}function skinAndHair(e,t,...i){const n=skin(e,t),s=join(n,hairRed),a=join(n,hairCurly),o=join(n,hairWhite),r=join(n,hairBald);return Object.assign(g(n,n,s,a,o,r,...i),{default:n,red:s,curly:a,white:o,bald:r})}function sym(t,i){const n=e(t.value,i),s=join(man.default,n),a=join(woman.default,n);return Object.assign(g(t,s,a),{symbol:t,men:s,women:a})}const frowners=skinAndSex("🙍","Frowning"),pouters=skinAndSex("🙎","Pouting"),gesturingNo=skinAndSex("🙅","Gesturing NO"),gesturingOK=skinAndSex("🙆","Gesturing OK"),tippingHand=skinAndSex("💁","Tipping Hand"),raisingHand=skinAndSex("🙋","Raising Hand"),bowing=skinAndSex("🙇","Bowing"),facePalming=skinAndSex("🤦","Facepalming"),shrugging=skinAndSex("🤷","Shrugging"),cantHear=skinAndSex("🧏","Can't Hear"),gettingMassage=skinAndSex("💆","Getting Massage"),gettingHaircut=skinAndSex("💇","Getting Haircut"),constructionWorkers=skinAndSex("👷","Construction Worker"),guards=skinAndSex("💂","Guard"),spies=skinAndSex("🕵","Spy"),police=skinAndSex("👮","Police"),wearingTurban=skinAndSex("👳","Wearing Turban"),superheroes=skinAndSex("🦸","Superhero"),supervillains=skinAndSex("🦹","Supervillain"),mages=skinAndSex("🧙","Mage"),fairies=skinAndSex("🧚","Fairy"),vampires=skinAndSex("🧛","Vampire"),merpeople=skinAndSex("🧜","Merperson"),elves=skinAndSex("🧝","Elf"),walking=skinAndSex("🚶","Walking"),standing=skinAndSex("🧍","Standing"),kneeling=skinAndSex("🧎","Kneeling"),runners=skinAndSex("🏃","Running"),gestures=g(e(gesturingOK.value,"Gestures"),frowners,pouters,gesturingNo,gesturingOK,tippingHand,raisingHand,bowing,facePalming,shrugging,cantHear,gettingMassage,gettingHaircut),baby=skin("👶","Baby"),child=skin("🧒","Child"),boy=skin("👦","Boy"),girl=skin("👧","Girl"),children=g(child,child,boy,girl),blondes=skinAndSex("👱","Blond Person"),person=skin("🧑","Person",blondes.default,wearingTurban.default),beardedMan=skin("🧔","Bearded Man"),manInSuitLevitating=e("🕴️","Man in Suit, Levitating"),manWithChineseCap=skin("👲","Man With Chinese Cap"),manInTuxedo=skin("🤵","Man in Tuxedo"),man=skinAndHair("👨","Man",blondes.man,beardedMan,manInSuitLevitating,manWithChineseCap,wearingTurban.man,manInTuxedo),pregnantWoman=skin("🤰","Pregnant Woman"),breastFeeding=skin("🤱","Breast-Feeding"),womanWithHeadscarf=skin("🧕","Woman With Headscarf"),brideWithVeil=skin("👰","Bride With Veil"),woman=skinAndHair("👩","Woman",blondes.woman,pregnantWoman,breastFeeding,womanWithHeadscarf,wearingTurban.woman,brideWithVeil),adults=g(e(person.value,"Adult"),person,man,woman),olderPerson=skin("🧓","Older Person"),oldMan=skin("👴","Old Man"),oldWoman=skin("👵","Old Woman"),olderPeople=g(olderPerson,olderPerson,oldMan,oldWoman),medical=e("⚕️","Medical"),healthCareWorkers=sym(medical,"Health Care"),graduationCap=e("🎓","Graduation Cap"),students=sym(graduationCap,"Student"),school=e("🏫","School"),teachers=sym(school,"Teacher"),balanceScale=e("⚖️","Balance Scale"),judges=sym(balanceScale,"Judge"),sheafOfRice=e("🌾","Sheaf of Rice"),farmers=sym(sheafOfRice,"Farmer"),cooking=e("🍳","Cooking"),cooks=sym(cooking,"Cook"),wrench=e("🔧","Wrench"),mechanics=sym(wrench,"Mechanic"),factory=e("🏭","Factory"),factoryWorkers=sym(factory,"Factory Worker"),briefcase=e("💼","Briefcase"),officeWorkers=sym(briefcase,"Office Worker"),fireEngine=e("🚒","Fire Engine"),fireFighters=sym(fireEngine,"Fire Fighter"),rocket=e("🚀","Rocket"),astronauts=sym(rocket,"Astronaut"),airplane=e("✈️","Airplane"),pilots=sym(airplane,"Pilot"),artistPalette=e("🎨","Artist Palette"),artists=sym(artistPalette,"Artist"),microphone=e("🎤","Microphone"),singers=sym(microphone,"Singer"),laptop=e("💻","Laptop"),technologists=sym(laptop,"Technologist"),microscope=e("🔬","Microscope"),scientists=sym(microscope,"Scientist"),crown=e("👑","Crown"),prince=skin("🤴","Prince"),princess=skin("👸","Princess"),royalty=g(crown,prince,princess),roles=g(e("Roles","Roles"),healthCareWorkers,students,teachers,judges,farmers,cooks,mechanics,factoryWorkers,officeWorkers,scientists,technologists,singers,artists,pilots,astronauts,fireFighters,spies,guards,constructionWorkers,royalty),cherub=skin("👼","Cherub"),santaClaus=skin("🎅","Santa Claus"),mrsClaus=skin("🤶","Mrs. Claus"),genies=sex(e("🧞","Genie")),zombies=sex(e("🧟","Zombie")),fantasy=[cherub,santaClaus,mrsClaus,superheroes,supervillains,mages,fairies,vampires,merpeople,elves,genies,zombies],whiteCane=e("🦯","Probing Cane"),withProbingCane=sym(whiteCane,"Probing"),motorizedWheelchair=e("🦼","Motorized Wheelchair"),inMotorizedWheelchair=sym(motorizedWheelchair,"In Motorized Wheelchair"),manualWheelchair=e("🦽","Manual Wheelchair"),inManualWheelchair=sym(manualWheelchair,"In Manual Wheelchair"),manDancing=skin("🕺","Man Dancing"),womanDancing=skin("💃","Woman Dancing"),dancers=g(e(manDancing.value,"Dancing"),manDancing,womanDancing),jugglers=skinAndSex("🤹","Juggler"),climbers=skinAndSex("🧗","Climber"),fencer=e("🤺","Fencer"),jockeys=skin("🏇","Jockey"),skier=e("⛷️","Skier"),snowboarders=skin("🏂","Snowboarder"),golfers=skinAndSex("🏌️","Golfer"),surfers=skinAndSex("🏄","Surfing"),rowers=skinAndSex("🚣","Rowing Boat"),swimmers=skinAndSex("🏊","Swimming"),basketballers=skinAndSex("⛹️","Basket Baller"),weightLifters=skinAndSex("🏋️","Weight Lifter"),bikers=skinAndSex("🚴","Biker"),mountainBikers=skinAndSex("🚵","Mountain Biker"),cartwheelers=skinAndSex("🤸","Cartwheeler"),wrestlers=sex(e("🤼","Wrestler")),waterPoloers=skinAndSex("🤽","Water Polo Player"),handBallers=skinAndSex("🤾","Hand Baller"),inMotion=[walking,standing,kneeling,withProbingCane,inMotorizedWheelchair,inManualWheelchair,dancers,jugglers,climbers,fencer,jockeys,skier,snowboarders,golfers,surfers,rowers,swimmers,runners,basketballers,weightLifters,bikers,mountainBikers,cartwheelers,wrestlers,waterPoloers,handBallers],inLotusPosition=skinAndSex("🧘","In Lotus Position"),inBath=skin("🛀","In Bath"),inBed=skin("🛌","In Bed"),inSauna=skinAndSex("🧖","In Sauna"),resting=[inLotusPosition,inBath,inBed,inSauna],babies=g(baby,baby,cherub),people=g(e("People","People"),babies,children,adults,olderPeople),allPeople=[people,gestures,inMotion,resting,roles,fantasy];function randomPerson(){let e=allPeople.random().random(),t=null;for(;e.alts&&t!==e;)t=e,e=e.value!==e.alts[0].value?e.alts.random(e):e.alts.random();return e}const ogre=e("👹","Ogre"),goblin=e("👺","Goblin"),ghost=e("👻","Ghost"),alien=e("👽","Alien"),alienMonster=e("👾","Alien Monster"),angryFaceWithHorns=e("👿","Angry Face with Horns"),skull=e("💀","Skull"),pileOfPoo=e("💩","Pile of Poo"),grinningFace=e("😀","Grinning Face"),beamingFaceWithSmilingEyes=e("😁","Beaming Face with Smiling Eyes"),faceWithTearsOfJoy=e("😂","Face with Tears of Joy"),grinningFaceWithBigEyes=e("😃","Grinning Face with Big Eyes"),grinningFaceWithSmilingEyes=e("😄","Grinning Face with Smiling Eyes"),grinningFaceWithSweat=e("😅","Grinning Face with Sweat"),grinningSquitingFace=e("😆","Grinning Squinting Face"),smillingFaceWithHalo=e("😇","Smiling Face with Halo"),smilingFaceWithHorns=e("😈","Smiling Face with Horns"),winkingFace=e("😉","Winking Face"),smilingFaceWithSmilingEyes=e("😊","Smiling Face with Smiling Eyes"),faceSavoringFood=e("😋","Face Savoring Food"),relievedFace=e("😌","Relieved Face"),smilingFaceWithHeartEyes=e("😍","Smiling Face with Heart-Eyes"),smilingFaceWithSunglasses=e("😎","Smiling Face with Sunglasses"),smirkingFace=e("😏","Smirking Face"),neutralFace=e("😐","Neutral Face"),expressionlessFace=e("😑","Expressionless Face"),unamusedFace=e("😒","Unamused Face"),downcastFaceWithSweat=e("😓","Downcast Face with Sweat"),pensiveFace=e("😔","Pensive Face"),confusedFace=e("😕","Confused Face"),confoundedFace=e("😖","Confounded Face"),kissingFace=e("😗","Kissing Face"),faceBlowingAKiss=e("😘","Face Blowing a Kiss"),kissingFaceWithSmilingEyes=e("😙","Kissing Face with Smiling Eyes"),kissingFaceWithClosedEyes=e("😚","Kissing Face with Closed Eyes"),faceWithTongue=e("😛","Face with Tongue"),winkingFaceWithTongue=e("😜","Winking Face with Tongue"),squintingFaceWithTongue=e("😝","Squinting Face with Tongue"),disappointedFace=e("😞","Disappointed Face"),worriedFace=e("😟","Worried Face"),angryFace=e("😠","Angry Face"),poutingFace=e("😡","Pouting Face"),cryingFace=e("😢","Crying Face"),perseveringFace=e("😣","Persevering Face"),faceWithSteamFromNose=e("😤","Face with Steam From Nose"),sadButRelievedFace=e("😥","Sad but Relieved Face"),frowningFaceWithOpenMouth=e("😦","Frowning Face with Open Mouth"),anguishedFace=e("😧","Anguished Face"),fearfulFace=e("😨","Fearful Face"),wearyFace=e("😩","Weary Face"),sleepyFace=e("😪","Sleepy Face"),tiredFace=e("😫","Tired Face"),grimacingFace=e("😬","Grimacing Face"),loudlyCryingFace=e("😭","Loudly Crying Face"),faceWithOpenMouth=e("😮","Face with Open Mouth"),hushedFace=e("😯","Hushed Face"),anxiousFaceWithSweat=e("😰","Anxious Face with Sweat"),faceScreamingInFear=e("😱","Face Screaming in Fear"),astonishedFace=e("😲","Astonished Face"),flushedFace=e("😳","Flushed Face"),sleepingFace=e("😴","Sleeping Face"),dizzyFace=e("😵","Dizzy Face"),faceWithoutMouth=e("😶","Face Without Mouth"),faceWithMedicalMask=e("😷","Face with Medical Mask"),grinningCatWithSmilingEyes=e("😸","Grinning Cat with Smiling Eyes"),catWithTearsOfJoy=e("😹","Cat with Tears of Joy"),grinningCat=e("😺","Grinning Cat"),smilingCatWithHeartEyes=e("😻","Smiling Cat with Heart-Eyes"),catWithWrySmile=e("😼","Cat with Wry Smile"),kissingCat=e("😽","Kissing Cat"),poutingCat=e("😾","Pouting Cat"),cryingCat=e("😿","Crying Cat"),wearyCat=e("🙀","Weary Cat"),slightlyFrowningFace=e("🙁","Slightly Frowning Face"),slightlySmilingFace=e("🙂","Slightly Smiling Face"),updisdeDownFace=e("🙃","Upside-Down Face"),faceWithRollingEyes=e("🙄","Face with Rolling Eyes"),seeNoEvilMonkey=e("🙈","See-No-Evil Monkey"),hearNoEvilMonkey=e("🙉","Hear-No-Evil Monkey"),speakNoEvilMonkey=e("🙊","Speak-No-Evil Monkey"),zipperMouthFace=e("🤐","Zipper-Mouth Face"),moneyMouthFace=e("🤑","Money-Mouth Face"),faceWithThermometer=e("🤒","Face with Thermometer"),nerdFace=e("🤓","Nerd Face"),thinkingFace=e("🤔","Thinking Face"),faceWithHeadBandage=e("🤕","Face with Head-Bandage"),robot=e("🤖","Robot"),huggingFace=e("🤗","Hugging Face"),cowboyHatFace=e("🤠","Cowboy Hat Face"),clownFace=e("🤡","Clown Face"),nauseatedFace=e("🤢","Nauseated Face"),rollingOnTheFloorLaughing=e("🤣","Rolling on the Floor Laughing"),droolingFace=e("🤤","Drooling Face"),lyingFace=e("🤥","Lying Face"),sneezingFace=e("🤧","Sneezing Face"),faceWithRaisedEyebrow=e("🤨","Face with Raised Eyebrow"),starStruck=e("🤩","Star-Struck"),zanyFace=e("🤪","Zany Face"),shushingFace=e("🤫","Shushing Face"),faceWithSymbolsOnMouth=e("🤬","Face with Symbols on Mouth"),faceWithHandOverMouth=e("🤭","Face with Hand Over Mouth"),faceVomitting=e("🤮","Face Vomiting"),explodingHead=e("🤯","Exploding Head"),smilingFaceWithHearts=e("🥰","Smiling Face with Hearts"),yawningFace=e("🥱","Yawning Face"),smilingFaceWithTear=e("🥲","Smiling Face with Tear"),partyingFace=e("🥳","Partying Face"),woozyFace=e("🥴","Woozy Face"),hotFace=e("🥵","Hot Face"),coldFace=e("🥶","Cold Face"),disguisedFace=e("🥸","Disguised Face"),pleadingFace=e("🥺","Pleading Face"),faceWithMonocle=e("🧐","Face with Monocle"),skullAndCrossbones=e("☠️","Skull and Crossbones"),frowningFace=e("☹️","Frowning Face"),fmilingFace=e("☺️","Smiling Face"),speakingHead=e("🗣️","Speaking Head"),bust=e("👤","Bust in Silhouette"),faces=[ogre,goblin,ghost,alien,alienMonster,angryFaceWithHorns,skull,pileOfPoo,grinningFace,beamingFaceWithSmilingEyes,faceWithTearsOfJoy,grinningFaceWithBigEyes,grinningFaceWithSmilingEyes,grinningFaceWithSweat,grinningSquitingFace,smillingFaceWithHalo,smilingFaceWithHorns,winkingFace,smilingFaceWithSmilingEyes,faceSavoringFood,relievedFace,smilingFaceWithHeartEyes,smilingFaceWithSunglasses,smirkingFace,neutralFace,expressionlessFace,unamusedFace,downcastFaceWithSweat,pensiveFace,confusedFace,confoundedFace,kissingFace,faceBlowingAKiss,kissingFaceWithSmilingEyes,kissingFaceWithClosedEyes,faceWithTongue,winkingFaceWithTongue,squintingFaceWithTongue,disappointedFace,worriedFace,angryFace,poutingFace,cryingFace,perseveringFace,faceWithSteamFromNose,sadButRelievedFace,frowningFaceWithOpenMouth,anguishedFace,fearfulFace,wearyFace,sleepyFace,tiredFace,grimacingFace,loudlyCryingFace,faceWithOpenMouth,hushedFace,anxiousFaceWithSweat,faceScreamingInFear,astonishedFace,flushedFace,sleepingFace,dizzyFace,faceWithoutMouth,faceWithMedicalMask,grinningCatWithSmilingEyes,catWithTearsOfJoy,grinningCat,smilingCatWithHeartEyes,catWithWrySmile,kissingCat,poutingCat,cryingCat,wearyCat,slightlyFrowningFace,slightlySmilingFace,updisdeDownFace,faceWithRollingEyes,seeNoEvilMonkey,hearNoEvilMonkey,speakNoEvilMonkey,zipperMouthFace,moneyMouthFace,faceWithThermometer,nerdFace,thinkingFace,faceWithHeadBandage,robot,huggingFace,cowboyHatFace,clownFace,nauseatedFace,rollingOnTheFloorLaughing,droolingFace,lyingFace,sneezingFace,faceWithRaisedEyebrow,starStruck,zanyFace,shushingFace,faceWithSymbolsOnMouth,faceWithHandOverMouth,faceVomitting,explodingHead,smilingFaceWithHearts,yawningFace,smilingFaceWithTear,partyingFace,woozyFace,hotFace,coldFace,disguisedFace,pleadingFace,faceWithMonocle,skullAndCrossbones,frowningFace,fmilingFace,speakingHead,bust],kissMark=e("💋","Kiss Mark"),loveLetter=e("💌","Love Letter"),beatingHeart=e("💓","Beating Heart"),brokenHeart=e("💔","Broken Heart"),twoHearts=e("💕","Two Hearts"),sparklingHeart=e("💖","Sparkling Heart"),growingHeart=e("💗","Growing Heart"),heartWithArrow=e("💘","Heart with Arrow"),blueHeart=e("💙","Blue Heart"),greenHeart=e("💚","Green Heart"),yellowHeart=e("💛","Yellow Heart"),purpleHeart=e("💜","Purple Heart"),heartWithRibbon=e("💝","Heart with Ribbon"),revolvingHearts=e("💞","Revolving Hearts"),heartDecoration=e("💟","Heart Decoration"),blackHeart=e("🖤","Black Heart"),whiteHeart=e("🤍","White Heart"),brownHeart=e("🤎","Brown Heart"),orangeHeart=e("🧡","Orange Heart"),heartExclamation=e("❣️","Heart Exclamation"),redHeart=e("❤️","Red Heart"),love=[kissMark,loveLetter,beatingHeart,brokenHeart,twoHearts,sparklingHeart,growingHeart,heartWithArrow,blueHeart,greenHeart,yellowHeart,purpleHeart,heartWithRibbon,revolvingHearts,heartDecoration,blackHeart,whiteHeart,brownHeart,orangeHeart,heartExclamation,redHeart],cartoon=[e("💢","Anger Symbol"),e("💣","Bomb"),e("💤","Zzz"),e("💥","Collision"),e("💦","Sweat Droplets"),e("💨","Dashing Away"),e("💫","Dizzy"),e("💬","Speech Balloon"),e("💭","Thought Balloon"),e("💯","Hundred Points"),e("🕳️","Hole"),e("🗨️","Left Speech Bubble"),e("🗯️","Right Anger Bubble")],hands=[e("👆","Backhand Index Pointing Up"),e("👇","Backhand Index Pointing Down"),e("👈","Backhand Index Pointing Left"),e("👉","Backhand Index Pointing Right"),e("👊","Oncoming Fist"),e("👋","Waving Hand"),e("👌","OK Hand"),e("👍","Thumbs Up"),e("👎","Thumbs Down"),e("👏","Clapping Hands"),e("👐","Open Hands"),e("💅","Nail Polish"),e("🖐️","Hand with Fingers Splayed"),e("🖕","Middle Finger"),e("🖖","Vulcan Salute"),e("🙌","Raising Hands"),e("🙏","Folded Hands"),e("🤌","Pinched Fingers"),e("🤏","Pinching Hand"),e("🤘","Sign of the Horns"),e("🤙","Call Me Hand"),e("🤚","Raised Back of Hand"),e("🤛","Left-Facing Fist"),e("🤜","Right-Facing Fist"),e("🤝","Handshake"),e("🤞","Crossed Fingers"),e("🤟","Love-You Gesture"),e("🤲","Palms Up Together"),e("☝️","Index Pointing Up"),e("✊","Raised Fist"),e("✋","Raised Hand"),e("✌️","Victory Hand"),e("✍️","Writing Hand")],bodyParts=[e("👀","Eyes"),e("👁️","Eye"),e("👁️‍🗨️","Eye in Speech Bubble"),e("👂","Ear"),e("👃","Nose"),e("👄","Mouth"),e("👅","Tongue"),e("💪","Flexed Biceps"),e("🤳","Selfie"),e("🦴","Bone"),e("🦵","Leg"),e("🦶","Foot"),e("🦷","Tooth"),e("🦻","Ear with Hearing Aid"),e("🦾","Mechanical Arm"),e("🦿","Mechanical Leg"),e("🧠","Brain"),e("🫀","Anatomical Heart"),e("🫁","Lungs")],animals=[e("🐀","Rat"),e("🐁","Mouse"),e("🐂","Ox"),e("🐃","Water Buffalo"),e("🐄","Cow"),e("🐅","Tiger"),e("🐆","Leopard"),e("🐇","Rabbit"),e("🐈","Cat"),e("🐈‍⬛","Black Cat"),e("🐉","Dragon"),e("🐊","Crocodile"),e("🐋","Whale"),e("🐌","Snail"),e("🐍","Snake"),e("🐎","Horse"),e("🐏","Ram"),e("🐐","Goat"),e("🐑","Ewe"),e("🐒","Monkey"),e("🐓","Rooster"),e("🐔","Chicken"),e("🐕","Dog"),e("🐕‍🦺","Service Dog"),e("🐖","Pig"),e("🐗","Boar"),e("🐘","Elephant"),e("🐙","Octopus"),e("🐚","Spiral Shell"),e("🐛","Bug"),e("🐜","Ant"),e("🐝","Honeybee"),e("🐞","Lady Beetle"),e("🐟","Fish"),e("🐠","Tropical Fish"),e("🐡","Blowfish"),e("🐢","Turtle"),e("🐣","Hatching Chick"),e("🐤","Baby Chick"),e("🐥","Front-Facing Baby Chick"),e("🐦","Bird"),e("🐧","Penguin"),e("🐨","Koala"),e("🐩","Poodle"),e("🐪","Camel"),e("🐫","Two-Hump Camel"),e("🐬","Dolphin"),e("🐭","Mouse Face"),e("🐮","Cow Face"),e("🐯","Tiger Face"),e("🐰","Rabbit Face"),e("🐱","Cat Face"),e("🐲","Dragon Face"),e("🐳","Spouting Whale"),e("🐴","Horse Face"),e("🐵","Monkey Face"),e("🐶","Dog Face"),e("🐷","Pig Face"),e("🐸","Frog"),e("🐹","Hamster"),e("🐺","Wolf"),e("🐻","Bear"),e("🐻‍❄️","Polar Bear"),e("🐼","Panda"),e("🐽","Pig Nose"),e("🐾","Paw Prints"),e("🐿️","Chipmunk"),e("🕊️","Dove"),e("🕷️","Spider"),e("🕸️","Spider Web"),e("🦁","Lion"),e("🦂","Scorpion"),e("🦃","Turkey"),e("🦄","Unicorn"),e("🦅","Eagle"),e("🦆","Duck"),e("🦇","Bat"),e("🦈","Shark"),e("🦉","Owl"),e("🦊","Fox"),e("🦋","Butterfly"),e("🦌","Deer"),e("🦍","Gorilla"),e("🦎","Lizard"),e("🦏","Rhinoceros"),e("🦒","Giraffe"),e("🦓","Zebra"),e("🦔","Hedgehog"),e("🦕","Sauropod"),e("🦖","T-Rex"),e("🦗","Cricket"),e("🦘","Kangaroo"),e("🦙","Llama"),e("🦚","Peacock"),e("🦛","Hippopotamus"),e("🦜","Parrot"),e("🦝","Raccoon"),e("🦟","Mosquito"),e("🦠","Microbe"),e("🦡","Badger"),e("🦢","Swan"),e("🦣","Mammoth"),e("🦤","Dodo"),e("🦥","Sloth"),e("🦦","Otter"),e("🦧","Orangutan"),e("🦨","Skunk"),e("🦩","Flamingo"),e("🦫","Beaver"),e("🦬","Bison"),e("🦭","Seal"),e("🦮","Guide Dog"),e("🪰","Fly"),e("🪱","Worm"),e("🪲","Beetle"),e("🪳","Cockroach"),e("🪶","Feather")],plants=[e("🌱","Seedling"),e("🌲","Evergreen Tree"),e("🌳","Deciduous Tree"),e("🌴","Palm Tree"),e("🌵","Cactus"),e("🌷","Tulip"),e("🌸","Cherry Blossom"),e("🌹","Rose"),e("🌺","Hibiscus"),e("🌻","Sunflower"),e("🌼","Blossom"),sheafOfRice,e("🌿","Herb"),e("🍀","Four Leaf Clover"),e("🍁","Maple Leaf"),e("🍂","Fallen Leaf"),e("🍃","Leaf Fluttering in Wind"),e("🏵️","Rosette"),e("💐","Bouquet"),e("💮","White Flower"),e("🥀","Wilted Flower"),e("🪴","Potted Plant"),e("☘️","Shamrock")],food=[e("🌭","Hot Dog"),e("🌮","Taco"),e("🌯","Burrito"),e("🌰","Chestnut"),e("🌶️","Hot Pepper"),e("🌽","Ear of Corn"),e("🍄","Mushroom"),e("🍅","Tomato"),e("🍆","Eggplant"),e("🍇","Grapes"),e("🍈","Melon"),e("🍉","Watermelon"),e("🍊","Tangerine"),e("🍋","Lemon"),e("🍌","Banana"),e("🍍","Pineapple"),e("🍎","Red Apple"),e("🍏","Green Apple"),e("🍐","Pear"),e("🍑","Peach"),e("🍒","Cherries"),e("🍓","Strawberry"),e("🍔","Hamburger"),e("🍕","Pizza"),e("🍖","Meat on Bone"),e("🍗","Poultry Leg"),e("🍘","Rice Cracker"),e("🍙","Rice Ball"),e("🍚","Cooked Rice"),e("🍛","Curry Rice"),e("🍜","Steaming Bowl"),e("🍝","Spaghetti"),e("🍞","Bread"),e("🍟","French Fries"),e("🍠","Roasted Sweet Potato"),e("🍡","Dango"),e("🍢","Oden"),e("🍣","Sushi"),e("🍤","Fried Shrimp"),e("🍥","Fish Cake with Swirl"),e("🍱","Bento Box"),e("🍲","Pot of Food"),cooking,e("🍿","Popcorn"),e("🥐","Croissant"),e("🥑","Avocado"),e("🥒","Cucumber"),e("🥓","Bacon"),e("🥔","Potato"),e("🥕","Carrot"),e("🥖","Baguette Bread"),e("🥗","Green Salad"),e("🥘","Shallow Pan of Food"),e("🥙","Stuffed Flatbread"),e("🥚","Egg"),e("🥜","Peanuts"),e("🥝","Kiwi Fruit"),e("🥞","Pancakes"),e("🥟","Dumpling"),e("🥠","Fortune Cookie"),e("🥡","Takeout Box"),e("🥣","Bowl with Spoon"),e("🥥","Coconut"),e("🥦","Broccoli"),e("🥨","Pretzel"),e("🥩","Cut of Meat"),e("🥪","Sandwich"),e("🥫","Canned Food"),e("🥬","Leafy Green"),e("🥭","Mango"),e("🥮","Moon Cake"),e("🥯","Bagel"),e("🦀","Crab"),e("🦐","Shrimp"),e("🦑","Squid"),e("🦞","Lobster"),e("🦪","Oyster"),e("🧀","Cheese Wedge"),e("🧂","Salt"),e("🧄","Garlic"),e("🧅","Onion"),e("🧆","Falafel"),e("🧇","Waffle"),e("🧈","Butter"),e("🫐","Blueberries"),e("🫑","Bell Pepper"),e("🫒","Olive"),e("🫓","Flatbread"),e("🫔","Tamale"),e("🫕","Fondue")],sweets=[e("🍦","Soft Ice Cream"),e("🍧","Shaved Ice"),e("🍨","Ice Cream"),e("🍩","Doughnut"),e("🍪","Cookie"),e("🍫","Chocolate Bar"),e("🍬","Candy"),e("🍭","Lollipop"),e("🍮","Custard"),e("🍯","Honey Pot"),e("🍰","Shortcake"),e("🎂","Birthday Cake"),e("🥧","Pie"),e("🧁","Cupcake")],drinks=[e("🍵","Teacup Without Handle"),e("🍶","Sake"),e("🍷","Wine Glass"),e("🍸","Cocktail Glass"),e("🍹","Tropical Drink"),e("🍺","Beer Mug"),e("🍻","Clinking Beer Mugs"),e("🍼","Baby Bottle"),e("🍾","Bottle with Popping Cork"),e("🥂","Clinking Glasses"),e("🥃","Tumbler Glass"),e("🥛","Glass of Milk"),e("🥤","Cup with Straw"),e("🧃","Beverage Box"),e("🧉","Mate"),e("🧊","Ice"),e("🧋","Bubble Tea"),e("🫖","Teapot"),e("☕","Hot Beverage")],utensils=[e("🍴","Fork and Knife"),e("🍽️","Fork and Knife with Plate"),e("🏺","Amphora"),e("🔪","Kitchen Knife"),e("🥄","Spoon"),e("🥢","Chopsticks")],flags=[e("🎌","Crossed Flags"),e("🏁","Chequered Flag"),e("🏳️","White Flag"),e("🏳️‍🌈","Rainbow Flag"),e("🏳️‍⚧️","Transgender Flag"),e("🏴","Black Flag"),e("🏴‍☠️","Pirate Flag"),e("🏴󠁧󠁢󠁥󠁮󠁧󠁿","Flag: England"),e("🏴󠁧󠁢󠁳󠁣󠁴󠁿","Flag: Scotland"),e("🏴󠁧󠁢󠁷󠁬󠁳󠁿","Flag: Wales"),e("🚩","Triangular Flag")],motorcycle=e("🏍️","Motorcycle"),racingCar=e("🏎️","Racing Car"),seat=e("💺","Seat"),helicopter=e("🚁","Helicopter"),locomotive=e("🚂","Locomotive"),railwayCar=e("🚃","Railway Car"),highspeedTrain=e("🚄","High-Speed Train"),bulletTrain=e("🚅","Bullet Train"),train=e("🚆","Train"),metro=e("🚇","Metro"),lightRail=e("🚈","Light Rail"),station=e("🚉","Station"),tram=e("🚊","Tram"),tramCar=e("🚋","Tram Car"),bus=e("🚌","Bus"),oncomingBus=e("🚍","Oncoming Bus"),trolleyBus=e("🚎","Trolleybus"),busStop=e("🚏","Bus Stop"),miniBus=e("🚐","Minibus"),ambulance=e("🚑","Ambulance"),taxi=e("🚕","Taxi"),oncomingTaxi=e("🚖","Oncoming Taxi"),automobile=e("🚗","Automobile"),oncomingAutomobile=e("🚘","Oncoming Automobile"),sportUtilityVehicle=e("🚙","Sport Utility Vehicle"),deliveryTruck=e("🚚","Delivery Truck"),articulatedLorry=e("🚛","Articulated Lorry"),tractor=e("🚜","Tractor"),monorail=e("🚝","Monorail"),mountainRailway=e("🚞","Mountain Railway"),suspensionRailway=e("🚟","Suspension Railway"),mountainCableway=e("🚠","Mountain Cableway"),aerialTramway=e("🚡","Aerial Tramway"),ship=e("🚢","Ship"),speedBoat=e("🚤","Speedboat"),horizontalTrafficLight=e("🚥","Horizontal Traffic Light"),verticalTrafficLight=e("🚦","Vertical Traffic Light"),construction=e("🚧","Construction"),bicycle=e("🚲","Bicycle"),stopSign=e("🛑","Stop Sign"),oilDrum=e("🛢️","Oil Drum"),motorway=e("🛣️","Motorway"),railwayTrack=e("🛤️","Railway Track"),motorBoat=e("🛥️","Motor Boat"),smallAirplane=e("🛩️","Small Airplane"),airplaneDeparture=e("🛫","Airplane Departure"),airplaneArrival=e("🛬","Airplane Arrival"),satellite=e("🛰️","Satellite"),passengerShip=e("🛳️","Passenger Ship"),kickScooter=e("🛴","Kick Scooter"),motorScooter=e("🛵","Motor Scooter"),canoe=e("🛶","Canoe"),flyingSaucer=e("🛸","Flying Saucer"),skateboard=e("🛹","Skateboard"),autoRickshaw=e("🛺","Auto Rickshaw"),pickupTruck=e("🛻","Pickup Truck"),rollerSkate=e("🛼","Roller Skate"),parachute=e("🪂","Parachute"),anchor=e("⚓","Anchor"),ferry=e("⛴️","Ferry"),sailboat=e("⛵","Sailboat"),fuelPump=e("⛽","Fuel Pump"),vehicles=[motorcycle,racingCar,seat,rocket,helicopter,locomotive,railwayCar,highspeedTrain,bulletTrain,train,metro,lightRail,station,tram,tramCar,bus,oncomingBus,trolleyBus,busStop,miniBus,ambulance,fireEngine,taxi,oncomingTaxi,automobile,oncomingAutomobile,sportUtilityVehicle,deliveryTruck,articulatedLorry,tractor,monorail,mountainRailway,suspensionRailway,mountainCableway,aerialTramway,ship,speedBoat,horizontalTrafficLight,verticalTrafficLight,construction,bicycle,stopSign,oilDrum,motorway,railwayTrack,motorBoat,smallAirplane,airplaneDeparture,airplaneArrival,satellite,passengerShip,kickScooter,motorScooter,canoe,flyingSaucer,skateboard,autoRickshaw,pickupTruck,rollerSkate,motorizedWheelchair,manualWheelchair,parachute,anchor,ferry,sailboat,fuelPump,airplane],bloodTypes=[e("🅰","A Button (Blood Type)"),e("🅱","B Button (Blood Type)"),e("🅾","O Button (Blood Type)"),e("🆎","AB Button (Blood Type)")],japanese=[e("🔰","Japanese Symbol for Beginner"),e("🈁","Japanese “Here” Button"),e("🈂️","Japanese “Service Charge” Button"),e("🈚","Japanese “Free of Charge” Button"),e("🈯","Japanese “Reserved” Button"),e("🈲","Japanese “Prohibited” Button"),e("🈳","Japanese “Vacancy” Button"),e("🈴","Japanese “Passing Grade” Button"),e("🈵","Japanese “No Vacancy” Button"),e("🈶","Japanese “Not Free of Charge” Button"),e("🈷️","Japanese “Monthly Amount” Button"),e("🈸","Japanese “Application” Button"),e("🈹","Japanese “Discount” Button"),e("🈺","Japanese “Open for Business” Button"),e("🉐","Japanese “Bargain” Button"),e("🉑","Japanese “Acceptable” Button"),e("㊗️","Japanese “Congratulations” Button"),e("㊙️","Japanese “Secret” Button")],time=[e("🕐","One O’Clock"),e("🕑","Two O’Clock"),e("🕒","Three O’Clock"),e("🕓","Four O’Clock"),e("🕔","Five O’Clock"),e("🕕","Six O’Clock"),e("🕖","Seven O’Clock"),e("🕗","Eight O’Clock"),e("🕘","Nine O’Clock"),e("🕙","Ten O’Clock"),e("🕚","Eleven O’Clock"),e("🕛","Twelve O’Clock"),e("🕜","One-Thirty"),e("🕝","Two-Thirty"),e("🕞","Three-Thirty"),e("🕟","Four-Thirty"),e("🕠","Five-Thirty"),e("🕡","Six-Thirty"),e("🕢","Seven-Thirty"),e("🕣","Eight-Thirty"),e("🕤","Nine-Thirty"),e("🕥","Ten-Thirty"),e("🕦","Eleven-Thirty"),e("🕧","Twelve-Thirty")],clocks=[e("🕰️","Mantelpiece Clock"),e("⌚","Watch"),e("⏰","Alarm Clock"),e("⏱️","Stopwatch"),e("⏲️","Timer Clock"),e("⌛","Hourglass Done"),e("⏳","Hourglass Not Done")],downRightArrow=e("↘","Down-Right Arrow"),downRightArrowEmoji=e("↘️","Down-Right Arrow"),arrows=[e("🔃️","Clockwise Vertical Arrows"),e("🔄️","Counterclockwise Arrows Button"),e("↔️","Left-Right Arrow"),e("↕️","Up-Down Arrow"),e("↖️","Up-Left Arrow"),e("↗️","Up-Right Arrow"),downRightArrowEmoji,e("↙️","Down-Left Arrow"),e("↩️","Right Arrow Curving Left"),e("↪️","Left Arrow Curving Right"),e("➡️","Right Arrow"),e("⤴️","Right Arrow Curving Up"),e("⤵️","Right Arrow Curving Down"),e("⬅️","Left Arrow"),e("⬆️","Up Arrow"),e("⬇️","Down Arrow")],shapes=[e("🔴","Red Circle"),e("🔵","Blue Circle"),e("🔶","Large Orange Diamond"),e("🔷","Large Blue Diamond"),e("🔸","Small Orange Diamond"),e("🔹","Small Blue Diamond"),e("🔺","Red Triangle Pointed Up"),e("🔻","Red Triangle Pointed Down"),e("🟠","Orange Circle"),e("🟡","Yellow Circle"),e("🟢","Green Circle"),e("🟣","Purple Circle"),e("🟤","Brown Circle"),e("⭕","Hollow Red Circle"),e("⚪","White Circle"),e("⚫","Black Circle"),e("🟥","Red Square"),e("🟦","Blue Square"),e("🟧","Orange Square"),e("🟨","Yellow Square"),e("🟩","Green Square"),e("🟪","Purple Square"),e("🟫","Brown Square"),e("🔲","Black Square Button"),e("🔳","White Square Button"),e("▪️","Black Small Square"),e("▫️","White Small Square"),e("◽","White Medium-Small Square"),e("◾","Black Medium-Small Square"),e("◻️","White Medium Square"),e("◼️","Black Medium Square"),e("⬛","Black Large Square"),e("⬜","White Large Square"),e("⭐","Star"),e("💠","Diamond with a Dot")],shuffleTracksButton=e("🔀","Shuffle Tracks Button"),repeatButton=e("🔁","Repeat Button"),repeatSingleButton=e("🔂","Repeat Single Button"),upwardsButton=e("🔼","Upwards Button"),downwardsButton=e("🔽","Downwards Button"),reverseButton=e("◀️","Reverse Button"),ejectButton=e("⏏️","Eject Button"),fastForwardButton=e("⏩","Fast-Forward Button"),fastReverseButton=e("⏪","Fast Reverse Button"),fastUpButton=e("⏫","Fast Up Button"),fastDownButton=e("⏬","Fast Down Button"),nextTrackButton=e("⏭️","Next Track Button"),lastTrackButton=e("⏮️","Last Track Button"),playOrPauseButton=e("⏯️","Play or Pause Button"),pauseButton=e("⏸️","Pause Button"),stopButton=e("⏹️","Stop Button"),recordButton=e("⏺️","Record Button"),mediaPlayer=[shuffleTracksButton,repeatButton,repeatSingleButton,upwardsButton,downwardsButton,pauseButton,reverseButton,ejectButton,fastForwardButton,fastReverseButton,fastUpButton,fastDownButton,nextTrackButton,lastTrackButton,playOrPauseButton,pauseButton,stopButton,recordButton],zodiac=[e("♈","Aries"),e("♉","Taurus"),e("♊","Gemini"),e("♋","Cancer"),e("♌","Leo"),e("♍","Virgo"),e("♎","Libra"),e("♏","Scorpio"),e("♐","Sagittarius"),e("♑","Capricorn"),e("♒","Aquarius"),e("♓","Pisces"),e("⛎","Ophiuchus")],math=[e("✖️","Multiply"),e("➕","Plus"),e("➖","Minus"),e("➗","Divide")],games=[e("♠️","Spade Suit"),e("♣️","Club Suit"),Object.assign(e("♥️","Heart Suit"),{color:"red"}),Object.assign(e("♦️","Diamond Suit"),{color:"red"}),e("🀄","Mahjong Red Dragon"),e("🃏","Joker"),e("🎯","Direct Hit"),e("🎰","Slot Machine"),e("🎱","Pool 8 Ball"),e("🎲","Game Die"),e("🎳","Bowling"),e("🎴","Flower Playing Cards"),e("🧩","Puzzle Piece"),e("♟️","Chess Pawn"),e("🪀","Yo-Yo"),e("🪁","Kite"),e("🪃","Boomerang"),e("🪆","Nesting Dolls")],sportsEquipment=[e("🎽","Running Shirt"),e("🎾","Tennis"),e("🎿","Skis"),e("🏀","Basketball"),e("🏅","Sports Medal"),e("🏆","Trophy"),e("🏈","American Football"),e("🏉","Rugby Football"),e("🏏","Cricket Game"),e("🏐","Volleyball"),e("🏑","Field Hockey"),e("🏒","Ice Hockey"),e("🏓","Ping Pong"),e("🏸","Badminton"),e("🛷","Sled"),e("🥅","Goal Net"),e("🥇","1st Place Medal"),e("🥈","2nd Place Medal"),e("🥉","3rd Place Medal"),e("🥊","Boxing Glove"),e("🥌","Curling Stone"),e("🥍","Lacrosse"),e("🥎","Softball"),e("🥏","Flying Disc"),e("⚽","Soccer Ball"),e("⚾","Baseball"),e("⛸️","Ice Skate")],clothing=[e("🎩","Top Hat"),e("🤿","Diving Mask"),e("👒","Woman’s Hat"),e("👓","Glasses"),e("🕶️","Sunglasses"),e("👔","Necktie"),e("👕","T-Shirt"),e("👖","Jeans"),e("👗","Dress"),e("👘","Kimono"),e("👙","Bikini"),e("👚","Woman’s Clothes"),e("👛","Purse"),e("👜","Handbag"),e("👝","Clutch Bag"),e("👞","Man’s Shoe"),e("👟","Running Shoe"),e("👠","High-Heeled Shoe"),e("👡","Woman’s Sandal"),e("👢","Woman’s Boot"),e("🥋","Martial Arts Uniform"),e("🥻","Sari"),e("🥼","Lab Coat"),e("🥽","Goggles"),e("🥾","Hiking Boot"),e("🥿","Flat Shoe"),whiteCane,e("🦺","Safety Vest"),e("🧢","Billed Cap"),e("🧣","Scarf"),e("🧤","Gloves"),e("🧥","Coat"),e("🧦","Socks"),e("🧿","Nazar Amulet"),e("🩰","Ballet Shoes"),e("🩱","One-Piece Swimsuit"),e("🩲","Briefs"),e("🩳","Shorts"),e("🩴","Thong Sandal")],town=[e("🏗️","Building Construction"),e("🏘️","Houses"),e("🏙️","Cityscape"),e("🏚️","Derelict House"),e("🏛️","Classical Building"),e("🏜️","Desert"),e("🏝️","Desert Island"),e("🏞️","National Park"),e("🏟️","Stadium"),e("🏠","House"),e("🏡","House with Garden"),e("🏢","Office Building"),e("🏣","Japanese Post Office"),e("🏤","Post Office"),e("🏥","Hospital"),e("🏦","Bank"),e("🏧","ATM Sign"),e("🏨","Hotel"),e("🏩","Love Hotel"),e("🏪","Convenience Store"),school,e("🏬","Department Store"),factory,e("🌉","Bridge at Night"),e("⛲","Fountain"),e("🛍️","Shopping Bags"),e("🧾","Receipt"),e("🛒","Shopping Cart"),e("💈","Barber Pole"),e("💒","Wedding"),e("🛖","Hut"),e("🛗","Elevator"),e("🗳️","Ballot Box with Ballot")],buttons=[e("🆑","CL Button"),e("🆒","Cool Button"),e("🆓","Free Button"),e("🆔","ID Button"),e("🆕","New Button"),e("🆖","NG Button"),e("🆗","OK Button"),e("🆘","SOS Button"),e("🆙","Up! Button"),e("🆚","Vs Button"),e("🔘","Radio Button"),e("🔙","Back Arrow"),e("🔚","End Arrow"),e("🔛","On! Arrow"),e("🔜","Soon Arrow"),e("🔝","Top Arrow"),e("☑️","Check Box with Check"),e("🔠","Input Latin Uppercase"),e("🔡","Input Latin Lowercase"),e("🔢","Input Numbers"),e("🔣","Input Symbols"),e("🔤","Input Latin Letters")],music=[e("🎼","Musical Score"),e("🎶","Musical Notes"),e("🎵","Musical Note"),e("🎷","Saxophone"),e("🎸","Guitar"),e("🎹","Musical Keyboard"),e("🎺","Trumpet"),e("🎻","Violin"),e("🥁","Drum"),e("🪕","Banjo"),e("🪗","Accordion"),e("🪘","Long Drum")],weather=[e("🌄","Sunrise Over Mountains"),e("🌅","Sunrise"),e("🌆","Cityscape at Dusk"),e("🌇","Sunset"),e("🌃","Night with Stars"),e("🌂","Closed Umbrella"),e("☂️","Umbrella"),e("☔️","Umbrella with Rain Drops"),e("☃️","Snowman"),e("⛄","Snowman Without Snow"),e("☀️","Sun"),e("☁️","Cloud"),e("🌤️","Sun Behind Small Cloud"),e("⛅","Sun Behind Cloud"),e("🌥️","Sun Behind Large Cloud"),e("🌦️","Sun Behind Rain Cloud"),e("🌧️","Cloud with Rain"),e("🌨️","Cloud with Snow"),e("🌩️","Cloud with Lightning"),e("⛈️","Cloud with Lightning and Rain"),e("❄️","Snowflake"),e("🌀","Cyclone"),e("🌪️","Tornado"),e("🌬️","Wind Face"),e("🌊","Water Wave"),e("🌫️","Fog"),e("🌁","Foggy"),e("🌈","Rainbow"),e("🌡️","Thermometer")],astro=[e("🌌","Milky Way"),e("🌍","Globe Showing Europe-Africa"),e("🌎","Globe Showing Americas"),e("🌏","Globe Showing Asia-Australia"),e("🌐","Globe with Meridians"),e("🌑","New Moon"),e("🌒","Waxing Crescent Moon"),e("🌓","First Quarter Moon"),e("🌔","Waxing Gibbous Moon"),e("🌕","Full Moon"),e("🌖","Waning Gibbous Moon"),e("🌗","Last Quarter Moon"),e("🌘","Waning Crescent Moon"),e("🌙","Crescent Moon"),e("🌚","New Moon Face"),e("🌛","First Quarter Moon Face"),e("🌜","Last Quarter Moon Face"),e("🌝","Full Moon Face"),e("🌞","Sun with Face"),e("🌟","Glowing Star"),e("🌠","Shooting Star"),e("☄️","Comet"),e("🪐","Ringed Planet")],finance=[e("💰","Money Bag"),e("💱","Currency Exchange"),e("💲","Heavy Dollar Sign"),e("💳","Credit Card"),e("💴","Yen Banknote"),e("💵","Dollar Banknote"),e("💶","Euro Banknote"),e("💷","Pound Banknote"),e("💸","Money with Wings"),e("💹","Chart Increasing with Yen"),e("🪙","Coin")],writing=[e("🖊️","Pen"),e("🖋️","Fountain Pen"),e("🖌️","Paintbrush"),e("🖍️","Crayon"),e("✏️","Pencil"),e("✒️","Black Nib")],droplet=e("💧","Droplet"),dropOfBlood=e("🩸","Drop of Blood"),adhesiveBandage=e("🩹","Adhesive Bandage"),stehoscope=e("🩺","Stethoscope"),syringe=e("💉","Syringe"),pill=e("💊","Pill"),testTube=e("🧪","Test Tube"),petriDish=e("🧫","Petri Dish"),dna=e("🧬","DNA"),abacus=e("🧮","Abacus"),magnet=e("🧲","Magnet"),telescope=e("🔭","Telescope"),alembic=e("⚗️","Alembic"),gear=e("⚙️","Gear"),atomSymbol=e("⚛️","Atom Symbol"),keyboard=e("⌨️","Keyboard"),telephone=e("☎️","Telephone"),studioMicrophone=e("🎙️","Studio Microphone"),levelSlider=e("🎚️","Level Slider"),controlKnobs=e("🎛️","Control Knobs"),movieCamera=e("🎥","Movie Camera"),headphone=e("🎧","Headphone"),videoGame=e("🎮","Video Game"),lightBulb=e("💡","Light Bulb"),computerDisk=e("💽","Computer Disk"),floppyDisk=e("💾","Floppy Disk"),opticalDisk=e("💿","Optical Disk"),dvd=e("📀","DVD"),telephoneReceiver=e("📞","Telephone Receiver"),pager=e("📟","Pager"),faxMachine=e("📠","Fax Machine"),satelliteAntenna=e("📡","Satellite Antenna"),loudspeaker=e("📢","Loudspeaker"),megaphone=e("📣","Megaphone"),mobilePhone=e("📱","Mobile Phone"),mobilePhoneWithArrow=e("📲","Mobile Phone with Arrow"),mobilePhoneVibrating=e("📳","Mobile Phone Vibrating"),mobilePhoneOff=e("📴","Mobile Phone Off"),noMobilePhone=e("📵","No Mobile Phone"),antennaBars=e("📶","Antenna Bars"),camera=e("📷","Camera"),cameraWithFlash=e("📸","Camera with Flash"),videoCamera=e("📹","Video Camera"),television=e("📺","Television"),radio=e("📻","Radio"),videocassette=e("📼","Videocassette"),filmProjector=e("📽️","Film Projector"),dimButton=e("🔅","Dim Button"),brightButton=e("🔆","Bright Button"),mutedSpeaker=e("🔇","Muted Speaker"),speakerLowVolume=e("🔈","Speaker Low Volume"),speakerMediumVolume=e("🔉","Speaker Medium Volume"),speakerHighVolume=e("🔊","Speaker High Volume"),battery=e("🔋","Battery"),electricPlug=e("🔌","Electric Plug"),magnifyingGlassTiltedLeft=e("🔍","Magnifying Glass Tilted Left"),magnifyingGlassTiltedRight=e("🔎","Magnifying Glass Tilted Right"),lockedWithPen=e("🔏","Locked with Pen"),lockedWithKey=e("🔐","Locked with Key"),key=e("🔑","Key"),locked=e("🔒","Locked"),unlocked=e("🔓","Unlocked"),bell=e("🔔","Bell"),bellWithSlash=e("🔕","Bell with Slash"),bookmark=e("🔖","Bookmark"),link=e("🔗","Link"),joystick=e("🕹️","Joystick"),desktopComputer=e("🖥️","Desktop Computer"),printer=e("🖨️","Printer"),computerMouse=e("🖱️","Computer Mouse"),trackball=e("🖲️","Trackball"),clamp$1=e("🗜","Compression"),oldKey=e("🗝","Old Key"),tech=[joystick,videoGame,lightBulb,laptop,briefcase,computerDisk,floppyDisk,opticalDisk,dvd,desktopComputer,keyboard,printer,computerMouse,trackball,telephone,telephoneReceiver,pager,faxMachine,satelliteAntenna,loudspeaker,megaphone,television,radio,videocassette,filmProjector,studioMicrophone,levelSlider,controlKnobs,microphone,movieCamera,headphone,camera,cameraWithFlash,videoCamera,mobilePhone,mobilePhoneOff,mobilePhoneWithArrow,lockedWithPen,lockedWithKey,locked,unlocked,bell,bellWithSlash,bookmark,link,mobilePhoneVibrating,antennaBars,dimButton,brightButton,mutedSpeaker,speakerLowVolume,speakerMediumVolume,speakerHighVolume,battery,electricPlug],mail=[e("📤","Outbox Tray"),e("📥","Inbox Tray"),e("📦","Package"),e("📧","E-Mail"),e("📨","Incoming Envelope"),e("📩","Envelope with Arrow"),e("📪","Closed Mailbox with Lowered Flag"),e("📫","Closed Mailbox with Raised Flag"),e("📬","Open Mailbox with Raised Flag"),e("📭","Open Mailbox with Lowered Flag"),e("📮","Postbox"),e("📯","Postal Horn")],celebration=[e("🪅","Piñata"),e("🎀","Ribbon"),e("🎁","Wrapped Gift"),e("🎃","Jack-O-Lantern"),e("🎄","Christmas Tree"),e("🧨","Firecracker"),e("🎆","Fireworks"),e("🎇","Sparkler"),e("✨","Sparkles"),e("❇️","Sparkle"),e("🎈","Balloon"),e("🎉","Party Popper"),e("🎊","Confetti Ball"),e("🎋","Tanabata Tree"),e("🎍","Pine Decoration"),e("🎎","Japanese Dolls"),e("🎏","Carp Streamer"),e("🎐","Wind Chime"),e("🎑","Moon Viewing Ceremony"),e("🎒","Backpack"),graduationCap,e("🧧","Red Envelope"),e("🏮","Red Paper Lantern"),e("🎖️","Military Medal")],tools=[e("🎣","Fishing Pole"),e("🔦","Flashlight"),wrench,e("🔨","Hammer"),e("🔩","Nut and Bolt"),e("🛠️","Hammer and Wrench"),e("🧭","Compass"),e("🧯","Fire Extinguisher"),e("🧰","Toolbox"),e("🧱","Brick"),e("🪓","Axe"),e("⚒️","Hammer and Pick"),e("⛏️","Pick"),e("⛑️","Rescue Worker’s Helmet"),e("⛓️","Chains"),clamp$1,e("🪚","Carpentry Saw"),e("🪛","Screwdriver"),e("🪜","Ladder"),e("🪝","Hook")],office=[e("📁","File Folder"),e("📂","Open File Folder"),e("📃","Page with Curl"),e("📄","Page Facing Up"),e("📅","Calendar"),e("📆","Tear-Off Calendar"),e("📇","Card Index"),e("🗂️","Card Index Dividers"),e("🗃️","Card File Box"),e("🗄️","File Cabinet"),e("🗑️","Wastebasket"),e("🗒️","Spiral Notepad"),e("🗓️","Spiral Calendar"),e("📈","Chart Increasing"),e("📉","Chart Decreasing"),e("📊","Bar Chart"),e("📋","Clipboard"),e("📌","Pushpin"),e("📍","Round Pushpin"),e("📎","Paperclip"),e("🖇️","Linked Paperclips"),e("📏","Straight Ruler"),e("📐","Triangular Ruler"),e("📑","Bookmark Tabs"),e("📒","Ledger"),e("📓","Notebook"),e("📔","Notebook with Decorative Cover"),e("📕","Closed Book"),e("📖","Open Book"),e("📗","Green Book"),e("📘","Blue Book"),e("📙","Orange Book"),e("📚","Books"),e("📛","Name Badge"),e("📜","Scroll"),e("📝","Memo"),e("✂️","Scissors"),e("✉️","Envelope")],signs=[e("🎦","Cinema"),noMobilePhone,e("🔞","No One Under Eighteen"),e("🚫","Prohibited"),e("🚬","Cigarette"),e("🚭","No Smoking"),e("🚮","Litter in Bin Sign"),e("🚯","No Littering"),e("🚰","Potable Water"),e("🚱","Non-Potable Water"),e("🚳","No Bicycles"),e("🚷","No Pedestrians"),e("🚸","Children Crossing"),e("🚹","Men’s Room"),e("🚺","Women’s Room"),e("🚻","Restroom"),e("🚼","Baby Symbol"),e("🚾","Water Closet"),e("🛂","Passport Control"),e("🛃","Customs"),e("🛄","Baggage Claim"),e("🛅","Left Luggage"),e("🅿️","Parking Button"),e("♿","Wheelchair Symbol"),e("☢️","Radioactive"),e("☣️","Biohazard"),e("⚠️","Warning"),e("⚡","High Voltage"),e("⛔","No Entry"),e("♻️","Recycling Symbol"),e("♀️","Female Sign"),e("♂️","Male Sign"),e("⚧️","Transgender Symbol")],religion=[e("🔯","Dotted Six-Pointed Star"),e("✡️","Star of David"),e("🕉️","Om"),e("🕋","Kaaba"),e("🕌","Mosque"),e("🕍","Synagogue"),e("🕎","Menorah"),e("🛐","Place of Worship"),e("🛕","Hindu Temple"),e("☦️","Orthodox Cross"),e("✝️","Latin Cross"),e("☪️","Star and Crescent"),e("☮️","Peace Symbol"),e("☯️","Yin Yang"),e("☸️","Wheel of Dharma"),e("♾️","Infinity"),e("🪔","Diya Lamp"),e("⛩️","Shinto Shrine"),e("⛪","Church"),e("✴️","Eight-Pointed Star"),e("📿","Prayer Beads")],door=e("🚪","Door"),household=[e("💄","Lipstick"),e("💍","Ring"),e("💎","Gem Stone"),e("📰","Newspaper"),key,e("🔥","Fire"),e("🪨","Rock"),e("🪵","Wood"),e("🔫","Pistol"),e("🕯️","Candle"),e("🖼️","Framed Picture"),oldKey,e("🗞️","Rolled-Up Newspaper"),e("🗺️","World Map"),door,e("🚽","Toilet"),e("🚿","Shower"),e("🛁","Bathtub"),e("🛋️","Couch and Lamp"),e("🛏️","Bed"),e("🧴","Lotion Bottle"),e("🧵","Thread"),e("🧶","Yarn"),e("🧷","Safety Pin"),e("🧸","Teddy Bear"),e("🧹","Broom"),e("🧺","Basket"),e("🧻","Roll of Paper"),e("🧼","Soap"),e("🧽","Sponge"),e("🪑","Chair"),e("🪒","Razor"),e("🪞","Mirror"),e("🪟","Window"),e("🪠","Plunger"),e("🪡","Sewing Needle"),e("🪢","Knot"),e("🪣","Bucket"),e("🪤","Mouse Trap"),e("🪥","Toothbrush"),e("🪦","Headstone"),e("🪧","Placard"),e("🎗️","Reminder Ribbon")],activities=[e("🎞️","Film Frames"),e("🎟️","Admission Tickets"),e("🎠","Carousel Horse"),e("🎡","Ferris Wheel"),e("🎢","Roller Coaster"),artistPalette,e("🎪","Circus Tent"),e("🎫","Ticket"),e("🎬","Clapper Board"),e("🎭","Performing Arts")],travel=[e("🏷️","Label"),e("🌋","Volcano"),e("🏔️","Snow-Capped Mountain"),e("⛰️","Mountain"),e("🏕️","Camping"),e("🏖️","Beach with Umbrella"),e("⛱️","Umbrella on Ground"),e("🏯","Japanese Castle"),e("👣","Footprints"),e("🗻","Mount Fuji"),e("🗼","Tokyo Tower"),e("🗽","Statue of Liberty"),e("🗾","Map of Japan"),e("🗿","Moai"),e("🛎️","Bellhop Bell"),e("🧳","Luggage"),e("⛳","Flag in Hole"),e("⛺","Tent"),e("♨️","Hot Springs")],medieval=[e("🏰","Castle"),e("🏹","Bow and Arrow"),crown,e("🔱","Trident Emblem"),e("🗡️","Dagger"),e("🛡️","Shield"),e("🔮","Crystal Ball"),e("🪄","Magic Wand"),e("⚔️","Crossed Swords"),e("⚜️","Fleur-de-lis"),e("🪖","Military Helmet")],questionMark=e("❓","Question Mark"),squareFourCourners=e("⛶️","Square: Four Corners"),dice1=e("⚀","Dice: Side 1"),dice2=e("⚁","Dice: Side 2"),dice3=e("⚂","Dice: Side 3"),dice4=e("⚃","Dice: Side 4"),dice5=e("⚄","Dice: Side 5"),dice6=e("⚅","Dice: Side 6"),dice=g(e(dice3.value,"Dice"),dice1,dice2,dice3,dice4,dice5,dice6),whiteChessKing=e("♔","White Chess King"),whiteChessQueen=e("♕","White Chess Queen"),whiteChessRook=e("♖","White Chess Rook"),whiteChessBishop=e("♗","White Chess Bishop"),whiteChessKnight=e("♘","White Chess Knight"),whiteChessPawn=e("♙","White Chess Pawn"),whiteChessPieces=Object.assign(g(e(whiteChessKing.value+whiteChessQueen.value+whiteChessRook.value+whiteChessBishop.value+whiteChessKnight.value+whiteChessPawn.value,"White Chess Pieces"),whiteChessKing,whiteChessQueen,whiteChessRook,whiteChessBishop,whiteChessKnight,whiteChessPawn),{width:"auto",king:whiteChessKing,queen:whiteChessQueen,rook:whiteChessRook,bishop:whiteChessBishop,knight:whiteChessKnight,pawn:whiteChessPawn}),blackChessKing=e("♚","Black Chess King"),blackChessQueen=e("♛","Black Chess Queen"),blackChessRook=e("♜","Black Chess Rook"),blackChessBishop=e("♝","Black Chess Bishop"),blackChessKnight=e("♞","Black Chess Knight"),blackChessPawn=e("♟","Black Chess Pawn"),blackChessPieces=Object.assign(g(e(blackChessKing.value+blackChessQueen.value+blackChessRook.value+blackChessBishop.value+blackChessKnight.value+blackChessPawn.value,"Black Chess Pieces"),blackChessKing,blackChessQueen,blackChessRook,blackChessBishop,blackChessKnight,blackChessPawn),{width:"auto",king:blackChessKing,queen:blackChessQueen,rook:blackChessRook,bishop:blackChessBishop,knight:blackChessKnight,pawn:blackChessPawn}),chessPawns=Object.assign(g(e(whiteChessPawn.value+blackChessPawn.value,"Chess Pawns"),whiteChessPawn,blackChessPawn),{width:"auto",white:whiteChessPawn,black:blackChessPawn}),chessRooks=Object.assign(g(e(whiteChessRook.value+blackChessRook.value,"Chess Rooks"),whiteChessRook,blackChessRook),{width:"auto",white:whiteChessRook,black:blackChessRook}),chessBishops=Object.assign(g(e(whiteChessBishop.value+blackChessBishop.value,"Chess Bishops"),whiteChessBishop,blackChessBishop),{width:"auto",white:whiteChessBishop,black:blackChessBishop}),chessKnights=Object.assign(g(e(whiteChessKnight.value+blackChessKnight.value,"Chess Knights"),whiteChessKnight,blackChessKnight),{width:"auto",white:whiteChessKnight,black:blackChessKnight}),chessQueens=Object.assign(g(e(whiteChessQueen.value+blackChessQueen.value,"Chess Queens"),whiteChessQueen,blackChessQueen),{width:"auto",white:whiteChessQueen,black:blackChessQueen}),chessKings=Object.assign(g(e(whiteChessKing.value+blackChessKing.value,"Chess Kings"),whiteChessKing,blackChessKing),{width:"auto",white:whiteChessKing,black:blackChessKing}),chess=Object.assign(g(e(chessKings.value,"Chess Pieces"),whiteChessPieces,blackChessPieces,chessPawns,chessRooks,chessBishops,chessKnights,chessQueens,chessKings),{width:"auto",white:whiteChessPieces,black:blackChessPieces,pawns:chessPawns,rooks:chessRooks,bishops:chessBishops,knights:chessKnights,queens:chessQueens,kings:chessKings}),science=[droplet,dropOfBlood,adhesiveBandage,stehoscope,syringe,pill,microscope,testTube,petriDish,dna,abacus,magnet,telescope,medical,balanceScale,alembic,gear,atomSymbol,magnifyingGlassTiltedLeft,magnifyingGlassTiltedRight],allIcons={faces:faces,love:love,cartoon:cartoon,hands:hands,bodyParts:bodyParts,people:people,gestures:gestures,inMotion:inMotion,resting:resting,roles:roles,fantasy:fantasy,animals:animals,plants:plants,food:food,sweets:sweets,drinks:drinks,utensils:utensils,flags:flags,vehicles:vehicles,bloodTypes:bloodTypes,japanese:japanese,time:time,clocks:clocks,arrows:arrows,shapes:shapes,mediaPlayer:mediaPlayer,zodiac:zodiac,chess:chess,math:math,games:games,sportsEquipment:sportsEquipment,clothing:clothing,town:town,buttons:buttons,music:music,weather:weather,astro:astro,finance:finance,writing:writing,science:science,tech:tech,mail:mail,celebration:celebration,tools:tools,office:office,signs:signs,religion:religion,household:household,activities:activities,travel:travel,medieval:medieval};class FormDialog extends EventTarget{constructor(e,...t){super();const i=style({display:"grid",width:"100%",height:"100%",gridTemplateColumns:"5fr 1fr 1fr",gridTemplateRows:"auto auto 1fr auto auto",overflowY:"hidden"});this.element=document.getElementById(e)||Div(id(e),className("dialog"),H1(...t)),i.apply(this.element),style({gridArea:"1/1/2/4"}).apply(this.element.querySelector("h1")),this.header=this.element.querySelector(".header")||this.element.appendChild(Div(className("header"))),style({gridArea:"2/1/3/4"}).apply(this.header),this.content=this.element.querySelector(".content")||this.element.appendChild(Div(className("content"))),style({padding:"1em",overflowY:"scroll",gridArea:"3/1/4/4"}).apply(this.content),this.footer=this.element.querySelector(".footer")||this.element.appendChild(Div(className("footer"))),style({display:"flex",flexDirection:"row-reverse",gridArea:"4/1/5/4"}).apply(this.footer)}get isOpen(){return this.element.isOpen()}set isOpen(e){e!==this.isOpen&&this.toggleOpen()}appendChild(e){return this.element.appendChild(e)}append(...e){this.element.append(...e)}show(){this.element.show("grid")}hide(){this.element.hide()}toggleOpen(){this.element.toggleOpen("grid")}}const headerStyle=style({textDecoration:"none",color:"black",textTransform:"capitalize"}),buttonStyle=style({fontSize:"200%",width:"2em"}),cancelEvt=new Event("emojiCanceled");class EmojiForm extends FormDialog{constructor(){super("emoji","Emoji"),this.header.append(H2("Recent"),this.recent=P("(None)"));const e=[],t=[];let i=null,n=0;function s(e,t){let i=e.value,n=i.indexOf(emojiStyle.value);return-1===n&&(n=i.indexOf(textStyle.value)),n>=0&&(i=i.substring(0,n)),{value:i+t.value,desc:e.desc+"/"+t.desc}}const a=(e,o,r)=>{e=e.alts||e;for(let l of e){const e=r?UL():Span(),c=Button(title(l.desc),buttonStyle,onClick(e=>{i=i&&e.ctrlKey?s(i,l):l,this.preview.innerHTML=`${i.value} - ${i.desc}`,this.confirmButton.unlock(),u&&(u.toggleOpen(),c.innerHTML=l.value+(u.isOpen()?"-":"+"))}),l.value);let u=null;r?(c.id="emoji-with-alt-"+n++,e.appendChild(LI(c,Label(htmlFor(c.id),l.desc)))):e.appendChild(c),l.alts&&(u=Div(),t.push(u),a(l.alts,u,!0),u.hide(),e.appendChild(u),c.style.width="3em",c.innerHTML+="+"),l.width&&(c.style.width=l.width),l.color&&(c.style.color=l.color),o.appendChild(e)}};for(let e of Object.keys(allIcons))if("combiners"!==e){const t=H1(),i=P(),n=A(href("javascript:undefined"),title(e),headerStyle,onClick(()=>{i.toggleOpen(),n.innerHTML=e+(i.isOpen()?" -":" +")}),e+" -");a(allIcons[e],i),t.appendChild(n),this.content.appendChild(t),this.content.appendChild(i)}this.footer.append(this.confirmButton=Button(className("confirm"),"OK",onClick(()=>{-1===e.indexOf(i)&&(e.push(i),this.recent.innerHTML="",a(e,this.recent)),this.hide(),this.dispatchEvent(new EmojiSelectedEvent(i))})),Button(className("cancel"),"Cancel",onClick(()=>{this.confirmButton.lock(),this.hide(),this.dispatchEvent(cancelEvt)})),this.preview=Span(style({gridArea:"4/1/5/4"}))),this.confirmButton.lock(),this.selectAsync=()=>new Promise((e,i)=>{let n=null,s=null;const a=()=>{this.removeEventListener("emojiSelected",n),this.removeEventListener("emojiCanceled",s)};n=t=>{a();try{e(t.emoji)}catch(e){i(e)}},s=()=>{a(),e(null)},this.addEventListener("emojiSelected",n),this.addEventListener("emojiCanceled",s),(()=>{for(let e of t)e.hide()})(),this.show()})}}class EmojiSelectedEvent extends Event{constructor(e){super("emojiSelected"),this.emoji=e}}function Run(...e){return Span(style({margin:"auto"}),...e)}const toggleAudioEvt=new Event("toggleAudio"),toggleVideoEvt=new Event("toggleVideo"),emoteEvt=new Event("emote"),selectEmojiEvt=new Event("selectEmoji"),subelStyle=style({fontSize:"1.25em",width:"3em",height:"100%"}),subButtonStyle=style({fontSize:"1.25em",height:"100%"});class FooterBar extends EventTarget{constructor(){super();const e=e=>()=>this.dispatchEvent(e);this.muteAudioButton=null,this.element=Div(id("footbar"),style({gridTemplateColumns:"auto 1fr auto",display:"grid",padding:"4px",width:"100%",columnGap:"5px",backgroundColor:"transparent"}),this.muteAudioButton=Button(title("Toggle audio mute/unmute"),onClick(e(toggleAudioEvt)),grid(1,1),subelStyle,Run(speakerHighVolume.value)),this.emojiControl=Span(grid(2,1),style({textAlign:"center"}),subButtonStyle,Button(title("Emote"),onClick(e(emoteEvt)),subButtonStyle,style({borderRight:"none"}),this.emoteButton=Run("Emote")),Button(title("Select Emoji"),onClick(e(selectEmojiEvt)),subButtonStyle,style({borderLeft:"none"}),Run(upwardsButton.value))),this.muteVideoButton=Button(title("Toggle video mute/unmute"),onClick(e(toggleVideoEvt)),grid(3,1),subelStyle,Run(noMobilePhone.value))),this._audioEnabled=!0,this._videoEnabled=!1,Object.seal(this)}get enabled(){return!this.muteAudioButton.disabled}set enabled(e){for(let t of this.element.querySelectorAll("button"))t.disabled=!e}get audioEnabled(){return this._audioEnabled}set audioEnabled(e){this._audioEnabled=e,this.muteAudioButton.updateLabel(e,speakerHighVolume.value,mutedSpeaker.value)}get videoEnabled(){return this._videoEnabled}set videoEnabled(e){this._videoEnabled=e,this.muteVideoButton.updateLabel(e,videoCamera.value,noMobilePhone.value)}setEmojiButton(e,t){this.emoteButton.innerHTML=t.value}}function Run$1(...e){return Span(style({margin:"auto"}),...e)}const toggleOptionsEvt=new Event("toggleOptions"),tweetEvt=new Event("tweet"),leaveEvt=new Event("leave"),toggleFullscreenEvt=new Event("toggleFullscreen"),toggleInstructionsEvt=new Event("toggleInstructions"),toggleUserDirectoryEvt=new Event("toggleUserDirectory"),subelStyle$1=style({fontSize:"1.25em",width:"3em",height:"100%",pointerEvents:"all"});class HeaderBar extends EventTarget{constructor(){super();const e=e=>()=>this.dispatchEvent(e);this.element=Div(id("headbar"),style({gridTemplateColumns:"auto auto auto auto 1fr auto auto",display:"grid",padding:"4px",width:"100%",columnGap:"5px",backgroundColor:"transparent",pointerEvents:"none"}),this.optionsButton=Button(title("Show/hide options"),onClick(e(toggleOptionsEvt)),subelStyle$1,grid(1,1),Run$1(gear.value)),this.instructionsButton=Button(title("Show/hide instructions"),onClick(e(toggleInstructionsEvt)),subelStyle$1,grid(2,1),Run$1(questionMark.value)),Button(title("Share your current room to twitter"),onClick(e(tweetEvt)),subelStyle$1,grid(3,1),Img(src("https://cdn2.iconfinder.com/data/icons/minimalism/512/twitter.png"),alt("icon"),role("presentation"),style({height:"1.75em",marginTop:"3px",marginBottom:"-3px"}))),Button(title("View user directory"),onClick(e(toggleUserDirectoryEvt)),subelStyle$1,grid(4,1),Run$1(speakingHead.value)),this.fullscreenButton=Button(title("Toggle fullscreen"),onClick(e(toggleFullscreenEvt)),subelStyle$1,grid(6,1),Run$1(squareFourCourners.value)),Button(title("Leave the room"),onClick(e(leaveEvt)),subelStyle$1,grid(7,1),Run$1(door.value))),Object.seal(this)}get isFullscreen(){return null!==document.fullscreenElement}set isFullscreen(e){e?document.body.requestFullscreen():document.exitFullscreen(),this.fullscreenButton.updateLabel(e,downRightArrow.value,squareFourCourners.value)}get enabled(){return!this.instructionsButton.disabled}set enabled(e){for(let t of this.element.querySelectorAll("button"))t.disabled=!e}}const loginEvt=new Event("login"),defaultRooms=new Map([["calla","Calla"],["island","Island"],["alxcc","Alexandria Code & Coffee"],["vurv","Vurv"]]),selfs=new Map;class LoginForm extends FormDialog{constructor(){super("login");const e=Object.seal({ready:!1,connecting:!1,connected:!1,validate:()=>{const e=this.roomName.length>0&&this.userName.length>0;this.connectButton.setLocked(!this.ready||this.connecting||this.connected||!e),this.connectButton.innerHTML=this.connected?"Connected":this.connecting?"Connecting...":this.ready?"Connect":"Loading..."}});selfs.set(this,e),this.roomLabel=this.element.querySelector("label[for='roomSelector']"),this.roomSelect=SelectBox("No rooms available",e=>e,e=>defaultRooms.get(e),this.element.querySelector("#roomSelector")),this.roomSelect.addEventListener("input",()=>{e.validate()}),this.roomSelect.emptySelectionEnabled=!1,this.roomSelect.values=defaultRooms.keys(),this.roomSelect.selectedIndex=0,this.roomInput=this.element.querySelector("#roomName"),this.roomInput.addEventListener("input",e.validate),this.roomInput.addEventListener("enter",()=>{this.userNameInput.focus()}),this.userNameInput=this.element.querySelector("#userName"),this.userNameInput.addEventListener("input",e.validate),this.userNameInput.addEventListener("enter",()=>{this.roomName.length>0&&this.userName.length>0?this.connectButton.click():0===this.userName.length?this.userNameInput.focus():this.roomSelectMode?this.roomSelect.focus():this.roomInput.focus()}),this.createRoomButton=this.element.querySelector("#createNewRoom"),this.createRoomButton.addEventListener("click",()=>{this.roomSelectMode=!this.roomSelectMode}),this.connectButton=this.element.querySelector("#connect"),this.addEventListener("login",()=>{this.connecting=!0}),this.roomSelectMode=!0,e.validate()}addEventListener(e,t,i){"login"===e?this.connectButton.addEventListener("click",t,i):super.addEventListener(e,t,i)}removeEventListener(e,t){"login"===e?this.connectButton.removeEventListener("click",t):super.removeEventListener(e,t)}get roomSelectMode(){return"none"!==this.roomSelect.style.display}set roomSelectMode(e){const t=selfs.get(this);this.roomSelect.setOpen(e),this.roomInput.setOpen(!e),this.createRoomButton.innerHTML=e?"New":"Cancel",e?(this.roomLabel.htmlFor=this.roomSelect.id,this.roomSelect.selectedValue=this.roomInput.value.toLocaleLowerCase()):this.roomSelect.selectedIndex>=0&&(this.roomLabel.htmlFor=this.roomInput.id,this.roomInput.value=this.roomSelect.selectedValue),t.validate()}get roomName(){const e=this.roomSelectMode?this.roomSelect.selectedValue:this.roomInput.value;return e&&e.toLocaleLowerCase()||""}set roomName(e){null!=e&&0!==e.length||(e=defaultRooms.keys().next()),this.roomInput.value=e,this.roomSelect.selectedValue=e,this.roomSelectMode=this.roomSelect.contains(e),selfs.get(this).validate()}set userName(e){this.userNameInput.value=e,selfs.get(this).validate()}get userName(){return this.userNameInput.value}get connectButtonText(){return this.connectButton.innerText||this.connectButton.textContent}set connectButtonText(e){this.connectButton.innerHTML=e}get ready(){return selfs.get(this).ready}set ready(e){const t=selfs.get(this);t.ready=e,t.validate()}get connecting(){return selfs.get(this).connecting}set connecting(e){const t=selfs.get(this);t.connecting=e,t.validate()}get connected(){return selfs.get(this).connected}set connected(e){selfs.get(this).connected=e,this.connecting=!1}show(){this.ready=!0,super.show()}}const gamepadStates=new Map;class EventedGamepad extends EventTarget{constructor(e){if(super(),!(e instanceof Gamepad))throw new Error("Value must be a Gamepad");this.id=e.id,this.displayId=e.displayId,this.connected=e.connected,this.hand=e.hand,this.pose=e.pose;const t={btnDownEvts:[],btnUpEvts:[],btnState:[],axisMaxed:[],axisMaxEvts:[],sticks:[]};this.lastButtons=[],this.buttons=[],this.axes=[],this.hapticActuators=[],this.axisThresholdMax=.9,this.axisThresholdMin=.1,this._isStick=t=>t%2==0&&t<e.axes.length-1;for(let i=0;i<e.buttons.length;++i)t.btnDownEvts[i]=Object.assign(new Event("gamepadbuttondown"),{button:i}),t.btnUpEvts[i]=Object.assign(new Event("gamepadbuttonup"),{button:i}),t.btnState[i]=!1,this.lastButtons[i]=null,this.buttons[i]=e.buttons[i];for(let i=0;i<e.axes.length;++i)t.axisMaxEvts[i]=Object.assign(new Event("gamepadaxismaxed"),{axis:i}),t.axisMaxed[i]=!1,this._isStick(i)&&(t.sticks[i/2]={x:0,y:0}),this.axes[i]=e.axes[i];if(void 0!==e.hapticActuators)for(let t=0;t<e.hapticActuators.length;++t)this.hapticActuators[t]=e.hapticActuators[t];Object.seal(this),gamepadStates.set(this,t)}dispose(){gamepadStates.delete(this)}update(e){if(!(e instanceof Gamepad))throw new Error("Value must be a Gamepad");this.connected=e.connected,this.hand=e.hand,this.pose=e.pose;const t=gamepadStates.get(this);for(let i=0;i<e.buttons.length;++i){const n=t.btnState[i],s=e.buttons[i].pressed;s!==n&&(t.btnState[i]=s,this.dispatchEvent((s?t.btnDownEvts:t.btnUpEvts)[i])),this.lastButtons[i]=this.buttons[i],this.buttons[i]=e.buttons[i]}for(let i=0;i<e.axes.length;++i){const n=t.axisMaxed[i],s=e.axes[i],a=Math.sign(s),o=Math.abs(s),r=o>=this.axisThresholdMax,l=o<=this.axisThresholdMin;r&&!n&&this.dispatchEvent(t.axisMaxEvts[i]),this.axes[i]=a*(r?1:l?0:o)}for(let e=0;e<this.axes.length-1;e+=2){const i=t.sticks[e/2];i.x=this.axes[e],i.y=this.axes[e+1]}if(void 0!==e.hapticActuators)for(let t=0;t<e.hapticActuators.length;++t)this.hapticActuators[t]=e.hapticActuators[t]}}const tickEvt=Object.assign(new Event("tick"),{dt:0});class BaseTimer extends EventTarget{constructor(e){super(),this._lt=0,this._timer=null,this.targetFrameRate=e}_onTick(e){tickEvt.dt=e,this.dispatchEvent(tickEvt)}restart(){this.stop(),this.start()}get isRunning(){return null!==this._timer}start(){throw new Error("Not implemented in base class")}stop(){this._timer=null}get targetFrameRate(){return this._targetFPS}set targetFrameRate(e){this._targetFPS=e,this._frameTime=1e3/e}}class RequestAnimationFrameTimer extends BaseTimer{constructor(){super(60)}start(){const e=t=>{const i=t-this._lt;this._lt=t,this._timer=requestAnimationFrame(e),this._onTick(i)};this._lt=performance.now(),this._timer=requestAnimationFrame(e)}stop(){this.isRunning&&(cancelAnimationFrame(this._timer),super.stop())}get targetFrameRate(){return super.targetFrameRate}set targetFrameRate(e){console.warn("You cannot change the target framerate for requestAnimationFrame")}}const inputBindingChangedEvt=new Event("inputBindingChanged");class InputBinding extends EventTarget{constructor(){super();const e=new Map([["keyButtonUp","ArrowUp"],["keyButtonDown","ArrowDown"],["keyButtonLeft","ArrowLeft"],["keyButtonRight","ArrowRight"],["keyButtonEmote","e"],["keyButtonToggleAudio","a"],["gpAxisLeftRight",0],["gpAxisUpDown",1],["gpButtonUp",12],["gpButtonDown",13],["gpButtonLeft",14],["gpButtonRight",15],["gpButtonEmote",0],["gpButtonToggleAudio",1]]);for(let t of e.keys())Object.defineProperty(this,t,{get:()=>e.get(t),set:i=>{e.has(t)&&i!==e.get(t)&&(e.set(t,i),this.dispatchEvent(inputBindingChangedEvt))}});this.clone=()=>{const t={};for(let i of e.entries())t[i[0]]=i[1];return t},Object.freeze(this)}}const keyWidthStyle=style({width:"7em"}),numberWidthStyle=style({width:"3em"}),avatarUrlChangedEvt=new Event("avatarURLChanged"),gamepadChangedEvt=new Event("gamepadChanged"),selectAvatarEvt=new Event("selectAvatar"),fontSizeChangedEvt=new Event("fontSizeChanged"),inputBindingChangedEvt$1=new Event("inputBindingChanged"),audioPropsChangedEvt=new Event("audioPropertiesChanged"),toggleDrawHearingEvt=new Event("toggleDrawHearing"),audioInputChangedEvt=new Event("audioInputChanged"),audioOutputChangedEvt=new Event("audioOutputChanged"),videoInputChangedEvt=new Event("videoInputChanged"),gamepadButtonUpEvt=Object.assign(new Event("gamepadbuttonup"),{button:0}),gamepadAxisMaxedEvt=Object.assign(new Event("gamepadaxismaxed"),{axis:0}),selfs$1=new Map;class OptionsForm extends FormDialog{constructor(){super("options","Options");const e=e=>()=>this.dispatchEvent(e),t={inputBinding:new InputBinding,timer:new RequestAnimationFrameTimer,pad:null};selfs$1.set(this,t);const i=onInput(e(audioPropsChangedEvt)),n=(e,i)=>{const n=LabeledInput(e,"text",i,keyWidthStyle,onKeyUp(i=>{"Tab"!==i.key&&"Shift"!==i.key&&(n.value=t.inputBinding[e]=i.key,this.dispatchEvent(inputBindingChangedEvt$1))}));return n.value=t.inputBinding[e],n},s=(e,i)=>{const n=LabeledInput(e,"text",i,numberWidthStyle);return this.addEventListener("gamepadbuttonup",i=>{document.activeElement===n.input&&(n.value=t.inputBinding[e]=i.button,this.dispatchEvent(inputBindingChangedEvt$1))}),n.value=t.inputBinding[e],n},a=(e,i)=>{const n=LabeledInput(e,"text",i,numberWidthStyle);return this.addEventListener("gamepadaxismaxed",i=>{document.activeElement===n.input&&(n.value=t.inputBinding[e]=i.axis,this.dispatchEvent(inputBindingChangedEvt$1))}),n.value=t.inputBinding[e],n},o=[OptionPanel("avatar","Avatar",this.avatarURLInput=LabeledInput("avatarURL","text","Avatar URL: ",placeHolder("https://example.com/me.png"),onInput(e(avatarUrlChangedEvt)))," or ",this.avatarEmojiInput=Div(Label(htmlFor("selectAvatarEmoji"),"Avatar Emoji: "),this.avatarEmojiPreview=Span(bust.value),Button(id("selectAvatarEmoji"),"Select",onClick(e(selectAvatarEvt))))),OptionPanel("interface","Interface",this.fontSizeInput=LabeledInput("fontSize","number","Font size: ",value(10),min(5),max(32),style({width:"3em"}),onInput(e(fontSizeChangedEvt))),P(this.drawHearingCheck=LabeledInput("drawHearing","checkbox","Draw hearing range: ",onInput(()=>{this.drawHearing=!this.drawHearing,this.dispatchEvent(toggleDrawHearingEvt)})),this.audioMinInput=LabeledInput("minAudio","number","Min: ",value(1),min(0),max(100),numberWidthStyle,i),this.audioMaxInput=LabeledInput("maxAudio","number","Min: ",value(10),min(0),max(100),numberWidthStyle,i),this.audioRolloffInput=LabeledInput("rollof","number","Rollof: ",value(1),min(.1),max(10),step(.1),numberWidthStyle,i))),OptionPanel("keyboard","Keyboard",this.keyButtonUp=n("keyButtonUp","Up: "),this.keyButtonDown=n("keyButtonDown","Down: "),this.keyButtonLeft=n("keyButtonLeft","Left: "),this.keyButtonRight=n("keyButtonRight","Right: "),this.keyButtonEmote=n("keyButtonEmote","Emote: "),this.keyButtonToggleAudio=n("keyButtonToggleAudio","Toggle audio: ")),OptionPanel("gamepad","Gamepad",this.gpSelect=LabeledSelectBox("gamepads","Use gamepad: ","No gamepad",e=>e.id,e=>e.id,onInput(e(gamepadChangedEvt))),this.gpAxisLeftRight=a("gpAxisLeftRight","Left/Right axis:"),this.gpAxisUpDown=a("gpAxisUpDown","Up/Down axis:"),this.gpButtonUp=s("gpButtonUp","Up button: "),this.gpButtonDown=s("gpButtonDown","Down button: "),this.gpButtonLeft=s("gpButtonLeft","Left button: "),this.gpButtonRight=s("gpButtonRight","Right button: "),this.gpButtonEmote=s("gpButtonEmote","Emote button: "),this.gpButtonToggleAudio=s("gpButtonToggleAudio","Toggle audio button: ")),OptionPanel("devices","Devices",this.videoInputSelect=LabeledSelectBox("videoInputDevices","Video Input: ","No video input",e=>e.deviceId,e=>e.label,onInput(e(videoInputChangedEvt))),this.audioInputSelect=LabeledSelectBox("audioInputDevices","Audio Input: ","No audio input",e=>e.deviceId,e=>e.label,onInput(e(audioInputChangedEvt))),this.audioOutputSelect=LabeledSelectBox("audioOutputDevices","Audio Output: ","No audio output",e=>e.deviceId,e=>e.label,onInput(e(audioOutputChangedEvt))))],r=[];for(let e=0;e<o.length;++e)r[e]="1fr",o[e].element.style.gridColumnStart=e+1,o[e].button.style.fontSize="24pt";Object.assign(this.header.style,{display:"grid",gridTemplateColumns:r.join(" ")}),this.header.append(...o.map(e=>e.button)),this.content.append(...o.map(e=>e.element)),style({backgroundColor:"#ddd",borderLeft:"solid 2px black",borderRight:"solid 2px black",borderBottom:"solid 2px black"}).apply(this.content),this.footer.append(this.confirmButton=Button(className("confirm"),"Close",onClick(()=>this.hide())));const l=e=>()=>{for(let t=0;t<o.length;++t)o[t].visible=t===e;const i="gamepad"===o[e].id;t.timer.isRunning!==i&&(i?t.timer.start():t.timer.stop())};for(let e=0;e<o.length;++e)o[e].visible=0===e,o[e].addEventListener("select",l(e));t.inputBinding.addEventListener("inputBindingChanged",()=>{for(let e of Object.getOwnPropertyNames(t.inputBinding))void 0!==value[e]&&null!=this[e]&&(this[e].value=value[e])}),t.timer.addEventListener("tick",()=>{const e=this.currentGamepad;e&&(t.pad?t.pad.update(e):(t.pad=new EventedGamepad(e),t.pad.addEventListener("gamepadbuttonup",e=>{gamepadButtonUpEvt.button=e.button,this.dispatchEvent(gamepadButtonUpEvt)}),t.pad.addEventListener("gamepadaxismaxed",e=>{gamepadAxisMaxedEvt.axis=e.axis,this.dispatchEvent(gamepadAxisMaxedEvt)})))}),this.gamepads=[],this.audioInputDevices=[],this.audioOutputDevices=[],this.videoInputDevices=[],this._drawHearing=!1,this._avatarEmoji=null,Object.seal(this)}get avatarEmoji(){return this._avatarEmoji}set avatarEmoji(e){this._avatarEmoji=e,clear(this.avatarEmojiPreview),this.avatarEmojiPreview.append(Span(title(e&&e.desc||"(None)"),e&&e.value||"N/A"))}get avatarURL(){return this.avatarURLInput.value}set avatarURL(e){this.avatarURLInput.value=e}async showAsync(){this.show(),await this.confirmButton.once("click")}get inputBinding(){return selfs$1.get(this).inputBinding.clone()}set inputBinding(e){const t=selfs$1.get(this);for(let i of Object.getOwnPropertyNames(e))void 0!==t.inputBinding[i]&&void 0!==e[i]&&null!=this[i]&&(t.inputBinding[i]=this[i].value=e[i])}get gamepads(){return this.gpSelect.values}set gamepads(e){this.gpSelect.values=e}get currentGamepadIndex(){return this.gpSelect.selectedIndex}get currentGamepad(){return this.currentGamepadIndex<0?null:navigator.getGamepads()[this.currentGamepadIndex]}get audioInputDevices(){return this.audioInputSelect.values}set audioInputDevices(e){this.audioInputSelect.values=e}get currentAudioInputDevice(){return this.audioInputSelect.selectedValue}set currentAudioInputDevice(e){this.audioInputSelect.selectedValue=e}get audioOutputDevices(){return this.audioOutputSelect.values}set audioOutputDevices(e){this.audioOutputSelect.values=e}get currentAudioOutputDevice(){return this.audioOutputSelect.selectedValue}set currentAudioOutputDevice(e){this.audioOutputSelect.selectedValue=e}get videoInputDevices(){return this.videoInputSelect.values}set videoInputDevices(e){this.videoInputSelect.values=e}get currentVideoInputDevice(){return this.videoInputSelect.selectedValue}set currentVideoInputDevice(e){this.videoInputSelect.selectedValue=e}get gamepads(){return this.gpSelect.getValues()}set gamepads(e){const t=0===e.length;this.gpSelect.values=e,this.gpButtonUp.setLocked(t),this.gpButtonDown.setLocked(t),this.gpButtonLeft.setLocked(t),this.gpButtonRight.setLocked(t),this.gpButtonEmote.setLocked(t),this.gpButtonToggleAudio.setLocked(t)}get gamepadIndex(){return this.gpSelect.selectedIndex}set gamepadIndex(e){this.gpSelect.selectedIndex=e}get drawHearing(){return this._drawHearing}set drawHearing(e){this._drawHearing=e,this.drawHearingCheck.checked=e}get audioDistanceMin(){const e=parseFloat(this.audioMinInput.value);return isGoodNumber(e)?e:1}set audioDistanceMin(e){isGoodNumber(e)&&e>0&&(this.audioMinInput.value=e,this.audioDistanceMin>this.audioDistanceMax&&(this.audioDistanceMax=this.audioDistanceMin))}get audioDistanceMax(){const e=parseFloat(this.audioMaxInput.value);return isGoodNumber(e)?e:10}set audioDistanceMax(e){isGoodNumber(e)&&e>0&&(this.audioMaxInput.value=e,this.audioDistanceMin>this.audioDistanceMax&&(this.audioDistanceMin=this.audioDistanceMax))}get audioRolloff(){const e=parseFloat(this.audioRolloffInput.value);return isGoodNumber(e)?e:1}set audioRolloff(e){isGoodNumber(e)&&e>0&&(this.audioRolloffInput.value=e)}get fontSize(){const e=parseFloat(this.fontSizeInput.value);return isGoodNumber(e)?e:16}set fontSize(e){isGoodNumber(e)&&e>0&&(this.fontSizeInput.value=e)}}class BaseAvatar{constructor(e){this.element=e}get canSwim(){return!1}draw(e,t,i){throw new Error("Not implemented in base class")}}const AvatarMode=Object.freeze({none:null,emoji:"emoji",photo:"photo",video:"video"}),selfs$2=new Map;class EmojiAvatar extends BaseAvatar{constructor(e){super(Span(title(e.desc),e.value));const t={canSwim:isSurfer(e),x:0,y:0,aspectRatio:null};this.value=e.value,this.desc=e.desc,selfs$2.set(this,t)}get canSwim(){return selfs$2.get(this).canSwim}draw(e,t,i){const n=selfs$2.get(this);if(null===n.aspectRatio){const t=e.font,i=100;e.font=i+"px sans-serif";const s=e.measureText(this.value);n.aspectRatio=s.width/i,n.x=(i-s.width)/2,n.y=s.actualBoundingBoxAscent/2,n.x/=i,n.y/=i,e.font=t}if(null!==n.aspectRatio){const s=n.aspectRatio<=1?i:t/n.aspectRatio;e.font=s+"px sans-serif",e.fillText(this.value,n.x*s,n.y*s)}}}class PhotoAvatar extends BaseAvatar{constructor(e){super(Canvas()),this.element=null;const t=new Image;t.addEventListener("load",e=>{this.element.width=t.width,this.element.height=t.height;const i=this.element.getContext("2d");i.clearRect(0,0,t.width,t.height),i.imageSmoothingEnabled=!1,i.drawImage(t,0,0)}),this.url=t.src=e&&e.href||e}draw(e,t,i){const n=(this.element.width-this.element.height)/2,s=Math.max(0,n),a=Math.max(0,-n),o=Math.min(this.element.width,this.element.height);e.drawImage(this.element,s,a,o,o,0,0,t,i)}}class VideoAvatar extends BaseAvatar{constructor(e){super(e),this.element.play(),this.element.once("canplay").then(()=>this.element.play())}draw(e,t,i){if(null!==this.element){const n=(this.element.videoWidth-this.element.videoHeight)/2,s=Math.max(0,n),a=Math.max(0,-n),o=Math.min(this.element.videoWidth,this.element.videoHeight);e.drawImage(this.element,s,a,o,o,0,0,t,i)}}}class BasePosition{get x(){throw new Error("Not implemented in base class.")}get y(){throw new Error("Not implemented in base class.")}setTarget(e,t,i){throw new Error("Not implemented in base class.")}update(e){}}class InterpolatedPosition extends BasePosition{constructor(){super(),this._st=this._et=0,this._x=this._tx=this._sx=0,this._y=this._ty=this._sy=0}get x(){return this._x}get y(){return this._y}setTarget(e,t,i){this._st=t,this._et=t+i,this._sx=this._x,this._sy=this._y,this._tx=e.x,this._ty=e.y}update(e){const t=project(e,this._st,this._et);t<=1&&(this._x=lerp(this._sx,this._tx,t),this._y=lerp(this._sy,this._ty,t))}}const POSITION_REQUEST_DEBOUNCE_TIME=1,STACKED_USER_OFFSET_X=5,STACKED_USER_OFFSET_Y=5,eventNames=["userMoved","userPositionNeeded"];function resetAvatarMode(e){e.avatarVideo?e.avatarMode=AvatarMode.video:e.avatarPhoto?e.avatarMode=AvatarMode.photo:e.avatarEmoji?e.avatarMode=AvatarMode.emoji:e.avatarMode=AvatarMode.none}class User extends EventTarget{constructor(e,t){super(),this.id=e.id,this.displayName=e.displayName,this.label=t?"(Me)":`(${this.id})`,this.moveEvent=new UserMoveEvent(this.id),this.position=new InterpolatedPosition,this.avatarMode=AvatarMode.none,this.avatarEmoji=t?randomPerson():bust,this.avatarImage=null,this.avatarVideo=null,this.audioMuted=!1,this.videoMuted=!0,this.isMe=t,this.isActive=!1,this.stackUserCount=1,this.stackIndex=0,this.stackAvatarHeight=0,this.stackAvatarWidth=0,this.stackOffsetX=0,this.stackOffsetY=0,this.isInitialized=t,this.lastPositionRequestTime=performance.now()/1e3-1,this.visible=!0}deserialize(e){void 0!==e.displayName&&(this.displayName=e.displayName),void 0!==e.avatarMode&&(this.avatarMode=e.avatarMode,this.avatarID=e.avatarID),void 0!==e.x&&(this.position.setTarget(e,performance.now()/1e3,0),this.isInitialized=!0)}serialize(){return{id:this.id,x:this.position._tx,y:this.position._ty,displayName:this.displayName,avatarMode:this.avatarMode,avatarID:this.avatarID}}get avatarVideo(){return this._avatarVideo}set avatarVideo(e){null==e?(this._avatarVideo=null,resetAvatarMode(this)):(this.avatarMode=AvatarMode.video,this._avatarVideo=new VideoAvatar(e))}get avatarImage(){return this._avatarImage}set avatarImage(e){this._avatarURL=e,null==e?(this._avatarImage=null,resetAvatarMode(this)):(this.avatarMode=AvatarMode.photo,this._avatarImage=new PhotoAvatar(e))}get avatarEmoji(){return this._avatarEmoji}set avatarEmoji(e){null==e?(this._avatarEmoji=null,resetAvatarMode(this)):(this.avatarMode=AvatarMode.emoji,this._avatarEmoji=new EmojiAvatar(e))}get avatar(){switch(this.avatarMode===AvatarMode.none&&resetAvatarMode(this),this.avatarMode){case AvatarMode.emoji:return this.avatarEmoji;case AvatarMode.photo:return this.avatarImage;case AvatarMode.video:return this.avatarVideo;default:return null}}get avatarID(){switch(this.avatarMode){case AvatarMode.emoji:return{value:this.avatarEmoji.value,desc:this.avatarEmoji.desc};case AvatarMode.photo:return this.avatarImage.url;default:return null}}set avatarID(e){switch(this.avatarMode){case AvatarMode.emoji:this.avatarEmoji=e;break;case AvatarMode.photo:this.avatarImage=e}}addEventListener(e,t,i){if(-1===eventNames.indexOf(e))throw new Error("Unrecognized event type: "+e);super.addEventListener(e,t,i)}setDisplayName(e){this.displayName=e}moveTo(e,t,i){this.isInitialized&&(this.isMe&&(this.moveEvent.set(e,t),this.dispatchEvent(this.moveEvent)),this.position.setTarget({x:e,y:t},performance.now()/1e3,i))}update(e,t){const i=performance.now()/1e3;if(!this.isInitialized){i-this.lastPositionRequestTime>=1&&(this.lastPositionRequestTime=i,this.dispatchEvent(new UserPositionNeededEvent(this.id)))}this.position.update(i),this.stackUserCount=0,this.stackIndex=0;for(let e of t.values())e.position._tx===this.position._tx&&e.position._ty===this.position._ty&&(e.id===this.id&&(this.stackIndex=this.stackUserCount),++this.stackUserCount);this.stackAvatarWidth=e.tileWidth-5*(this.stackUserCount-1),this.stackAvatarHeight=e.tileHeight-5*(this.stackUserCount-1),this.stackOffsetX=5*this.stackIndex,this.stackOffsetY=5*this.stackIndex}drawShadow(e,t,i){const n=this.position.x*t.tileWidth,s=this.position.y*t.tileHeight,a=e.getTransform().transformPoint({x:n,y:s});this.visible=-t.tileWidth<=a.x&&a.x<e.canvas.width&&-t.tileHeight<=a.y&&a.y<e.canvas.height,this.visible&&(e.save(),e.shadowColor="rgba(0, 0, 0, 0.5)",e.shadowOffsetX=3*i,e.shadowOffsetY=3*i,e.shadowBlur=3*i,this.innerDraw(e,t),e.restore())}drawAvatar(e,t){if(this.visible){if(e.save(),this.innerDraw(e,t),this.isActive&&!this.audioMuted){const t=this.stackAvatarHeight/2;e.font=t+"px sans-serif";const i=e.measureText(speakerMediumVolume.value);e.fillText(speakerMediumVolume.value,this.stackAvatarWidth-i.width,0)}e.restore()}}innerDraw(e,t){if(e.translate(this.position.x*t.tileWidth+this.stackOffsetX,this.position.y*t.tileHeight+this.stackOffsetY),e.fillStyle="black",e.textBaseline="top",this.avatar&&this.avatar.draw(e,this.stackAvatarWidth,this.stackAvatarHeight),this.audioMuted||!this.videoMuted){const t=this.stackAvatarHeight/2;if(e.font=t+"px sans-serif",this.audioMuted){const t=e.measureText(mutedSpeaker.value);e.fillText(mutedSpeaker.value,this.stackAvatarWidth-t.width,0)}if(!(this.videoMuted||this.avatar instanceof VideoAvatar)){const i=e.measureText(videoCamera.value);e.fillText(videoCamera.value,this.stackAvatarWidth-i.width,t)}}}drawName(e,t,i,n){this.visible&&(e.save(),e.translate(this.position.x*t.tileWidth+this.stackOffsetX,this.position.y*t.tileHeight+this.stackOffsetY),e.shadowColor="black",e.shadowOffsetX=3*i,e.shadowOffsetY=3*i,e.shadowBlur=3*i,e.fillStyle="white",e.textBaseline="bottom",e.font=n*devicePixelRatio+"pt sans-serif",e.fillText(this.displayName||this.label,0,0),e.restore())}drawHearingTile(e,t,i,n,s){e.save(),e.translate((this.position._tx+i)*t.tileWidth,(this.position._ty+n)*t.tileHeight),e.strokeStyle=`rgba(0, 255, 0, ${(1-s)/2})`,e.strokeRect(0,0,t.tileWidth,t.tileHeight),e.restore()}drawHearingRange(e,t,i,n,s){const a=Math.min(s,Math.ceil(e.canvas.width/(2*t.tileWidth*i))),o=Math.min(s,Math.ceil(e.canvas.height/(2*t.tileHeight*i)));for(let i=0;i<o;++i)for(let o=0;o<a;++o){const a=project(Math.sqrt(o*o+i*i),n,s);a<=1&&(this.drawHearingTile(e,t,o,i,a),0!=i&&this.drawHearingTile(e,t,o,-i,a),0!=o&&this.drawHearingTile(e,t,-o,i,a),0!=o&&0!=i&&this.drawHearingTile(e,t,-o,-i,a))}}}class UserMoveEvent extends Event{constructor(e){super("userMoved"),this.id=e,this.x=0,this.y=0}set(e,t){this.x=e,this.y=t}}class UserPositionNeededEvent extends Event{constructor(e){super("userPositionNeeded"),this.id=e}}const refreshDirectoryEvt=new Event("refreshUserDirectory"),newRowColor="lightgreen",avatarSize=style({height:"32px"}),warpToEvt=Object.assign(new Event("warpTo"),{id:null}),ROW_TIMEOUT=3e3;class UserDirectoryForm extends FormDialog{constructor(){super("users","Users");this.rows=new Map,this.content.append(this.table=Div(style({display:"grid",gridTemplateColumns:"auto auto auto 1fr",gridTemplateRows:"min-content",columnGap:"5px",width:"100%"}))),this.table.append(Div(grid(1,1),""),Div(grid(2,1),"ID"),Div(grid(3,1),"Location"),Div(grid(4,1),"Avatar"),Div(grid(5,1),"User Name")),this.footer.append(Button("Refresh",onClick((e=>()=>this.dispatchEvent(e))(refreshDirectoryEvt))),this.confirmButton=Button("Close",onClick(()=>this.hide())))}set(e){this.delete(e.id);const t=this.rows.size+2,i=Div(grid(1,t,4,1),style({backgroundColor:newRowColor,zIndex:-1}));setTimeout(()=>{this.table.removeChild(i)},3e3),this.table.append(i);let n="N/A";e.avatar&&e.avatar.element&&(n=e.avatar.element,avatarSize.apply(n));const s=[Button(grid(1,t),onClick(()=>{warpToEvt.id=e.id,this.dispatchEvent(warpToEvt)}),"Visit"),Div(grid(2,t),e.id),Div(grid(3,t),`<x: ${e.position._tx}, y: ${e.position._ty}>`),Div(grid(4,t),n),Div(grid(5,t),e.displayName)];this.rows.set(e.id,s),this.table.append(...s)}delete(e){if(this.rows.has(e)){const t=this.rows.get(e);this.rows.delete(e);for(let e of t)this.table.removeChild(e);let i=2;for(let e of this.rows.values()){const t=row(i++);for(let i of e)t.apply(i)}}}clear(){for(let e of this.rows.keys())this.delete(e)}warn(...e){const t=Div(style({backgroundColor:"yellow"}),...e.map(e=>e.toString()));this.table.append(t),setTimeout(()=>{this.table.removeChild(t)},5e3)}async showAsync(){return this.show(),await this.confirmButton.once("click"),!1}}const EMOJI_LIFE=5;class Emote{constructor(e,t,i){this.emoji=e,this.x=t,this.y=i,this.dx=Math.random()-.5,this.dy=.5*-Math.random()-.5,this.life=1,this.width=-1}isDead(){return this.life<=0}update(e){this.life-=e/5,this.dx*=.99,this.dy*=.99,this.x+=this.dx*e,this.y+=this.dy*e}drawShadow(e,t,i){e.save(),e.shadowColor="rgba(0, 0, 0, 0.5)",e.shadowOffsetX=3*i,e.shadowOffsetY=3*i,e.shadowBlur=3*i,this.drawEmote(e,t),e.restore()}drawEmote(e,t){if(e.fillStyle=`rgba(0, 0, 0, ${this.life})`,e.font=t.tileHeight/2+"px sans-serif",-1===this.width){const t=e.measureText(this.emoji.value);this.width=t.width}e.fillText(this.emoji.value,this.x*t.tileWidth-this.width/2,this.y*t.tileHeight)}}class TileSet{constructor(e){this.url=e,this.tileWidth=0,this.tileHeight=0,this.tilesPerRow=0,this.image=new Image,this.collision={}}async load(){const e=await fetch(this.url),t=await e.xml(),i=new Promise((e,t)=>{this.image.addEventListener("load",t=>{this.tilesPerRow=Math.floor(this.image.width/this.tileWidth),e()}),this.image.addEventListener("error",t)}),n=t.querySelector("image").getAttribute("source"),s=new URL(n,this.url),a=t.querySelectorAll("tile");for(let e of a){const t=1*e.getAttribute("id"),i=e.querySelector("properties > property[name='Collision']").getAttribute("value");this.collision[t]="true"===i}this.name=t.getAttribute("name"),this.tileWidth=1*t.getAttribute("tilewidth"),this.tileHeight=1*t.getAttribute("tileheight"),this.tileCount=1*t.getAttribute("tilecount"),this.image.src=s.href,await i}isClear(e){return!this.collision[e-1]}draw(e,t,i,n){if(t>0){const s=t-1,a=this.tileWidth*(s%this.tilesPerRow),o=this.tileHeight*Math.floor(s/this.tilesPerRow),r=i*this.tileWidth,l=n*this.tileHeight;e.drawImage(this.image,a,o,this.tileWidth,this.tileHeight,r,l,this.tileWidth,this.tileHeight)}}}class TileMap{constructor(e){this.url=new URL(`/data/tilemaps/${e}.tmx`,document.location),this.tileset=null,this.tileWidth=0,this.tileHeight=0,this.layers=0,this.width=0,this.height=0,this.offsetX=0,this.offsetY=0,this.tiles=null,this.collision=null}async load(){const e=await fetch(this.url.href),t=await e.xml(),i=1*t.getAttribute("width"),n=1*t.getAttribute("height"),s=1*t.getAttribute("tilewidth"),a=1*t.getAttribute("tileheight"),o=t.querySelector("tileset").getAttribute("source"),r=t.querySelectorAll("layer > data");this.layers=r.length,this.width=i,this.height=n,this.offsetX=-Math.floor(i/2),this.offsetY=-Math.floor(n/2),this.tileWidth=s,this.tileHeight=a,this.tiles=[];for(let e of r){const t=e.innerHTML.replace(" ","").replace("\t","").replace("\n","").replace("\r","").split(","),n=[];let s=[];for(let e of t)s.push(e),s.length===i&&(n.push(s),s=[]);s.length>0&&n.push(s),this.tiles.push(n)}this.tileset=new TileSet(new URL(o,this.url)),await this.tileset.load(),this.tileWidth=this.tileset.tileWidth,this.tileHeight=this.tileset.tileHeight}draw(e){e.save(),e.translate(this.offsetX*this.tileWidth,this.offsetY*this.tileHeight);for(let t=0;t<this.layers;++t){const i=this.tiles[t];for(let t=0;t<this.height;++t){const n=i[t];for(let i=0;i<this.width;++i){const s=n[i];this.tileset.draw(e,s,i,t)}}}e.restore()}isClear(e,t,i){return e-=this.offsetX,t-=this.offsetY,e<0||this.width<=e||t<0||this.height<=t||this.tileset.isClear(this.tiles[0][t][e])||isSurfer(i.value)}getClearTile(e,t,i,n,s){const a=e+i,o=t+n,r=e<a?1:-1,l=t<o?1:-1;let c=((i=Math.abs(a-e))>(n=Math.abs(o-t))?i:-n)/2;for(;e!==a||t!==o;){const a=c;if(a>-i){if(!this.isClear(e+r,t,s))break;c-=n,e+=r}if(a<n){if(!this.isClear(e,t+l,s))break;c+=i,t+=l}}return{x:e,y:t}}getClearTileNear(e,t,i,n){for(let s=1;s<=i;++s)for(let i=-s;i<=s;++i){const a=s-Math.abs(i),o=e+i,r=t+a,l=t+-a;if(this.isClear(o,r,n))return{x:o,y:r};if(this.isClear(o,l,n))return{x:o,y:l}}return{x:e,y:t}}}const CAMERA_LERP=.01,CAMERA_ZOOM_MAX=8,CAMERA_ZOOM_MIN=.1,CAMERA_ZOOM_SHAPE=1/4,CAMERA_ZOOM_SPEED=.005,MAX_DRAG_DISTANCE=5,MOVE_REPEAT=.125,isFirefox="undefined"!=typeof InstallTrigger,gameStartedEvt=new Event("gameStarted"),gameEndedEvt=new Event("gameEnded"),zoomChangedEvt=new Event("zoomChanged"),emojiNeededEvt=new Event("emojiNeeded"),toggleAudioEvt$1=new Event("toggleAudio"),toggleVideoEvt$1=new Event("toggleVideo"),emoteEvt$1=Object.assign(new Event("emote"),{id:null,emoji:null}),userJoinedEvt=Object.assign(new Event("userJoined",{user:null})),gamepads=new Map;class Game extends EventTarget{constructor(){function e(e){return{id:e.pointerId,buttons:e.buttons,dragDistance:0,x:e.offsetX*devicePixelRatio,y:e.offsetY*devicePixelRatio}}super(),this.element=Canvas(id("frontBuffer"),style({width:"100%",height:"100%",touchAction:"none"})),this.gFront=this.element.getContext("2d"),this.me=null,this.map=null,this.keys={},this.users=new Map,this._loop=this.loop.bind(this),this.lastTime=0,this.lastMove=Number.MAX_VALUE,this.gridOffsetX=0,this.gridOffsetY=0,this.cameraX=this.offsetCameraX=this.targetOffsetCameraX=0,this.cameraY=this.offsetCameraY=this.targetOffsetCameraY=0,this.cameraZ=this.targetCameraZ=1.5,this.currentRoomName=null,this.fontSize=10,this.drawHearing=!1,this.audioDistanceMin=2,this.audioDistanceMax=10,this.rolloff=5,this.pointers=[],this.lastPinchDistance=0,this.canClick=!1,this.currentEmoji=null,this.emotes=[],this.inputBinding={keyButtonUp:"ArrowUp",keyButtonDown:"ArrowDown",keyButtonLeft:"ArrowLeft",keyButtonRight:"ArrowRight",keyButtonEmote:"e",keyButtonToggleAudio:"a",gpAxisLeftRight:0,gpAxisUpDown:1,gpButtonUp:12,gpButtonDown:13,gpButtonLeft:14,gpButtonRight:15,gpButtonEmote:0,gpButtonToggleAudio:1},this.lastGamepadIndex=-1,this.gamepadIndex=-1,this.transitionSpeed=.125,addEventListener("keydown",e=>{this.keys[e.key]=e,e.ctrlKey||e.altKey||e.shiftKey||e.metaKey||e.key!==this.inputBinding.keyButtonToggleAudio||!this.me||this.toggleMyAudio()}),addEventListener("keyup",e=>{this.keys[e.key]&&delete this.keys[e.key]}),this.element.addEventListener("wheel",e=>{if(!(e.shiftKey||e.altKey||e.ctrlKey||e.metaKey)){const t=e.deltaY*(isFirefox?1:.02);this.zoom(t)}},{passive:!0});const t=e=>this.pointers.findIndex(t=>t.id===e.id),i=e=>{const i=t(e);if(i>-1){const t=this.pointers[i];return this.pointers[i]=e,t}return this.pointers.push(e),null},n=()=>{let e=0;for(let t of this.pointers)1===t.buttons&&++e;return e};this.element.addEventListener("pointerdown",t=>{const s=n(),a=e(t),o=(i(a),n());this.canClick=0===s&&1===o});const s=()=>{if(2!==n())return null;const e=this.pointers.filter(e=>1===e.buttons),t=e[0],i=e[1],s=i.x-t.x,a=i.y-t.y;return Math.sqrt(s*s+a*a)};this.element.addEventListener("pointermove",t=>{const a=s(),o=e(t),r=i(o),l=n(),c=s();if(1===l&&r&&1===o.buttons&&r.buttons===o.buttons){const e=o.x-r.x,t=o.y-r.y,i=Math.sqrt(e*e+t*t);o.dragDistance=r.dragDistance+i,o.dragDistance>5&&(this.targetOffsetCameraX=this.offsetCameraX+=e,this.targetOffsetCameraY=this.offsetCameraY+=t,this.canClick=!1)}if(null!==a&&null!==c){const e=a-c;this.zoom(e/5),this.canClick=!1}}),this.element.addEventListener("pointerup",t=>{const n=e(t);i(n);if(this.me&&n.dragDistance<2){const e=this.getTileAt(n),t=e.x-this.me.position._tx,i=e.y-this.me.position._ty;0===t&&0===i?this.emote(this.me.id,this.currentEmoji):this.canClick&&this.moveMeBy(t,i)}}),this.element.addEventListener("pointercancel",i=>{const n=e(i),s=t(n);return s>=0&&this.pointers.removeAt(s),n})}hide(){this.element.hide()}show(){this.element.show()}setOpen(e){this.element.setOpen(e)}updateAudioActivity(e){if(this.users.has(e.id)){this.users.get(e.id).isActive=e.isActive}}emote(e,t){if(this.users.has(e)){const i=this.users.get(e);i.isMe&&((t=t||this.currentEmoji)?(emoteEvt$1.emoji=this.currentEmoji=t,this.dispatchEvent(emoteEvt$1)):this.dispatchEvent(emojiNeededEvt)),t&&this.emotes.push(new Emote(t,i.position.x+.5,i.position.y))}}getTileAt(e){const t=e.x-this.gridOffsetX-this.offsetCameraX,i=e.y-this.gridOffsetY-this.offsetCameraY,n=t/this.cameraZ,s=i/this.cameraZ,a=n-this.cameraX,o=s-this.cameraY,r=this.map.tileWidth,l=this.map.tileHeight;return{x:Math.floor(a/r),y:Math.floor(o/l)}}moveMeTo(e,t){this.map.isClear(e,t,this.me.avatarEmoji)&&(this.me.moveTo(e,t,this.transitionSpeed),this.targetOffsetCameraX=0,this.targetOffsetCameraY=0)}moveMeBy(e,t){const i=this.map.getClearTile(this.me.position._tx,this.me.position._ty,e,t,this.me.avatarEmoji);this.moveMeTo(i.x,i.y)}warpMeTo(e,t){const i=this.map.getClearTileNear(e,t,3,this.me.avatarEmoji);this.moveMeTo(i.x,i.y)}zoom(e){const t=Math.abs(e);if(0<t&&t<=50){const t=project(this.targetCameraZ,.1,8),i=clamp(Math.pow(t,1/4)-.005*e,0,1),n=Math.pow(i,4);this.targetCameraZ=unproject(n,.1,8),this.dispatchEvent(zoomChangedEvt)}}addUser(e){this.users.has(e.id)&&this.removeUser(e);const t=new User(e,!1);this.users.set(e.id,t),userJoinedEvt.user=t,this.dispatchEvent(userJoinedEvt)}toggleMyAudio(){this.dispatchEvent(toggleAudioEvt$1)}toggleMyVideo(){this.dispatchEvent(toggleVideoEvt$1)}muteUserAudio(e){let t=this.me;e.id&&this.users.has(e.id)&&(t=this.users.get(e.id)),t?t.audioMuted=e.muted:(console.warn("No user found to mute audio, retrying in 1 second."),setTimeout(this.muteUserAudio.bind(this,e),1e3))}muteUserVideo(e){let t=this.me;e.id&&this.users.has(e.id)&&(t=this.users.get(e.id)),t?t.videoMuted=e.muted:(console.warn("No user found to mute video, retrying in 1 second."),setTimeout(this.muteUserVideo.bind(this,e),1e3))}withUser(e,t,i){if(void 0===i&&(i=5e3),e)if(this.users.has(e)){t(this.users.get(e))}else console.warn("No user, trying again in a quarter second"),i>0&&setTimeout(this.withUser.bind(this,e,t,i-250),250)}changeUserName(e){this.withUser(e&&e.id,t=>{t.setDisplayName(e.displayName)})}removeUser(e){this.withUser(e&&e.id,e=>{this.users.delete(e.id)})}setAvatarVideo(e){this.withUser(e&&e.id,t=>{t.avatarVideo=e.element})}setAvatarURL(e){this.withUser(e&&e.id,t=>{t.avatarImage=e.avatarURL})}setAvatarEmoji(e){this.withUser(e&&e.id,t=>{t.avatarEmoji=e})}async start(e){this.currentRoomName=e.roomName.toLowerCase(),this.me=new User(e,!0),this.users.set(e.id,this.me),this.setAvatarURL(e),this.map=new TileMap(this.currentRoomName);let t=!1;for(let e=0;e<2;++e)try{await this.map.load(),t=!0}catch(e){console.warn(e),this.map=new TileMap("default")}t||console.error("Couldn't load any maps!"),this.startLoop(),this.dispatchEvent(zoomChangedEvt),this.dispatchEvent(gameStartedEvt)}startLoop(){this.show(),this.resize(),this.element.focus(),requestAnimationFrame(e=>{this.lastTime=e,requestAnimationFrame(this._loop)})}resize(){this.element.resize()}loop(e){if(null!==this.currentRoomName){requestAnimationFrame(this._loop);const t=e-this.lastTime;this.lastTime=e,this.update(t/1e3),this.render()}}end(){this.currentRoomName=null,this.map=null,this.users.clear(),this.me=null,this.dispatchEvent(gameEndedEvt)}update(e){if(this.gridOffsetX=Math.floor(.5*this.element.width/this.map.tileWidth)*this.map.tileWidth,this.gridOffsetY=Math.floor(.5*this.element.height/this.map.tileHeight)*this.map.tileHeight,this.lastMove+=e,this.lastMove>=.125){let e=0,t=0;for(let i of Object.values(this.keys))if(!(i.altKey||i.shiftKey||i.ctrlKey||i.metaKey))switch(i.key){case this.inputBinding.keyButtonUp:t--;break;case this.inputBinding.keyButtonDown:t++;break;case this.inputBinding.keyButtonLeft:e--;break;case this.inputBinding.keyButtonRight:e++;break;case this.inputBinding.keyButtonEmote:this.emote(this.me.id,this.currentEmoji)}const i=navigator.getGamepads()[this.gamepadIndex];if(i){gamepads.has(this)||gamepads.set(this,new EventedGamepad(i));const n=gamepads.get(this);n.update(i),n.buttons[this.inputBinding.gpButtonEmote].pressed&&this.emote(this.me.id,this.currentEmoji),!n.lastButtons[this.inputBinding.gpButtonToggleAudio].pressed&&n.buttons[this.inputBinding.gpButtonToggleAudio].pressed&&this.toggleMyAudio(),n.buttons[this.inputBinding.gpButtonUp].pressed?--t:n.buttons[this.inputBinding.gpButtonDown].pressed&&++t,n.buttons[this.inputBinding.gpButtonLeft].pressed?--e:n.buttons[this.inputBinding.gpButtonRight].pressed&&++e,e+=Math.round(n.axes[this.inputBinding.gpAxisLeftRight]),t+=Math.round(n.axes[this.inputBinding.gpAxisUpDown]),this.targetOffsetCameraX+=-50*Math.round(2*n.axes[2]),this.targetOffsetCameraY+=-50*Math.round(2*n.axes[3]),this.zoom(2*(n.buttons[6].value-n.buttons[7].value))}e=clamp(e,-1,1),t=clamp(t,-1,1),0===e&&0===t||this.moveMeBy(e,t),this.lastMove=0}for(let t of this.emotes)t.update(e);this.emotes=this.emotes.filter(e=>!e.isDead());for(let e of this.users.values())e.update(this.map,this.users)}render(){const e=-this.me.position.x*this.map.tileWidth,t=-this.me.position.y*this.map.tileHeight;this.cameraZ=lerp(this.cameraZ,this.targetCameraZ,.1),this.cameraX=lerp(this.cameraX,e,.01*this.cameraZ),this.cameraY=lerp(this.cameraY,t,.01*this.cameraZ),this.offsetCameraX=lerp(this.offsetCameraX,this.targetOffsetCameraX,.01),this.offsetCameraY=lerp(this.offsetCameraY,this.targetOffsetCameraY,.01),this.gFront.resetTransform(),this.gFront.imageSmoothingEnabled=!1,this.gFront.clearRect(0,0,this.element.width,this.element.height),this.gFront.save(),this.gFront.translate(this.gridOffsetX+this.offsetCameraX,this.gridOffsetY+this.offsetCameraY),this.gFront.scale(this.cameraZ,this.cameraZ),this.gFront.translate(this.cameraX,this.cameraY),this.map.draw(this.gFront);for(let e of this.users.values())e.drawShadow(this.gFront,this.map,this.cameraZ);for(let e of this.emotes)e.drawShadow(this.gFront,this.map,this.cameraZ);for(let e of this.users.values())e.drawAvatar(this.gFront,this.map);this.drawCursor();for(let e of this.users.values())e.drawName(this.gFront,this.map,this.cameraZ,this.fontSize);this.drawHearing&&this.me.drawHearingRange(this.gFront,this.map,this.cameraZ,this.audioDistanceMin,this.audioDistanceMax);for(let e of this.emotes)e.drawEmote(this.gFront,this.map);this.gFront.restore()}drawCursor(){if(1===this.pointers.length){const e=this.pointers[0],t=this.getTileAt(e);this.gFront.strokeStyle="red",this.gFront.strokeRect(t.x*this.map.tileWidth,t.y*this.map.tileHeight,this.map.tileWidth,this.map.tileHeight)}}}class BaseAudioClient extends EventTarget{constructor(){super()}setAudioOutputDevice(e){throw new Error("Not implemented in base class")}setLocalPosition(e){throw new Error("Not implemented in base class")}setUserPosition(e){throw new Error("Not implemented in base class")}setAudioProperties(e){throw new Error("Not implemented in base class")}removeSource(e){throw new Error("Not implemented in base class")}}const APP_FINGERPRINT$1=window.APP_FINGERPRINT="Calla",eventNames$1=["userMoved","emote","userInitRequest","userInitResponse","audioMuteStatusChanged","videoMuteStatusChanged","videoConferenceJoined","videoConferenceLeft","participantJoined","participantLeft","avatarChanged","displayNameChange","audioActivity","setAvatarEmoji","deviceListChanged","participantRoleChanged","audioAdded","videoAdded","audioRemoved","videoRemoved"];class BaseJitsiClient extends EventTarget{constructor(){super(),this.localUser=null,this.audioClient=null,this.preInitEvtQ=[],this.preferedAudioOutputID=null,this.preferedAudioInputID=null,this.preferedVideoInputID=null}userIDs(){throw new Error("Not implemented in base class")}userExists(e){throw new Error("Not implemented in base class")}users(){throw new Error("Not implemented in base class")}async initializeAsync(e,t,i){throw new Error("Not implemented in base class.")}dispatchEvent(e){if(null!==this.localUser)null!==e.id&&void 0!==e.id&&"local"!==e.id||(e.id=this.localUser),super.dispatchEvent(e),"videoConferenceLeft"===e.type&&(this.localUser=null);else if("videoConferenceJoined"===e.type){for(e of(this.localUser=e.id,this.dispatchEvent(e),this.preInitEvtQ))this.dispatchEvent(e);this.preInitEvtQ.clear()}else this.preInitEvtQ.push(e)}async joinAsync(e,t,i){this.dispose();const n=this.once("videoConferenceJoined");await this.initializeAsync(e,t,i),window.addEventListener("unload",()=>{this.dispose()});const s=await n;this.setDisplayName(i);const a=(await this.getAudioOutputDevicesAsync()).scan(e=>e.deviceId===this.preferedAudioOutputID,e=>"communications"===e.deviceId,e=>"default"===e.deviceId,e=>!!e);a&&await this.setAudioOutputDevice(a);const o=(await this.getAudioInputDevicesAsync()).scan(e=>e.deviceId===this.preferedAudioInputID,e=>"communications"===e.deviceId,e=>"default"===e.deviceId,e=>!!e);o&&await this.setAudioInputDeviceAsync(o);const r=(await this.getVideoInputDevicesAsync()).scan(e=>e.deviceId===this.preferedVideoInputID);return r&&await this.setVideoInputDeviceAsync(r),s}dispose(){this.leave()}setDisplayName(e){throw new Error("Not implemented in base class")}async leaveAsync(){const e=this.once("videoConferenceLeft",5e3),t=this.leave();return t instanceof Promise&&await t,await e}leave(){throw new Error("Not implemented in base class")}async getAudioOutputDevicesAsync(){throw new Error("Not implemented in base class")}async getCurrentAudioOutputDeviceAsync(){throw new Error("Not implemented in base class")}setAudioOutputDevice(e){throw new Error("Not implemented in base class")}async getAudioInputDevicesAsync(){throw new Error("Not implemented in base class")}async getCurrentAudioInputDeviceAsync(){throw new Error("Not implemented in base class")}async setAudioInputDeviceAsync(e){throw new Error("Not implemented in base class")}async getVideoInputDevicesAsync(){throw new Error("Not implemented in base class")}async getCurrentVideoInputDeviceAsync(){throw new Error("Not implemented in base class")}async setVideoInputDeviceAsync(e){throw new Error("Not implemented in base class")}async toggleAudioAsync(){throw new Error("Not implemented in base class")}async toggleVideoAsync(){throw new Error("Not implemented in base class")}setAvatarURL(e){throw new Error("Not implemented in base class")}async isAudioMutedAsync(){throw new Error("Not implemented in base class")}async isVideoMutedAsync(){throw new Error("Not implemented in base class")}txGameData(e,t){throw new Error("Not implemented in base class")}rxGameData(e){throw new Error("Not implemented in base class")}sendMessageTo(e,t,i){this.txGameData(e,{hax:APP_FINGERPRINT$1,command:t,value:i})}receiveMessageFrom(e,t,i){const n=new JitsiClientEvent(t,e,i);this.dispatchEvent(n)}setAudioProperties(e,t,i,n,s){const a={origin:e,transitionTime:t,minDistance:i,maxDistance:n,rolloff:s};this.audioClient.setAudioProperties(a)}setLocalPosition(e){this.audioClient.setLocalPosition(e);for(let t of this.userIDs())this.sendMessageTo(t,"userMoved",e)}setUserPosition(e){this.audioClient.setUserPosition(e)}removeUser(e){this.audioClient.removeSource(e.id)}async setAudioMutedAsync(e){let t=await this.isAudioMutedAsync();return e!==t&&(t=await this.toggleAudioAsync()),t}async setVideoMutedAsync(e){let t=await this.isVideoMutedAsync();return e!==t&&(t=await this.toggleVideoAsync()),t}addEventListener(e,t,i){if(-1===eventNames$1.indexOf(e))throw new Error("Unsupported event type: "+e);super.addEventListener(e,t,i)}userInitRequest(e){this.sendMessageTo(e,"userInitRequest")}async userInitRequestAsync(e){return await this.until("userInitResponse",()=>this.userInitRequest(e),t=>t.id===e,1e3)}userInitResponse(e,t){this.sendMessageTo(e,"userInitResponse",t)}setAvatarEmoji(e){for(let t of this.userIDs())this.sendMessageTo(t,"setAvatarEmoji",e)}emote(e){for(let t of this.userIDs())this.sendMessageTo(t,"emote",e)}startAudio(){}}class JitsiClientEvent extends Event{constructor(e,t,i){super(e),this.id=t,Event.clone(this,i)}}const selfs$3=new Map,KEY="CallaSettings",DEFAULT_SETTINGS={drawHearing:!1,audioDistanceMin:1,audioDistanceMax:10,audioRolloff:1,fontSize:12,transitionSpeed:1,zoom:1.5,roomName:"calla",userName:"",avatarEmoji:null,gamepadIndex:0,preferedAudioOutputID:null,preferedAudioInputID:null,preferedVideoInputID:null,inputBinding:{keyButtonUp:"ArrowUp",keyButtonDown:"ArrowDown",keyButtonLeft:"ArrowLeft",keyButtonRight:"ArrowRight",keyButtonEmote:"e",keyButtonToggleAudio:"a",gpButtonUp:12,gpButtonDown:13,gpButtonLeft:14,gpButtonRight:15,gpButtonEmote:0,gpButtonToggleAudio:1}};function commit(e){const t=selfs$3.get(e);localStorage.setItem(KEY,JSON.stringify(t))}function load(){const e=localStorage.getItem(KEY);if(e)return Object.assign({},DEFAULT_SETTINGS,JSON.parse(e))}class Settings{constructor(){const e=Object.seal(load()||DEFAULT_SETTINGS);selfs$3.set(this,e),window.location.hash.length>0&&(e.roomName=window.location.hash.substring(1)),Object.seal(this)}get preferedAudioOutputID(){return selfs$3.get(this).preferedAudioOutputID}set preferedAudioOutputID(e){e!==this.preferedAudioOutputID&&(selfs$3.get(this).preferedAudioOutputID=e,commit(this))}get preferedAudioInputID(){return selfs$3.get(this).preferedAudioInputID}set preferedAudioInputID(e){e!==this.preferedAudioInputID&&(selfs$3.get(this).preferedAudioInputID=e,commit(this))}get preferedVideoInputID(){return selfs$3.get(this).preferedVideoInputID}set preferedVideoInputID(e){e!==this.preferedVideoInputID&&(selfs$3.get(this).preferedVideoInputID=e,commit(this))}get transitionSpeed(){return selfs$3.get(this).transitionSpeed}set transitionSpeed(e){e!==this.transitionSpeed&&(selfs$3.get(this).transitionSpeed=e,commit(this))}get drawHearing(){return selfs$3.get(this).drawHearing}set drawHearing(e){e!==this.drawHearing&&(selfs$3.get(this).drawHearing=e,commit(this))}get audioDistanceMin(){return selfs$3.get(this).audioDistanceMin}set audioDistanceMin(e){e!==this.audioDistanceMin&&(selfs$3.get(this).audioDistanceMin=e,commit(this))}get audioDistanceMax(){return selfs$3.get(this).audioDistanceMax}set audioDistanceMax(e){e!==this.audioDistanceMax&&(selfs$3.get(this).audioDistanceMax=e,commit(this))}get audioRolloff(){return selfs$3.get(this).audioRolloff}set audioRolloff(e){e!==this.audioRolloff&&(selfs$3.get(this).audioRolloff=e,commit(this))}get fontSize(){return selfs$3.get(this).fontSize}set fontSize(e){e!==this.fontSize&&(selfs$3.get(this).fontSize=e,commit(this))}get zoom(){return selfs$3.get(this).zoom}set zoom(e){e!==this.zoom&&(selfs$3.get(this).zoom=e,commit(this))}get userName(){return selfs$3.get(this).userName}set userName(e){e!==this.userName&&(selfs$3.get(this).userName=e,commit(this))}get avatarEmoji(){return selfs$3.get(this).avatarEmoji}set avatarEmoji(e){e!==this.avatarEmoji&&(selfs$3.get(this).avatarEmoji=e,commit(this))}get roomName(){return selfs$3.get(this).roomName}set roomName(e){e!==this.roomName&&(selfs$3.get(this).roomName=e,commit(this))}get gamepadIndex(){return selfs$3.get(this).gamepadIndex}set gamepadIndex(e){e!==this.gamepadIndex&&(selfs$3.get(this).gamepadIndex=e,commit(this))}get inputBinding(){return selfs$3.get(this).inputBinding}set inputBinding(e){e!==this.inputBinding&&(selfs$3.get(this).inputBinding=e,commit(this))}}function init(e,t){const i=new Settings,n=new Game,s=new LoginForm,a=new UserDirectoryForm,o=new HeaderBar,r=new FooterBar,l=new OptionsForm,c=new EmojiForm,u={settings:i,client:t,game:n,login:s,directory:a,headbar:o,footbar:r,options:l,emoji:c},d=[n,a,l,c,o,r,s].filter(e=>e.element);function h(){n.hide(),a.hide(),l.hide(),c.hide(),o.enabled=!1,r.enabled=!1,s.show()}async function p(e){if(!c.isOpen){o.optionsButton.lock(),o.instructionsButton.lock(),l.hide();const t=await c.selectAsync();t&&e(t),o.optionsButton.unlock(),o.instructionsButton.unlock()}}async function g(){await p(e=>{n.emote(t.localUser,e),r.setEmojiButton(i.inputBinding.keyButtonEmote,e)})}function m(){t.setAudioProperties(window.location.origin,i.transitionSpeed,i.audioDistanceMin=n.audioDistanceMin=l.audioDistanceMin,i.audioDistanceMax=n.audioDistanceMax=l.audioDistanceMax,i.audioRolloff=l.audioRolloff)}function v(){l.gamepads=navigator.getGamepads(),l.gamepadIndex=n.gamepadIndex}function f(e){if(n.users.has(e)){const t=n.users.get(e);t.isMe||a.set(t)}}document.body.style.display="grid",document.body.style.gridTemplateRows="auto 1fr auto";let w=0;for(let e of d)if(e.element){let t=null;t=e===o?grid(1,1):e===r?grid(1,3):e===n||e===s?grid(1,1,1,3):grid(1,2),t.apply(e.element),e.element.style.zIndex=w++,document.body.append(e.element)}v(),o.enabled=!1,r.enabled=!1,l.drawHearing=n.drawHearing=i.drawHearing,l.audioDistanceMin=n.audioDistanceMin=i.audioDistanceMin,l.audioDistanceMax=n.audioDistanceMax=i.audioDistanceMax,l.audioRolloff=i.audioRolloff,l.fontSize=n.fontSize=i.fontSize,l.gamepadIndex=n.gamepadIndex=i.gamepadIndex,l.inputBinding=n.inputBinding=i.inputBinding,n.cameraZ=n.targetCameraZ=i.zoom,n.transitionSpeed=i.transitionSpeed=.5,s.userName=i.userName,s.roomName=i.roomName,t.preferedAudioOutputID=i.preferedAudioOutputID,t.preferedAudioInputID=i.preferedAudioInputID,t.preferedVideoInputID=i.preferedVideoInputID,h(),window.addEventListeners({gamepadconnected:v,gamepaddisconnected:v,resize:()=>{n.resize()}});const y=e=>()=>{if(!c.isOpen){const t=e.isOpen;s.hide(),a.hide(),l.hide(),e.isOpen=!t}};return o.addEventListeners({toggleOptions:y(l),toggleInstructions:y(s),toggleUserDirectory:y(a),toggleFullscreen:()=>{o.isFullscreen=!o.isFullscreen},tweet:()=>{const e=encodeURIComponent("Join my #TeleParty "+document.location.href),t=new URL("https://twitter.com/intent/tweet?text="+e);open(t)},leave:()=>{t.leave()}}),r.addEventListeners({selectEmoji:g,emote:()=>{n.emote(t.localUser,n.currentEmoji)},toggleAudio:()=>{t.toggleAudioAsync()},toggleVideo:()=>{t.toggleVideoAsync()}}),s.addEventListener("login",()=>{t.startAudio(),t.joinAsync(e,i.roomName=s.roomName,i.userName=s.userName)}),l.addEventListeners({audioPropertiesChanged:m,selectAvatar:async()=>{p(e=>{i.avatarEmoji=l.avatarEmoji=n.me.avatarEmoji=e,t.setAvatarEmoji(e)})},avatarURLChanged:()=>{t.setAvatarURL(l.avatarURL)},toggleVideo:()=>{t.toggleVideoAsync()},toggleDrawHearing:()=>{i.drawHearing=n.drawHearing=l.drawHearing},fontSizeChanged:()=>{i.fontSize=n.fontSize=l.fontSize},audioInputChanged:()=>{const e=l.currentAudioInputDevice;i.preferedAudioInputID=e&&e.deviceId||null,t.setAudioInputDeviceAsync(e)},audioOutputChanged:()=>{const e=l.currentAudioOutputDevice;i.preferedAudioOutputID=e&&e.deviceId||null,t.setAudioOutputDevice(e)},videoInputChanged:()=>{const e=l.currentVideoInputDevice;i.preferedVideoInputID=e&&e.deviceId||null,t.setVideoInputDeviceAsync(e)},gamepadChanged:()=>{i.gamepadIndex=n.gamepadIndex=l.gamepadIndex},inputBindingChanged:()=>{i.inputBinding=n.inputBinding=l.inputBinding}}),n.addEventListeners({emojiNeeded:g,emote:e=>{t.emote(e.emoji)},userJoined:e=>{e.user.addEventListener("userPositionNeeded",e=>{t.userInitRequest(e.id)}),f(e.user.id)},toggleAudio:()=>{t.toggleAudioAsync()},toggleVideo:()=>{t.toggleVideoAsync()},gameStarted:()=>{grid(1,2).apply(s.element),s.hide(),o.enabled=!0,r.enabled=!0,m(),t.setLocalPosition(n.me.serialize()),n.me.addEventListener("userMoved",e=>{t.setLocalPosition(e)}),null!==i.avatarEmoji&&(n.me.avatarEmoji=i.avatarEmoji),i.avatarEmoji=l.avatarEmoji=n.me.avatarEmoji},gameEnded:()=>{n.hide(),s.connected=!1,h()},zoomChanged:()=>{i.zoom=n.targetCameraZ}}),a.addEventListeners({refreshUserDirectory:()=>{a.clear();for(let e of n.users.keys())e!==t.localUser&&f(e)},warpTo:e=>{if(n.users.has(e.id)){const t=n.users.get(e.id);n.warpMeTo(t.position._tx,t.position._ty),a.hide()}}}),t.addEventListeners({videoConferenceJoined:async e=>{s.connected=!0,window.location.hash=s.roomName,n.start(e),l.audioInputDevices=await t.getAudioInputDevicesAsync(),l.audioOutputDevices=await t.getAudioOutputDevicesAsync(),l.videoInputDevices=await t.getVideoInputDevicesAsync(),l.currentAudioInputDevice=await t.getCurrentAudioInputDeviceAsync(),l.currentAudioOutputDevice=await t.getCurrentAudioOutputDeviceAsync(),l.currentVideoInputDevice=await t.getCurrentVideoInputDeviceAsync();const i=await t.isAudioMutedAsync();n.muteUserAudio({id:t.localUser,muted:i}),r.audioEnabled=!i;const a=await t.isVideoMutedAsync();n.muteUserVideo({id:t.localUser,muted:a}),r.videoEnabled=!a},videoConferenceLeft:e=>{n.end()},participantJoined:e=>{n.addUser(e)},videoAdded:e=>{n.setAvatarVideo(e),f(e.id)},videoRemoved:e=>{n.setAvatarVideo(e),f(e.id)},participantLeft:e=>{n.removeUser(e),t.removeUser(e),a.delete(e.id)},avatarChanged:e=>{n.setAvatarURL(e),e.id===t.localUser&&(l.avatarURL=e.avatarURL),f(e.id)},displayNameChange:e=>{n.changeUserName(e),f(e.id)},audioMuteStatusChanged:async e=>{n.muteUserAudio(e),e.id===t.localUser&&(r.audioEnabled=!e.muted,l.currentAudioInputDevice=await t.getCurrentAudioInputDeviceAsync())},videoMuteStatusChanged:async e=>{n.muteUserVideo(e),e.id===t.localUser&&(r.videoEnabled=!e.muted,l.currentVideoInputDevice=await t.getCurrentVideoInputDeviceAsync())},userInitRequest:e=>{n.me&&n.me.id?t.userInitResponse(e.id,n.me.serialize()):a.warn("Local user not initialized")},userInitResponse:e=>{if(n.users.has(e.id)){n.users.get(e.id).deserialize(e),t.setUserPosition(e),f(e.id)}},userMoved:e=>{if(n.users.has(e.id)){n.users.get(e.id).moveTo(e.x,e.y,i.transitionSpeed),t.setUserPosition(e)}f(e.id)},emote:e=>{n.emote(e.id,e)},setAvatarEmoji:e=>{n.setAvatarEmoji(e),f(e.id)},audioActivity:e=>{n.updateAudioActivity(e)}}),s.ready=!0,u}class MockAudioContext{constructor(){this._t=performance.now()/1e3}get currentTime(){return performance.now()/1e3-this._t}get destination(){return null}}class WebAudioOldListenerPosition extends InterpolatedPosition{constructor(e){super(),this.listener=e,this.listener.setPosition(0,0,0),this.listener.setOrientation(0,0,-1,0,1,0)}update(e){super.update(e),this.listener.setPosition(this.x,0,this.y)}}class WebAudioNodePosition extends BasePosition{constructor(e,t){super(),this._p=t?new InterpolatedPosition:null,this.node=e,this.node.positionX.setValueAtTime(0,0),this.node.positionY.setValueAtTime(0,0),this.node.positionZ.setValueAtTime(0,0)}get x(){return this.node.positionX.value}get y(){return this.node.positionZ.value}setTarget(e,t,i){if(this._p)this._p.setTarget(e,t,i);else{const n=t+i;this.node.positionX.linearRampToValueAtTime(e.x,n),this.node.positionZ.linearRampToValueAtTime(e.y,n)}}update(e){this._p&&(this._p.update(e),this.node.positionX.linearRampToValueAtTime(this._p.x,0),this.node.positionZ.linearRampToValueAtTime(this._p.y,0))}}class WebAudioNewListenerPosition extends WebAudioNodePosition{constructor(e,t){super(e,t),this.node.forwardX.setValueAtTime(0,0),this.node.forwardY.setValueAtTime(0,0),this.node.forwardZ.setValueAtTime(-1,0),this.node.upX.setValueAtTime(0,0),this.node.upY.setValueAtTime(1,0),this.node.upZ.setValueAtTime(0,0)}}class BaseAudioElement extends EventTarget{constructor(e){super(),this.minDistance=1,this.maxDistance=10,this.rolloff=1,this.transitionTime=.5,this.position=e}setAudioProperties(e,t,i,n){this.minDistance=e,this.maxDistance=t,this.transitionTime=n,this.rolloff=i}get currentTime(){throw new Error("Not implemented in base class")}setTarget(e){this.position&&(this.position.setTarget(e,this.currentTime,this.transitionTime),this.update())}update(){this.position&&this.position.update(this.currentTime)}}class BaseSpatializer extends BaseAudioElement{constructor(e,t,i,n){super(n),this.id=e,this.destination=t,this.audio=i,this.volume=1,this.pan=0}dispose(){this.audio.pause(),this.position=null,this.audio=null,this.destination=null,this.id=null}setAudioOutputDevice(e){this.audio.setSinkId&&this.audio.setSinkId(e)}get currentTime(){return this.destination.currentTime}update(){super.update();const e=this.destination.position.x,t=this.destination.position.y,i=this.position.x-e,n=this.position.y-t,s=Math.sqrt(i*i+n*n),a=project(s,this.destination.minDistance,this.destination.maxDistance);this.volume=1-clamp(a,0,1),this.pan=s>0?i/s:0}}class VolumeOnlySpatializer extends BaseSpatializer{constructor(e,t,i){super(e,t,i,new InterpolatedPosition),this.audio.play(),Object.seal(this)}update(){super.update(),this.audio.volume=this.volume}}const audioActivityEvt=Object.assign(new Event("audioActivity",{id:null,isActive:!1})),activityCounterMin=0,activityCounterMax=60,activityCounterThresh=5;function frequencyToIndex(e,t,i){var n=t/2;return clamp(Math.round(e/n*i),0,i)}function analyserFrequencyAverage(e,t,i,n,s){const a=e.context.sampleRate,o=frequencyToIndex(i,a,s),r=frequencyToIndex(n,a,s),l=r-o;let c=0;for(let e=o;e<r;++e)c+=t[e];return 0===l?0:c/l}class BaseAnalyzedSpatializer extends BaseSpatializer{constructor(e,t,i,n,s,a){super(e,t,i,n),this.audio.volume=0,this.bufferSize=s,this.buffer=new Float32Array(this.bufferSize),this.analyser=this.destination.audioContext.createAnalyser(),this.analyser.fftSize=2*this.bufferSize,this.analyser.smoothingTimeConstant=.2,this.inNode=a,this.wasActive=!1,this.lastAudible=!0,this.activityCounter=0,this.stream=null,this.source=null}update(){if(super.update(),!this.source)try{this.stream||(this.stream=this.audio.mozCaptureStream?this.audio.mozCaptureStream():this.audio.captureStream()),this.stream.active&&(this.source=this.destination.audioContext.createMediaStreamSource(this.stream),this.source.connect(this.analyser),this.source.connect(this.inNode))}catch(e){console.warn("Source isn't available yet. Will retry in a moment. Reason: ",e)}if(this.source){this.analyser.getFloatFrequencyData(this.buffer);const e=1.1+analyserFrequencyAverage(this.analyser,this.buffer,85,255,this.bufferSize)/100;e>=.5&&this.activityCounter<60?this.activityCounter++:e<.5&&this.activityCounter>0&&this.activityCounter--;const t=this.activityCounter>5;this.wasActive!==t&&(this.wasActive=t,audioActivityEvt.id=this.id,audioActivityEvt.isActive=t,this.dispatchEvent(audioActivityEvt))}}dispose(){this.source&&(this.source.disconnect(this.analyser),this.source.disconnect(this.inNode)),this.source=null,this.stream=null,this.inNode=null,this.analyser=null,this.buffer=null,super.dispose()}}class BaseWebAudioSpatializer extends BaseAnalyzedSpatializer{constructor(e,t,i,n,s,a,o){super(e,t,i,n,s,a),this.outNode=o||a,this.outNode.connect(this.destination.audioContext.destination),this.inNode!==this.outNode&&this.inNode.connect(this.outNode)}dispose(){this.inNode!==this.outNode&&this.inNode.disconnect(this.outNode),this.outNode.disconnect(this.destination.audioContext.destination),this.outNode=null,super.dispose()}}class FullSpatializer extends BaseWebAudioSpatializer{constructor(e,t,i,n,s){const a=t.audioContext.createPanner();super(e,t,i,new WebAudioNodePosition(a,s),n,a),this.inNode.panningModel="HRTF",this.inNode.distanceModel="inverse",this.inNode.refDistance=t.minDistance,this.inNode.rolloffFactor=t.rolloff,this.inNode.coneInnerAngle=360,this.inNode.coneOuterAngle=0,this.inNode.coneOuterGain=0,Object.seal(this)}setAudioProperties(e,t,i,n){super.setAudioOutputDevice(e,t,i,n),this.inNode.refDistance=e,this.inNode.rolloffFactor=i}}class StereoSpatializer extends BaseWebAudioSpatializer{constructor(e,t,i,n){super(e,t,i,new InterpolatedPosition,n,t.audioContext.createStereoPanner(),t.audioContext.createGain()),Object.seal(this)}update(){super.update(),this.inNode.pan.value=this.pan,this.outNode.gain.value=this.volume}}class GoogleResonanceAudioScene extends InterpolatedPosition{constructor(e){super(),this.scene=new ResonanceAudio(e,{ambisonicOrder:3}),this.scene.output.connect(e.destination),this.position=new InterpolatedPosition,this.scene.setRoomProperties({width:10,height:5,depth:10},{left:"transparent",right:"transparent",front:"transparent",back:"transparent",down:"grass",up:"transparent"})}update(e){super.update(e),this.scene.setListenerPosition(this.x,0,this.y)}}class GoogleResonanceAudioSpatializer extends BaseAnalyzedSpatializer{constructor(e,t,i,n){const s=new InterpolatedPosition,a=t.position.scene.createSource({minDistance:t.minDistance,maxDistance:t.maxDistance});super(e,t,i,s,n,a.input),this.resNode=a}setAudioProperties(e,t,i,n){super.setAudioOutputDevice(e,t,i,n),this.resNode.setMinDistance(e),this.resNode.setMaxDistance(t)}update(){super.update(),this.resNode.setPosition(this.position.x,0,this.position.y)}dispose(){this.resNode=null,super.dispose()}}const forceInterpolatedPosition=!1,contextDestroyingEvt=new Event("contextDestroying"),contextDestroyedEvt=new Event("contextDestroyed");let hasWebAudioAPI=window.hasOwnProperty("AudioListener"),hasFullSpatializer=hasWebAudioAPI&&window.hasOwnProperty("PannerNode"),isLatestWebAudioAPI=hasWebAudioAPI&&AudioListener.prototype.hasOwnProperty("positionX"),attemptResonanceAPI=!0;class Destination extends BaseAudioElement{constructor(){super(null),this.audioContext=null}createContext(){if(!this.audioContext)try{if(hasWebAudioAPI){this.audioContext=new AudioContext;try{if(isLatestWebAudioAPI)try{attemptResonanceAPI&&(this.position=new GoogleResonanceAudioScene(this.audioContext))}catch(e){attemptResonanceAPI=!1,console.warn("Resonance Audio API not available!",e)}finally{attemptResonanceAPI||(this.position=new WebAudioNewListenerPosition(this.audioContext.listener,!1))}}catch(e){isLatestWebAudioAPI=!1,console.warn("No AudioListener.positionX property!",e)}finally{isLatestWebAudioAPI||(this.position=new WebAudioOldListenerPosition(this.audioContext.listener))}}}catch(e){hasWebAudioAPI=!1,console.warn("No WebAudio API!",e)}finally{hasWebAudioAPI||(this.audioContext=new MockAudioContext,this.position=new InterpolatedPosition)}}get currentTime(){return this.audioContext.currentTime}createSpatializer(e,t,i){const n=this._createSpatializer(e,t,i);return n&&n.setAudioProperties(this.minDistance,this.maxDistance,this.rolloff,this.transitionTime),n}_createSpatializer(e,t,i){try{if(hasWebAudioAPI)try{if(hasFullSpatializer)try{if(attemptResonanceAPI)return new GoogleResonanceAudioSpatializer(e,this,t,i)}catch(e){attemptResonanceAPI=!1,console.warn("Resonance Audio API not available!",e)}finally{if(!attemptResonanceAPI)return new FullSpatializer(e,this,t,i,!1)}}catch(e){hasFullSpatializer=!1,console.warn("No 360 spatializer support",e)}finally{if(!hasFullSpatializer)return new StereoSpatializer(e,this,t,i)}}catch(e){hasWebAudioAPI=!1,this.audioContext&&(this.dispatchEvent(contextDestroyingEvt),this.audioContext.close(),this.audioContext=null,this.position=null,this.dispatchEvent(contextDestroyedEvt)),console.warn("No WebAudio API!",e)}finally{if(!hasWebAudioAPI)return new VolumeOnlySpatializer(e,this,t)}}}const BUFFER_SIZE=1024,audioActivityEvt$1=Object.assign(new Event("audioActivity",{id:null,isActive:!1}));class AudioManager extends BaseAudioClient{constructor(){super(),this.onAudioActivity=e=>{audioActivityEvt$1.id=e.id,audioActivityEvt$1.isActive=e.isActive,this.dispatchEvent(audioActivityEvt$1)},this.sources=new Map,this.destination=new Destination;const e=[];this.destination.addEventListener("contextDestroying",()=>{for(let t of this.sources.values())t.removeEventListener("audioActivity",this.onAudioActivity),e.push({id:t.id,x:t.position.x,y:t.position.y,audio:t.audio}),t.dispose();this.sources.clear()}),this.destination.addEventListener("contextDestroyed",()=>{this.timer.stop(),this.destination.createContext();for(let t of e){this.createSource(t.id,t.audio).setTarget(t)}e.clear(),this.timer.start()}),this.timer=new RequestAnimationFrameTimer,this.timer.addEventListener("tick",()=>{this.destination.update();for(let e of this.sources.values())e.update()}),Object.seal(this)}setAudioProperties(e){this.destination.setAudioProperties(e.minDistance,e.maxDistance,e.rolloff,e.transitionTime);for(let t of this.sources.values())t.setAudioProperties(e.minDistance,e.maxDistance,e.rolloff,e.transitionTime)}start(){this.destination.createContext(),this.timer.start()}createSource(e,t){const i=this.destination.createSpatializer(e,t,1024);return i.addEventListener("audioActivity",this.onAudioActivity),this.sources.set(e,i),i}setAudioOutputDevice(e){for(let t of this.sources.values())t.setAudioOutputDevice(e)}removeSource(e){if(this.sources.has(e)){this.sources.get(e).dispose(),this.sources.delete(e)}}setUserPosition(e){if(this.sources.has(e.id)){this.sources.get(e.id).setTarget(e)}}setLocalPosition(e){this.destination.setTarget(e)}}const userInputs=new Map,audioActivityEvt$2=Object.assign(new Event("audioActivity"),{id:null,isActive:!1});function logger(e,t){const i=(...e)=>{"conference.endpoint_message_received"===t&&e.length>=2&&("e2e-ping-request"===e[1].type||"e2e-ping-response"===e[1].type||"stats"===e[1].type)||console.log(t,...e)};"localhost"===window.location.hostname&&e.addEventListener(t,i)}function setLoggers(e,t){for(let i of Object.values(t))-1===i.indexOf("audioLevelsChanged")&&logger(e,i)}class LibJitsiMeetClient extends BaseJitsiClient{constructor(){super(),this.connection=null,this.conference=null,this.audioClient=new AudioManager,this.audioClient.addEventListener("audioActivity",e=>{audioActivityEvt$2.id=e.id,audioActivityEvt$2.isActive=e.isActive,this.dispatchEvent(audioActivityEvt$2)}),Object.seal(this)}async initializeAsync(e,t,i){await import(`//${window.location.host}/lib/jquery.min.js`),await import(`https://${e}/libs/lib-jitsi-meet.min.js`),t=t.toLocaleLowerCase(),JitsiMeetJS.setLogLevel(JitsiMeetJS.logLevels.ERROR),JitsiMeetJS.init(),this.connection=new JitsiMeetJS.JitsiConnection(null,null,{hosts:{domain:e,muc:"conference."+e},serviceUrl:`https://${e}/http-bind`,enableLipSync:!0});const{CONNECTION_ESTABLISHED:n,CONNECTION_FAILED:s,CONNECTION_DISCONNECTED:a}=JitsiMeetJS.events.connection;setLoggers(this.connection,JitsiMeetJS.events.connection);const o=e=>{this.conference=this.connection.initJitsiConference(t,{openBridgeChannel:!0});const{TRACK_ADDED:n,TRACK_REMOVED:s,CONFERENCE_JOINED:a,CONFERENCE_LEFT:o,USER_JOINED:r,USER_LEFT:l,DISPLAY_NAME_CHANGED:c,ENDPOINT_MESSAGE_RECEIVED:u,DATA_CHANNEL_OPENED:d}=JitsiMeetJS.events.conference;setLoggers(this.conference,JitsiMeetJS.events.conference),this.conference.addEventListener(a,async()=>{const e=this.conference.myUserId();this.dispatchEvent(Object.assign(new Event("videoConferenceJoined"),{id:e,roomName:t,displayName:i}))}),this.conference.addEventListener(o,()=>{this.dispatchEvent(Object.assign(new Event("videoConferenceLeft"),{roomName:t}))});const h=(e,t)=>{const i=e.getParticipantId()||this.localUser,n=e.getType()+"MuteStatusChanged",s=Object.assign(new Event(n),{id:i,muted:t});this.dispatchEvent(s)},p=e=>{h(e,e.isMuted())};this.conference.addEventListener(r,(e,t)=>{const i=Object.assign(new Event("participantJoined"),{id:e,displayName:t.getDisplayName()});this.dispatchEvent(i)}),this.conference.addEventListener(l,e=>{const t=Object.assign(new Event("participantLeft"),{id:e});this.dispatchEvent(t)}),this.conference.addEventListener(c,(e,t)=>{const i=Object.assign(new Event("displayNameChange"),{id:e,displayName:t});this.dispatchEvent(i)}),this.conference.addEventListener(n,e=>{const t=e.getParticipantId()||this.localUser,i=e.isLocal(),n=e.getType(),s=n.firstLetterToUpper();setLoggers(e,JitsiMeetJS.events.track),e.addEventListener(JitsiMeetJS.events.track.TRACK_MUTE_CHANGED,p);const a=tag(s,autoPlay(!i),muted(i),srcObject(e.stream));userInputs.has(t)||userInputs.set(t,{audio:null,video:null});const o=userInputs.get(t);!!o[n]&&o[n].dispose(),o[n]=e,i||"audio"!==n||this.audioClient.createSource(t,a),this.dispatchEvent(Object.assign(new Event(n+"Added"),{id:t,element:a})),h(e,!1)}),this.conference.addEventListener(s,e=>{const t=e.getParticipantId()||this.localUser,i=e.isLocal(),n=e.getType();if(userInputs.has(t)){const i=userInputs.get(t);i[n]===e&&(i[n]=null)}i||"audio"!==n||this.audioClient.removeSource(t),e.dispose(),h(e,!0),this.dispatchEvent(Object.assign(new Event(n+"Removed"),{id:t}))}),this.conference.addEventListener(u,(e,t)=>{this.rxGameData({user:e,data:t})}),this.conference.join()},r=e=>{console.error("Connection failed",e),l()},l=()=>{this.connection.removeEventListener(n,o),this.connection.removeEventListener(s,r),this.connection.removeEventListener(a,l)};this.connection.addEventListener(n,o),this.connection.addEventListener(s,r),this.connection.addEventListener(a,l),setLoggers(JitsiMeetJS.mediaDevices,JitsiMeetJS.events.mediaDevices),this.connection.connect()}txGameData(e,t){this.conference.sendMessage(t,e)}rxGameData(e){e.data.hax===APP_FINGERPRINT&&this.receiveMessageFrom(e.user.getId(),e.data.command,e.data.value)}leave(){if(this.conference){if(null!==this.localUser&&userInputs.has(this.localUser)){const e=userInputs.get(this.localUser);e.audio&&this.conference.removeTrack(e.audio),e.video&&this.conference.removeTrack(e.video)}const e=this.conference.leave();return e.then(()=>this.connection.disconnect()),e}}async getAvailableDevicesAsync(){const e=await new Promise((e,t)=>{try{JitsiMeetJS.mediaDevices.enumerateDevices(e)}catch(e){t(e)}});return{audioOutput:e.filter(e=>"audiooutput"===e.kind),audioInput:e.filter(e=>"audioinput"===e.kind),videoInput:e.filter(e=>"videoinput"===e.kind)}}async getAudioOutputDevicesAsync(){const e=await this.getAvailableDevicesAsync();return e&&e.audioOutput||[]}async getCurrentAudioOutputDeviceAsync(){const e=JitsiMeetJS.mediaDevices.getAudioOutputDevice(),t=(await this.getAudioOutputDevicesAsync()).filter(t=>t.deviceId===e);return 0===t.length?null:t[0]}setAudioOutputDevice(e){JitsiMeetJS.mediaDevices.setAudioOutputDevice(e.deviceId),this.audioClient.setAudioOutputDevice(e.deviceId)}getCurrentMediaTrack(e){return null!==this.localUser&&userInputs.has(this.localUser)&&userInputs.get(this.localUser)[e]||null}async getAudioInputDevicesAsync(){const e=await this.getAvailableDevicesAsync();return e&&e.audioInput||[]}async getCurrentAudioInputDeviceAsync(){const e=this.getCurrentMediaTrack("audio"),t=(await this.getAudioInputDevicesAsync()).filter(t=>null!==e&&t.deviceId===e.deviceId);return 0===t.length?null:t[0]}taskOf(e){return this.when(e,e=>e.id===this.localUser,5e3)}async toggleAudioAsync(){const e=this.taskOf("audioMuteStatusChanged"),t=this.getCurrentMediaTrack("audio");if(t){t.isMuted()?await t.unmute():await t.mute()}else{const e=await this.getAudioInputDevicesAsync();if(0===e.length)throw new Error("No audio input devices available");await this.setAudioInputDeviceAsync(e[0])}return await e}async setAudioInputDeviceAsync(e){const t=this.getCurrentMediaTrack("audio");if(t){const e=this.taskOf("audioRemoved");this.conference.removeTrack(t),await e}if(e){const t=this.taskOf("audioAdded"),i=await JitsiMeetJS.createLocalTracks({devices:["audio"],micDeviceId:e.deviceId});for(let e of i)this.conference.addTrack(e);await t}}async getVideoInputDevicesAsync(){const e=await this.getAvailableDevicesAsync();return e&&e.videoInput||[]}async getCurrentVideoInputDeviceAsync(){const e=this.getCurrentMediaTrack("video"),t=(await this.getVideoInputDevicesAsync()).filter(t=>null!==e&&t.deviceId===e.deviceId);return 0===t.length?null:t[0]}async toggleVideoAsync(){const e=this.when("videoMuteStatusChanged",e=>e.id===this.this.localUser,5e3);if(this.getCurrentMediaTrack("video"))await this.setVideoInputDeviceAsync(null);else{const e=await this.getVideoInputDevicesAsync();if(0===e.length)throw new Error("No video input devices available");await this.setVideoInputDeviceAsync(e[0])}return await e}async setVideoInputDeviceAsync(e){const t=this.getCurrentMediaTrack("video");if(t){const e=this.taskOf("videoRemoved");this.conference.removeTrack(t),await e}if(e){const t=this.taskOf("videoAdded"),i=await JitsiMeetJS.createLocalTracks({devices:["video"],cameraDeviceId:e.deviceId});for(let e of i)this.conference.addTrack(e);await t}}setDisplayName(e){this.conference.setDisplayName(e)}setAvatarURL(e){throw new Error("Not implemented in base class")}isMediaMuted(e){const t=this.getCurrentMediaTrack(e);return null===t||t.isMuted()}async isAudioMutedAsync(){return this.isMediaMuted("audio")}async isVideoMutedAsync(){return this.isMediaMuted("video")}startAudio(){this.audioClient.start()}userIDs(){return Object.keys(this.conference.participants)}userExists(e){return!!this.conference.participants[e]}users(){return Object.keys(this.conference.participants).map(e=>[e,this.conference.participants[e].getDisplayName()])}}const{login:login}=init(JITSI_HOST,new LibJitsiMeetClient);function adLink(e,t,i){return A(href(e),target("_blank"),rel("noopener"),ariaLabel(t.replace("GitHub","Git Hub")),title(t),Span(className("icon icon-"+i),role("presentation")))}login.content.append(H2("Made by"),P(adLink("https://www.seanmcbeth.com","Sean T. McBeth","shrink"),"Sean T. McBeth"),P(adLink("https://twitter.com/Sean_McBeth","Follow Sean on Twitter","twitter"),"Follow @Sean_McBeth on Twitter"));
